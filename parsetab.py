
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programrightASSIGNleftANDORleftLESSGREATEREQUALSleftPLUSMINUSleftTIMESDIVIDEAND APOST ASSIGN BOOL BOOLEAN CHAR COMMA COMMENT COMMENTBLOCK DEFINE DIVIDE DO ELSE EOF EQUALS FLOAT FLOATINGPOINT GREATER HEADER IDENTIFIER IF INCLUDE INT INTEGER LBRACE LBRACKET LESS LETTER LPAREN MINUS MODULUS NOT OR PLUS POINT POUND QUOTE RBRACE RBRACKET RETURN RPAREN SEMICOLON STRING TIMES VOID WHILE\n    program : function program\n            | external-declaration program\n            | empty\n    \n    external-declaration : type assignment SEMICOLON\n                         | array_usage SEMICOLON\n                         | type array_usage SEMICOLON\n                         | macro_definition\n                         | file_inclusion\n    \n    declaration : type assignment SEMICOLON\n                | assignment SEMICOLON\n                | function_call SEMICOLON\n                | array_usage SEMICOLON\n                | type array_usage SEMICOLON\n    \n    assignment : IDENTIFIER ASSIGN assignment\n               | IDENTIFIER ASSIGN function_call\n               | IDENTIFIER ASSIGN array_usage\n               | array_usage ASSIGN assignment\n               | IDENTIFIER COMMA assignment\n               | INTEGER COMMA assignment\n               | IDENTIFIER PLUS assignment\n               | IDENTIFIER MINUS assignment\n               | IDENTIFIER TIMES assignment\n               | IDENTIFIER DIVIDE assignment\n               | IDENTIFIER MODULUS assignment\n               | INTEGER PLUS assignment\n               | INTEGER MINUS assignment\n               | INTEGER TIMES assignment\n               | INTEGER DIVIDE assignment\n               | INTEGER MODULUS assignment\n               | APOST assignment APOST\n               | LPAREN assignment RPAREN\n               | MINUS assignment\n               | INTEGER PLUS PLUS\n               | IDENTIFIER PLUS PLUS\n               | array_usage PLUS PLUS\n               | INTEGER MINUS MINUS\n               | IDENTIFIER MINUS MINUS\n               | array_usage MINUS MINUS\n               | BOOLEAN\n               | FLOATINGPOINT\n               | INTEGER\n               | STRING\n               | IDENTIFIER\n               | LETTER\n    \n    function_call : IDENTIFIER LPAREN RPAREN\n                  | IDENTIFIER LPAREN assignment RPAREN\n    \n    type : INT\n         | FLOAT\n         | CHAR\n         | VOID\n    \n    array_usage : IDENTIFIER LBRACKET assignment RBRACKET\n    \n    function : type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement\n    argument_list_option : argument_list\n                         | empty\n    argument_list : argument_list COMMA argument\n                  | argument\n    argument : type IDENTIFIER\n    compound_statement : LBRACE statement_list RBRACE\n    statement_list : statement_list statement\n                   | empty\n    statement : iteration_statement\n              | declaration\n              | selection_statement\n              | return-statement\n    \n    iteration_statement : WHILE LPAREN expression RPAREN compound_statement\n                        | WHILE LPAREN expression RPAREN statement\n                        | DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON\n                        | DO statement WHILE LPAREN expression RPAREN SEMICOLON\n    \n    selection_statement : IF LPAREN expression RPAREN compound_statement\n                        | IF LPAREN expression RPAREN statement\n                        | IF LPAREN expression RPAREN compound_statement ELSE compound_statement\n                        | IF LPAREN expression RPAREN compound_statement ELSE statement\n                        | IF LPAREN expression RPAREN statement ELSE compound_statement\n                        | IF LPAREN expression RPAREN statement ELSE statement\n    \n    return-statement : RETURN SEMICOLON\n                     | RETURN expression SEMICOLON\n    \n    expression : expression EQUALS expression\n               | expression LESS expression\n               | expression GREATER expression\n               | expression AND expression\n               | expression OR expression\n               | NOT expression\n               | assignment\n               | array_usage\n    \n    macro_definition : POUND DEFINE IDENTIFIER assignment\n    \n    file_inclusion : POUND INCLUDE LESS HEADER GREATER\n                   | POUND INCLUDE QUOTE HEADER QUOTE\n    empty :'
    
_lr_action_items = {'$end':([0,1,2,3,4,8,9,15,16,21,24,25,26,27,29,41,43,44,54,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,98,99,100,103,107,108,],[-88,0,-88,-88,-3,-7,-8,-1,-2,-41,-39,-40,-42,-44,-5,-43,-4,-6,-32,-43,-14,-15,-16,-18,-34,-20,-37,-21,-22,-23,-24,-31,-17,-35,-38,-19,-33,-25,-36,-26,-27,-28,-29,-30,-51,-85,-86,-87,-52,-45,-46,-58,]),'INT':([0,2,3,8,9,21,24,25,26,27,29,32,41,43,44,54,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,98,99,100,101,103,105,106,107,108,109,110,111,112,113,115,127,128,129,131,139,140,142,149,152,158,159,162,163,166,167,168,169,170,171,172,173,],[10,10,10,-7,-8,-41,-39,-40,-42,-44,-5,10,-43,-4,-6,-32,-43,-14,-15,-16,-18,-34,-20,-37,-21,-22,-23,-24,-31,-17,-35,-38,-19,-33,-25,-36,-26,-27,-28,-29,-30,-51,-85,10,-86,-87,-52,-88,-45,10,-60,-46,-58,-59,-61,-62,-63,-64,10,-10,-11,-12,-75,-9,-13,-76,10,10,-65,-66,-69,-70,10,10,-67,-68,-71,-72,-74,-73,]),'FLOAT':([0,2,3,8,9,21,24,25,26,27,29,32,41,43,44,54,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,98,99,100,101,103,105,106,107,108,109,110,111,112,113,115,127,128,129,131,139,140,142,149,152,158,159,162,163,166,167,168,169,170,171,172,173,],[11,11,11,-7,-8,-41,-39,-40,-42,-44,-5,11,-43,-4,-6,-32,-43,-14,-15,-16,-18,-34,-20,-37,-21,-22,-23,-24,-31,-17,-35,-38,-19,-33,-25,-36,-26,-27,-28,-29,-30,-51,-85,11,-86,-87,-52,-88,-45,11,-60,-46,-58,-59,-61,-62,-63,-64,11,-10,-11,-12,-75,-9,-13,-76,11,11,-65,-66,-69,-70,11,11,-67,-68,-71,-72,-74,-73,]),'CHAR':([0,2,3,8,9,21,24,25,26,27,29,32,41,43,44,54,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,98,99,100,101,103,105,106,107,108,109,110,111,112,113,115,127,128,129,131,139,140,142,149,152,158,159,162,163,166,167,168,169,170,171,172,173,],[12,12,12,-7,-8,-41,-39,-40,-42,-44,-5,12,-43,-4,-6,-32,-43,-14,-15,-16,-18,-34,-20,-37,-21,-22,-23,-24,-31,-17,-35,-38,-19,-33,-25,-36,-26,-27,-28,-29,-30,-51,-85,12,-86,-87,-52,-88,-45,12,-60,-46,-58,-59,-61,-62,-63,-64,12,-10,-11,-12,-75,-9,-13,-76,12,12,-65,-66,-69,-70,12,12,-67,-68,-71,-72,-74,-73,]),'VOID':([0,2,3,8,9,21,24,25,26,27,29,32,41,43,44,54,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,98,99,100,101,103,105,106,107,108,109,110,111,112,113,115,127,128,129,131,139,140,142,149,152,158,159,162,163,166,167,168,169,170,171,172,173,],[13,13,13,-7,-8,-41,-39,-40,-42,-44,-5,13,-43,-4,-6,-32,-43,-14,-15,-16,-18,-34,-20,-37,-21,-22,-23,-24,-31,-17,-35,-38,-19,-33,-25,-36,-26,-27,-28,-29,-30,-51,-85,13,-86,-87,-52,-88,-45,13,-60,-46,-58,-59,-61,-62,-63,-64,13,-10,-11,-12,-75,-9,-13,-76,13,13,-65,-66,-69,-70,13,13,-67,-68,-71,-72,-74,-73,]),'IDENTIFIER':([0,2,3,5,8,9,10,11,12,13,18,21,22,23,24,25,26,27,28,29,30,33,34,35,36,37,38,39,41,43,44,45,48,49,50,51,52,53,54,57,60,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,97,98,99,100,101,103,105,106,107,108,109,110,111,112,113,115,116,121,122,127,128,129,130,131,133,139,140,142,143,144,145,146,147,149,150,151,152,158,159,162,163,166,167,168,169,170,171,172,173,],[6,6,6,17,-7,-8,-47,-48,-49,-50,41,-41,41,41,-39,-40,-42,-44,41,-5,57,65,41,41,41,41,41,41,-43,-4,-6,41,41,41,41,41,41,41,-32,41,94,-43,-14,-15,-16,-18,-34,-20,-37,-21,-22,-23,-24,-31,-17,-35,-38,-19,-33,-25,-36,-26,-27,-28,-29,-30,-51,-85,41,-86,-87,-52,-88,-45,65,-60,-46,-58,-59,-61,-62,-63,-64,65,41,41,41,-10,-11,-12,41,-75,41,-9,-13,-76,41,41,41,41,41,65,41,41,65,-65,-66,-69,-70,65,65,-67,-68,-71,-72,-74,-73,]),'POUND':([0,2,3,8,9,21,24,25,26,27,29,41,43,44,54,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,98,99,100,103,107,108,],[14,14,14,-7,-8,-41,-39,-40,-42,-44,-5,-43,-4,-6,-32,-43,-14,-15,-16,-18,-34,-20,-37,-21,-22,-23,-24,-31,-17,-35,-38,-19,-33,-25,-36,-26,-27,-28,-29,-30,-51,-85,-86,-87,-52,-45,-46,-58,]),'INTEGER':([5,10,11,12,13,18,22,23,28,33,34,35,36,37,38,39,45,48,49,50,51,52,53,57,72,84,97,101,105,106,108,109,110,111,112,113,115,116,121,122,127,128,129,130,131,133,139,140,142,143,144,145,146,147,149,150,151,152,158,159,162,163,166,167,168,169,170,171,172,173,],[21,-47,-48,-49,-50,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-88,21,-60,-58,-59,-61,-62,-63,-64,21,21,21,21,-10,-11,-12,21,-75,21,-9,-13,-76,21,21,21,21,21,21,21,21,21,-65,-66,-69,-70,21,21,-67,-68,-71,-72,-74,-73,]),'APOST':([5,10,11,12,13,18,21,22,23,24,25,26,27,28,33,34,35,36,37,38,39,41,45,48,49,50,51,52,53,54,55,57,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,101,103,105,106,107,108,109,110,111,112,113,115,116,121,122,127,128,129,130,131,133,139,140,142,143,144,145,146,147,149,150,151,152,158,159,162,163,166,167,168,169,170,171,172,173,],[23,-47,-48,-49,-50,23,-41,23,23,-39,-40,-42,-44,23,23,23,23,23,23,23,23,-43,23,23,23,23,23,23,23,-32,89,23,-43,-14,-15,-16,-18,-34,-20,-37,-21,-22,-23,-24,-31,-17,-35,-38,-19,-33,-25,-36,-26,-27,-28,-29,-30,-51,23,-88,-45,23,-60,-46,-58,-59,-61,-62,-63,-64,23,23,23,23,-10,-11,-12,23,-75,23,-9,-13,-76,23,23,23,23,23,23,23,23,23,-65,-66,-69,-70,23,23,-67,-68,-71,-72,-74,-73,]),'LPAREN':([5,10,11,12,13,17,18,22,23,28,33,34,35,36,37,38,39,45,48,49,50,51,52,53,57,65,72,84,97,101,105,106,108,109,110,111,112,113,114,115,116,120,121,122,127,128,129,130,131,133,137,138,139,140,142,143,144,145,146,147,149,150,151,152,158,159,162,163,166,167,168,169,170,171,172,173,],[18,-47,-48,-49,-50,32,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,97,18,18,18,-88,18,-60,-58,-59,-61,-62,-63,-64,122,18,18,130,18,18,-10,-11,-12,18,-75,18,150,151,-9,-13,-76,18,18,18,18,18,18,18,18,18,-65,-66,-69,-70,18,18,-67,-68,-71,-72,-74,-73,]),'MINUS':([5,10,11,12,13,17,18,20,21,22,23,28,33,34,35,36,37,38,39,41,42,45,47,48,49,50,51,52,53,57,65,68,72,84,90,97,101,105,106,108,109,110,111,112,113,115,116,119,121,122,126,127,128,129,130,131,133,135,139,140,142,143,144,145,146,147,149,150,151,152,158,159,162,163,166,167,168,169,170,171,172,173,],[22,-47,-48,-49,-50,36,22,47,50,22,22,22,22,22,22,72,22,22,22,36,47,22,80,22,22,84,22,22,22,22,36,47,22,22,-51,22,-88,22,-60,-58,-59,-61,-62,-63,-64,22,22,47,22,22,47,-10,-11,-12,22,-75,22,47,-9,-13,-76,22,22,22,22,22,22,22,22,22,-65,-66,-69,-70,22,22,-67,-68,-71,-72,-74,-73,]),'BOOLEAN':([5,10,11,12,13,18,22,23,28,33,34,35,36,37,38,39,45,48,49,50,51,52,53,57,72,84,97,101,105,106,108,109,110,111,112,113,115,116,121,122,127,128,129,130,131,133,139,140,142,143,144,145,146,147,149,150,151,152,158,159,162,163,166,167,168,169,170,171,172,173,],[24,-47,-48,-49,-50,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-88,24,-60,-58,-59,-61,-62,-63,-64,24,24,24,24,-10,-11,-12,24,-75,24,-9,-13,-76,24,24,24,24,24,24,24,24,24,-65,-66,-69,-70,24,24,-67,-68,-71,-72,-74,-73,]),'FLOATINGPOINT':([5,10,11,12,13,18,22,23,28,33,34,35,36,37,38,39,45,48,49,50,51,52,53,57,72,84,97,101,105,106,108,109,110,111,112,113,115,116,121,122,127,128,129,130,131,133,139,140,142,143,144,145,146,147,149,150,151,152,158,159,162,163,166,167,168,169,170,171,172,173,],[25,-47,-48,-49,-50,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-88,25,-60,-58,-59,-61,-62,-63,-64,25,25,25,25,-10,-11,-12,25,-75,25,-9,-13,-76,25,25,25,25,25,25,25,25,25,-65,-66,-69,-70,25,25,-67,-68,-71,-72,-74,-73,]),'STRING':([5,10,11,12,13,18,22,23,28,33,34,35,36,37,38,39,45,48,49,50,51,52,53,57,72,84,97,101,105,106,108,109,110,111,112,113,115,116,121,122,127,128,129,130,131,133,139,140,142,143,144,145,146,147,149,150,151,152,158,159,162,163,166,167,168,169,170,171,172,173,],[26,-47,-48,-49,-50,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-88,26,-60,-58,-59,-61,-62,-63,-64,26,26,26,26,-10,-11,-12,26,-75,26,-9,-13,-76,26,26,26,26,26,26,26,26,26,-65,-66,-69,-70,26,26,-67,-68,-71,-72,-74,-73,]),'LETTER':([5,10,11,12,13,18,22,23,28,33,34,35,36,37,38,39,45,48,49,50,51,52,53,57,72,84,97,101,105,106,108,109,110,111,112,113,115,116,121,122,127,128,129,130,131,133,139,140,142,143,144,145,146,147,149,150,151,152,158,159,162,163,166,167,168,169,170,171,172,173,],[27,-47,-48,-49,-50,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-88,27,-60,-58,-59,-61,-62,-63,-64,27,27,27,27,-10,-11,-12,27,-75,27,-9,-13,-76,27,27,27,27,27,27,27,27,27,-65,-66,-69,-70,27,27,-67,-68,-71,-72,-74,-73,]),'LBRACKET':([6,17,41,65,],[28,28,28,28,]),'SEMICOLON':([7,17,19,20,21,24,25,26,27,41,54,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,103,107,117,118,119,121,125,126,132,134,135,148,153,154,155,156,157,164,165,],[29,-43,43,44,-41,-39,-40,-42,-44,-43,-32,-43,-14,-15,-16,-18,-34,-20,-37,-21,-22,-23,-24,-31,-17,-35,-38,-19,-33,-25,-36,-26,-27,-28,-29,-30,-51,-45,-46,127,128,129,131,139,140,142,-83,-84,-82,-77,-78,-79,-80,-81,168,169,]),'DEFINE':([14,],[30,]),'INCLUDE':([14,],[31,]),'ASSIGN':([17,20,41,42,65,68,90,119,126,135,],[33,45,33,45,33,45,-51,45,45,45,]),'COMMA':([17,21,41,62,64,65,94,102,],[34,48,34,96,-56,34,-57,-55,]),'PLUS':([17,20,21,35,41,42,46,49,65,68,90,119,126,135,],[35,46,49,70,35,46,79,82,35,46,-51,46,46,46,]),'TIMES':([17,21,41,65,],[37,51,37,37,]),'DIVIDE':([17,21,41,65,],[38,52,38,38,]),'MODULUS':([17,21,41,65,],[39,53,39,39,]),'RPAREN':([21,24,25,26,27,32,40,41,54,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,97,102,103,104,107,134,135,136,141,148,153,154,155,156,157,160,161,],[-41,-39,-40,-42,-44,-88,77,-43,-32,95,-53,-54,-56,-43,-14,-15,-16,-18,-34,-20,-37,-21,-22,-23,-24,-31,-17,-35,-38,-19,-33,-25,-36,-26,-27,-28,-29,-30,-51,-57,103,-55,-45,107,-46,-83,-84,149,152,-82,-77,-78,-79,-80,-81,164,165,]),'RBRACKET':([21,24,25,26,27,41,54,56,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,103,107,],[-41,-39,-40,-42,-44,-43,-32,90,-43,-14,-15,-16,-18,-34,-20,-37,-21,-22,-23,-24,-31,-17,-35,-38,-19,-33,-25,-36,-26,-27,-28,-29,-30,-51,-45,-46,]),'EQUALS':([21,24,25,26,27,41,54,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,103,107,132,134,135,136,141,148,153,154,155,156,157,160,161,],[-41,-39,-40,-42,-44,-43,-32,-43,-14,-15,-16,-18,-34,-20,-37,-21,-22,-23,-24,-31,-17,-35,-38,-19,-33,-25,-36,-26,-27,-28,-29,-30,-51,-45,-46,143,-83,-84,143,143,143,-77,-78,-79,143,143,143,143,]),'LESS':([21,24,25,26,27,31,41,54,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,103,107,132,134,135,136,141,148,153,154,155,156,157,160,161,],[-41,-39,-40,-42,-44,58,-43,-32,-43,-14,-15,-16,-18,-34,-20,-37,-21,-22,-23,-24,-31,-17,-35,-38,-19,-33,-25,-36,-26,-27,-28,-29,-30,-51,-45,-46,144,-83,-84,144,144,144,-77,-78,-79,144,144,144,144,]),'GREATER':([21,24,25,26,27,41,54,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,103,107,132,134,135,136,141,148,153,154,155,156,157,160,161,],[-41,-39,-40,-42,-44,-43,-32,-43,-14,-15,-16,-18,-34,-20,-37,-21,-22,-23,-24,-31,-17,-35,-38,-19,-33,-25,-36,-26,-27,-28,-29,-30,-51,98,-45,-46,145,-83,-84,145,145,145,-77,-78,-79,145,145,145,145,]),'AND':([21,24,25,26,27,41,54,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,103,107,132,134,135,136,141,148,153,154,155,156,157,160,161,],[-41,-39,-40,-42,-44,-43,-32,-43,-14,-15,-16,-18,-34,-20,-37,-21,-22,-23,-24,-31,-17,-35,-38,-19,-33,-25,-36,-26,-27,-28,-29,-30,-51,-45,-46,146,-83,-84,146,146,146,-77,-78,-79,-80,-81,146,146,]),'OR':([21,24,25,26,27,41,54,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,103,107,132,134,135,136,141,148,153,154,155,156,157,160,161,],[-41,-39,-40,-42,-44,-43,-32,-43,-14,-15,-16,-18,-34,-20,-37,-21,-22,-23,-24,-31,-17,-35,-38,-19,-33,-25,-36,-26,-27,-28,-29,-30,-51,-45,-46,147,-83,-84,147,147,147,-77,-78,-79,-80,-81,147,147,]),'QUOTE':([31,93,],[59,99,]),'HEADER':([58,59,],[92,93,]),'LBRACE':([95,115,149,152,166,167,],[101,101,101,101,101,101,]),'RBRACE':([101,105,106,108,109,110,111,112,113,127,128,129,131,139,140,142,158,159,162,163,168,169,170,171,172,173,],[-88,108,-60,-58,-59,-61,-62,-63,-64,-10,-11,-12,-75,-9,-13,-76,-65,-66,-69,-70,-67,-68,-71,-72,-74,-73,]),'WHILE':([101,105,106,108,109,110,111,112,113,115,123,124,127,128,129,131,139,140,142,149,152,158,159,162,163,166,167,168,169,170,171,172,173,],[-88,114,-60,-58,-59,-61,-62,-63,-64,114,137,138,-10,-11,-12,-75,-9,-13,-76,114,114,-65,-66,-69,-70,114,114,-67,-68,-71,-72,-74,-73,]),'DO':([101,105,106,108,109,110,111,112,113,115,127,128,129,131,139,140,142,149,152,158,159,162,163,166,167,168,169,170,171,172,173,],[-88,115,-60,-58,-59,-61,-62,-63,-64,115,-10,-11,-12,-75,-9,-13,-76,115,115,-65,-66,-69,-70,115,115,-67,-68,-71,-72,-74,-73,]),'IF':([101,105,106,108,109,110,111,112,113,115,127,128,129,131,139,140,142,149,152,158,159,162,163,166,167,168,169,170,171,172,173,],[-88,120,-60,-58,-59,-61,-62,-63,-64,120,-10,-11,-12,-75,-9,-13,-76,120,120,-65,-66,-69,-70,120,120,-67,-68,-71,-72,-74,-73,]),'RETURN':([101,105,106,108,109,110,111,112,113,115,127,128,129,131,139,140,142,149,152,158,159,162,163,166,167,168,169,170,171,172,173,],[-88,121,-60,-58,-59,-61,-62,-63,-64,121,-10,-11,-12,-75,-9,-13,-76,121,121,-65,-66,-69,-70,121,121,-67,-68,-71,-72,-74,-73,]),'ELSE':([108,110,111,112,113,127,128,129,131,139,140,142,158,159,162,163,168,169,170,171,172,173,],[-58,-61,-62,-63,-64,-10,-11,-12,-75,-9,-13,-76,-65,-66,166,167,-67,-68,-71,-72,-74,-73,]),'NOT':([121,122,130,133,143,144,145,146,147,150,151,],[133,133,133,133,133,133,133,133,133,133,133,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,3,],[1,15,16,]),'function':([0,2,3,],[2,2,2,]),'external-declaration':([0,2,3,],[3,3,3,]),'empty':([0,2,3,32,101,],[4,4,4,63,106,]),'type':([0,2,3,32,96,105,115,149,152,166,167,],[5,5,5,60,60,116,116,116,116,116,116,]),'array_usage':([0,2,3,5,18,22,23,28,33,34,35,36,37,38,39,45,48,49,50,51,52,53,57,72,84,97,105,115,116,121,122,130,133,143,144,145,146,147,149,150,151,152,166,167,],[7,7,7,20,42,42,42,42,68,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,119,119,126,135,135,135,135,135,135,135,135,135,119,135,135,119,119,119,]),'macro_definition':([0,2,3,],[8,8,8,]),'file_inclusion':([0,2,3,],[9,9,9,]),'assignment':([5,18,22,23,28,33,34,35,36,37,38,39,45,48,49,50,51,52,53,57,72,84,97,105,115,116,121,122,130,133,143,144,145,146,147,149,150,151,152,166,167,],[19,40,54,55,56,66,69,71,73,74,75,76,78,81,83,85,86,87,88,91,54,54,104,117,117,125,134,134,134,134,134,134,134,134,134,117,134,134,117,117,117,]),'argument_list_option':([32,],[61,]),'argument_list':([32,],[62,]),'argument':([32,96,],[64,102,]),'function_call':([33,105,115,149,152,166,167,],[67,118,118,118,118,118,118,]),'compound_statement':([95,115,149,152,166,167,],[100,123,158,162,170,173,]),'statement_list':([101,],[105,]),'statement':([105,115,149,152,166,167,],[109,124,159,163,171,172,]),'iteration_statement':([105,115,149,152,166,167,],[110,110,110,110,110,110,]),'declaration':([105,115,149,152,166,167,],[111,111,111,111,111,111,]),'selection_statement':([105,115,149,152,166,167,],[112,112,112,112,112,112,]),'return-statement':([105,115,149,152,166,167,],[113,113,113,113,113,113,]),'expression':([121,122,130,133,143,144,145,146,147,150,151,],[132,136,141,148,153,154,155,156,157,160,161,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> function program','program',2,'p_program','parserC.py',19),
  ('program -> external-declaration program','program',2,'p_program','parserC.py',20),
  ('program -> empty','program',1,'p_program','parserC.py',21),
  ('external-declaration -> type assignment SEMICOLON','external-declaration',3,'p_external_declaration','parserC.py',27),
  ('external-declaration -> array_usage SEMICOLON','external-declaration',2,'p_external_declaration','parserC.py',28),
  ('external-declaration -> type array_usage SEMICOLON','external-declaration',3,'p_external_declaration','parserC.py',29),
  ('external-declaration -> macro_definition','external-declaration',1,'p_external_declaration','parserC.py',30),
  ('external-declaration -> file_inclusion','external-declaration',1,'p_external_declaration','parserC.py',31),
  ('declaration -> type assignment SEMICOLON','declaration',3,'p_declaration','parserC.py',37),
  ('declaration -> assignment SEMICOLON','declaration',2,'p_declaration','parserC.py',38),
  ('declaration -> function_call SEMICOLON','declaration',2,'p_declaration','parserC.py',39),
  ('declaration -> array_usage SEMICOLON','declaration',2,'p_declaration','parserC.py',40),
  ('declaration -> type array_usage SEMICOLON','declaration',3,'p_declaration','parserC.py',41),
  ('assignment -> IDENTIFIER ASSIGN assignment','assignment',3,'p_assignment','parserC.py',47),
  ('assignment -> IDENTIFIER ASSIGN function_call','assignment',3,'p_assignment','parserC.py',48),
  ('assignment -> IDENTIFIER ASSIGN array_usage','assignment',3,'p_assignment','parserC.py',49),
  ('assignment -> array_usage ASSIGN assignment','assignment',3,'p_assignment','parserC.py',50),
  ('assignment -> IDENTIFIER COMMA assignment','assignment',3,'p_assignment','parserC.py',51),
  ('assignment -> INTEGER COMMA assignment','assignment',3,'p_assignment','parserC.py',52),
  ('assignment -> IDENTIFIER PLUS assignment','assignment',3,'p_assignment','parserC.py',53),
  ('assignment -> IDENTIFIER MINUS assignment','assignment',3,'p_assignment','parserC.py',54),
  ('assignment -> IDENTIFIER TIMES assignment','assignment',3,'p_assignment','parserC.py',55),
  ('assignment -> IDENTIFIER DIVIDE assignment','assignment',3,'p_assignment','parserC.py',56),
  ('assignment -> IDENTIFIER MODULUS assignment','assignment',3,'p_assignment','parserC.py',57),
  ('assignment -> INTEGER PLUS assignment','assignment',3,'p_assignment','parserC.py',58),
  ('assignment -> INTEGER MINUS assignment','assignment',3,'p_assignment','parserC.py',59),
  ('assignment -> INTEGER TIMES assignment','assignment',3,'p_assignment','parserC.py',60),
  ('assignment -> INTEGER DIVIDE assignment','assignment',3,'p_assignment','parserC.py',61),
  ('assignment -> INTEGER MODULUS assignment','assignment',3,'p_assignment','parserC.py',62),
  ('assignment -> APOST assignment APOST','assignment',3,'p_assignment','parserC.py',63),
  ('assignment -> LPAREN assignment RPAREN','assignment',3,'p_assignment','parserC.py',64),
  ('assignment -> MINUS assignment','assignment',2,'p_assignment','parserC.py',65),
  ('assignment -> INTEGER PLUS PLUS','assignment',3,'p_assignment','parserC.py',66),
  ('assignment -> IDENTIFIER PLUS PLUS','assignment',3,'p_assignment','parserC.py',67),
  ('assignment -> array_usage PLUS PLUS','assignment',3,'p_assignment','parserC.py',68),
  ('assignment -> INTEGER MINUS MINUS','assignment',3,'p_assignment','parserC.py',69),
  ('assignment -> IDENTIFIER MINUS MINUS','assignment',3,'p_assignment','parserC.py',70),
  ('assignment -> array_usage MINUS MINUS','assignment',3,'p_assignment','parserC.py',71),
  ('assignment -> BOOLEAN','assignment',1,'p_assignment','parserC.py',72),
  ('assignment -> FLOATINGPOINT','assignment',1,'p_assignment','parserC.py',73),
  ('assignment -> INTEGER','assignment',1,'p_assignment','parserC.py',74),
  ('assignment -> STRING','assignment',1,'p_assignment','parserC.py',75),
  ('assignment -> IDENTIFIER','assignment',1,'p_assignment','parserC.py',76),
  ('assignment -> LETTER','assignment',1,'p_assignment','parserC.py',77),
  ('function_call -> IDENTIFIER LPAREN RPAREN','function_call',3,'p_function_call','parserC.py',83),
  ('function_call -> IDENTIFIER LPAREN assignment RPAREN','function_call',4,'p_function_call','parserC.py',84),
  ('type -> INT','type',1,'p_type','parserC.py',90),
  ('type -> FLOAT','type',1,'p_type','parserC.py',91),
  ('type -> CHAR','type',1,'p_type','parserC.py',92),
  ('type -> VOID','type',1,'p_type','parserC.py',93),
  ('array_usage -> IDENTIFIER LBRACKET assignment RBRACKET','array_usage',4,'p_array_usage','parserC.py',99),
  ('function -> type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement','function',6,'p_function','parserC.py',105),
  ('argument_list_option -> argument_list','argument_list_option',1,'p_function','parserC.py',106),
  ('argument_list_option -> empty','argument_list_option',1,'p_function','parserC.py',107),
  ('argument_list -> argument_list COMMA argument','argument_list',3,'p_function','parserC.py',108),
  ('argument_list -> argument','argument_list',1,'p_function','parserC.py',109),
  ('argument -> type IDENTIFIER','argument',2,'p_function','parserC.py',110),
  ('compound_statement -> LBRACE statement_list RBRACE','compound_statement',3,'p_function','parserC.py',111),
  ('statement_list -> statement_list statement','statement_list',2,'p_function','parserC.py',112),
  ('statement_list -> empty','statement_list',1,'p_function','parserC.py',113),
  ('statement -> iteration_statement','statement',1,'p_function','parserC.py',114),
  ('statement -> declaration','statement',1,'p_function','parserC.py',115),
  ('statement -> selection_statement','statement',1,'p_function','parserC.py',116),
  ('statement -> return-statement','statement',1,'p_function','parserC.py',117),
  ('iteration_statement -> WHILE LPAREN expression RPAREN compound_statement','iteration_statement',5,'p_iteration_statement','parserC.py',123),
  ('iteration_statement -> WHILE LPAREN expression RPAREN statement','iteration_statement',5,'p_iteration_statement','parserC.py',124),
  ('iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON','iteration_statement',7,'p_iteration_statement','parserC.py',125),
  ('iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON','iteration_statement',7,'p_iteration_statement','parserC.py',126),
  ('selection_statement -> IF LPAREN expression RPAREN compound_statement','selection_statement',5,'p_selection_statement','parserC.py',132),
  ('selection_statement -> IF LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement','parserC.py',133),
  ('selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement','selection_statement',7,'p_selection_statement','parserC.py',134),
  ('selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement','selection_statement',7,'p_selection_statement','parserC.py',135),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement','selection_statement',7,'p_selection_statement','parserC.py',136),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE statement','selection_statement',7,'p_selection_statement','parserC.py',137),
  ('return-statement -> RETURN SEMICOLON','return-statement',2,'p_return_statement','parserC.py',143),
  ('return-statement -> RETURN expression SEMICOLON','return-statement',3,'p_return_statement','parserC.py',144),
  ('expression -> expression EQUALS expression','expression',3,'p_expression','parserC.py',150),
  ('expression -> expression LESS expression','expression',3,'p_expression','parserC.py',151),
  ('expression -> expression GREATER expression','expression',3,'p_expression','parserC.py',152),
  ('expression -> expression AND expression','expression',3,'p_expression','parserC.py',153),
  ('expression -> expression OR expression','expression',3,'p_expression','parserC.py',154),
  ('expression -> NOT expression','expression',2,'p_expression','parserC.py',155),
  ('expression -> assignment','expression',1,'p_expression','parserC.py',156),
  ('expression -> array_usage','expression',1,'p_expression','parserC.py',157),
  ('macro_definition -> POUND DEFINE IDENTIFIER assignment','macro_definition',4,'p_macro_definition','parserC.py',163),
  ('file_inclusion -> POUND INCLUDE LESS HEADER GREATER','file_inclusion',5,'p_file_inclusion','parserC.py',169),
  ('file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE','file_inclusion',5,'p_file_inclusion','parserC.py',170),
  ('empty -> <empty>','empty',0,'p_empty','parserC.py',190),
]
