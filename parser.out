Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BOOL
    COMMENT
    COMMENTBLOCK
    EOF
    POINT

Grammar

Rule 0     S' -> program
Rule 1     program -> function program
Rule 2     program -> external-declaration program
Rule 3     program -> empty
Rule 4     external-declaration -> type assignment SEMICOLON
Rule 5     external-declaration -> array_usage SEMICOLON
Rule 6     external-declaration -> type array_usage SEMICOLON
Rule 7     external-declaration -> macro_definition
Rule 8     external-declaration -> file_inclusion
Rule 9     declaration -> type assignment SEMICOLON
Rule 10    declaration -> assignment SEMICOLON
Rule 11    declaration -> function_call SEMICOLON
Rule 12    declaration -> array_usage SEMICOLON
Rule 13    declaration -> type array_usage SEMICOLON
Rule 14    assignment -> IDENTIFIER ASSIGN assignment
Rule 15    assignment -> IDENTIFIER ASSIGN function_call
Rule 16    assignment -> IDENTIFIER ASSIGN array_usage
Rule 17    assignment -> array_usage ASSIGN assignment
Rule 18    assignment -> IDENTIFIER COMMA assignment
Rule 19    assignment -> INTEGER COMMA assignment
Rule 20    assignment -> IDENTIFIER PLUS assignment
Rule 21    assignment -> IDENTIFIER MINUS assignment
Rule 22    assignment -> IDENTIFIER TIMES assignment
Rule 23    assignment -> IDENTIFIER DIVIDE assignment
Rule 24    assignment -> IDENTIFIER MODULUS assignment
Rule 25    assignment -> INTEGER PLUS assignment
Rule 26    assignment -> INTEGER MINUS assignment
Rule 27    assignment -> INTEGER TIMES assignment
Rule 28    assignment -> INTEGER DIVIDE assignment
Rule 29    assignment -> INTEGER MODULUS assignment
Rule 30    assignment -> APOST assignment APOST
Rule 31    assignment -> LPAREN assignment RPAREN
Rule 32    assignment -> MINUS assignment
Rule 33    assignment -> INTEGER PLUS PLUS
Rule 34    assignment -> IDENTIFIER PLUS PLUS
Rule 35    assignment -> array_usage PLUS PLUS
Rule 36    assignment -> INTEGER MINUS MINUS
Rule 37    assignment -> IDENTIFIER MINUS MINUS
Rule 38    assignment -> array_usage MINUS MINUS
Rule 39    assignment -> BOOLEAN
Rule 40    assignment -> FLOATINGPOINT
Rule 41    assignment -> INTEGER
Rule 42    assignment -> STRING
Rule 43    assignment -> IDENTIFIER
Rule 44    assignment -> LETTER
Rule 45    function_call -> IDENTIFIER LPAREN RPAREN
Rule 46    function_call -> IDENTIFIER LPAREN assignment RPAREN
Rule 47    type -> INT
Rule 48    type -> FLOAT
Rule 49    type -> CHAR
Rule 50    type -> VOID
Rule 51    array_usage -> IDENTIFIER LBRACKET assignment RBRACKET
Rule 52    function -> type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement
Rule 53    argument_list_option -> argument_list
Rule 54    argument_list_option -> empty
Rule 55    argument_list -> argument_list COMMA argument
Rule 56    argument_list -> argument
Rule 57    argument -> type IDENTIFIER
Rule 58    compound_statement -> LBRACE statement_list RBRACE
Rule 59    statement_list -> statement_list statement
Rule 60    statement_list -> empty
Rule 61    statement -> iteration_statement
Rule 62    statement -> declaration
Rule 63    statement -> selection_statement
Rule 64    statement -> return-statement
Rule 65    iteration_statement -> WHILE LPAREN expression RPAREN compound_statement
Rule 66    iteration_statement -> WHILE LPAREN expression RPAREN statement
Rule 67    iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON
Rule 68    iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON
Rule 69    selection_statement -> IF LPAREN expression RPAREN compound_statement
Rule 70    selection_statement -> IF LPAREN expression RPAREN statement
Rule 71    selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement
Rule 72    selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement
Rule 73    selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement
Rule 74    selection_statement -> IF LPAREN expression RPAREN statement ELSE statement
Rule 75    return-statement -> RETURN SEMICOLON
Rule 76    return-statement -> RETURN expression SEMICOLON
Rule 77    expression -> expression EQUALS expression
Rule 78    expression -> expression LESS expression
Rule 79    expression -> expression GREATER expression
Rule 80    expression -> expression AND expression
Rule 81    expression -> expression OR expression
Rule 82    expression -> NOT expression
Rule 83    expression -> assignment
Rule 84    expression -> array_usage
Rule 85    macro_definition -> POUND DEFINE IDENTIFIER assignment
Rule 86    file_inclusion -> POUND INCLUDE LESS HEADER GREATER
Rule 87    file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE
Rule 88    empty -> <empty>

Terminals, with rules where they appear

AND                  : 80
APOST                : 30 30
ASSIGN               : 14 15 16 17
BOOL                 : 
BOOLEAN              : 39
CHAR                 : 49
COMMA                : 18 19 55
COMMENT              : 
COMMENTBLOCK         : 
DEFINE               : 85
DIVIDE               : 23 28
DO                   : 67 68
ELSE                 : 71 72 73 74
EOF                  : 
EQUALS               : 77
FLOAT                : 48
FLOATINGPOINT        : 40
GREATER              : 79 86
HEADER               : 86 87
IDENTIFIER           : 14 15 16 18 20 21 22 23 24 34 37 43 45 46 51 52 57 85
IF                   : 69 70 71 72 73 74
INCLUDE              : 86 87
INT                  : 47
INTEGER              : 19 25 26 27 28 29 33 36 41
LBRACE               : 58
LBRACKET             : 51
LESS                 : 78 86
LETTER               : 44
LPAREN               : 31 45 46 52 65 66 67 68 69 70 71 72 73 74
MINUS                : 21 26 32 36 36 37 37 38 38
MODULUS              : 24 29
NOT                  : 82
OR                   : 81
PLUS                 : 20 25 33 33 34 34 35 35
POINT                : 
POUND                : 85 86 87
QUOTE                : 87 87
RBRACE               : 58
RBRACKET             : 51
RETURN               : 75 76
RPAREN               : 31 45 46 52 65 66 67 68 69 70 71 72 73 74
SEMICOLON            : 4 5 6 9 10 11 12 13 67 68 75 76
STRING               : 42
TIMES                : 22 27
VOID                 : 50
WHILE                : 65 66 67 68
error                : 

Nonterminals, with rules where they appear

argument             : 55 56
argument_list        : 53 55
argument_list_option : 52
array_usage          : 5 6 12 13 16 17 35 38 84
assignment           : 4 9 10 14 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 46 51 83 85
compound_statement   : 52 65 67 69 71 71 72 73
declaration          : 62
empty                : 3 54 60
expression           : 65 66 67 68 69 70 71 72 73 74 76 77 77 78 78 79 79 80 80 81 81 82
external-declaration : 2
file_inclusion       : 8
function             : 1
function_call        : 11 15
iteration_statement  : 61
macro_definition     : 7
program              : 1 2 0
return-statement     : 64
selection_statement  : 63
statement            : 59 66 68 70 72 73 74 74
statement_list       : 58 59
type                 : 4 6 9 13 52 57

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . function program
    (2) program -> . external-declaration program
    (3) program -> . empty
    (52) function -> . type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement
    (4) external-declaration -> . type assignment SEMICOLON
    (5) external-declaration -> . array_usage SEMICOLON
    (6) external-declaration -> . type array_usage SEMICOLON
    (7) external-declaration -> . macro_definition
    (8) external-declaration -> . file_inclusion
    (88) empty -> .
    (47) type -> . INT
    (48) type -> . FLOAT
    (49) type -> . CHAR
    (50) type -> . VOID
    (51) array_usage -> . IDENTIFIER LBRACKET assignment RBRACKET
    (85) macro_definition -> . POUND DEFINE IDENTIFIER assignment
    (86) file_inclusion -> . POUND INCLUDE LESS HEADER GREATER
    (87) file_inclusion -> . POUND INCLUDE QUOTE HEADER QUOTE

    $end            reduce using rule 88 (empty -> .)
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    VOID            shift and go to state 13
    IDENTIFIER      shift and go to state 6
    POUND           shift and go to state 14

    program                        shift and go to state 1
    function                       shift and go to state 2
    external-declaration           shift and go to state 3
    empty                          shift and go to state 4
    type                           shift and go to state 5
    array_usage                    shift and go to state 7
    macro_definition               shift and go to state 8
    file_inclusion                 shift and go to state 9

state 1

    (0) S' -> program .



state 2

    (1) program -> function . program
    (1) program -> . function program
    (2) program -> . external-declaration program
    (3) program -> . empty
    (52) function -> . type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement
    (4) external-declaration -> . type assignment SEMICOLON
    (5) external-declaration -> . array_usage SEMICOLON
    (6) external-declaration -> . type array_usage SEMICOLON
    (7) external-declaration -> . macro_definition
    (8) external-declaration -> . file_inclusion
    (88) empty -> .
    (47) type -> . INT
    (48) type -> . FLOAT
    (49) type -> . CHAR
    (50) type -> . VOID
    (51) array_usage -> . IDENTIFIER LBRACKET assignment RBRACKET
    (85) macro_definition -> . POUND DEFINE IDENTIFIER assignment
    (86) file_inclusion -> . POUND INCLUDE LESS HEADER GREATER
    (87) file_inclusion -> . POUND INCLUDE QUOTE HEADER QUOTE

    $end            reduce using rule 88 (empty -> .)
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    VOID            shift and go to state 13
    IDENTIFIER      shift and go to state 6
    POUND           shift and go to state 14

    function                       shift and go to state 2
    program                        shift and go to state 15
    external-declaration           shift and go to state 3
    empty                          shift and go to state 4
    type                           shift and go to state 5
    array_usage                    shift and go to state 7
    macro_definition               shift and go to state 8
    file_inclusion                 shift and go to state 9

state 3

    (2) program -> external-declaration . program
    (1) program -> . function program
    (2) program -> . external-declaration program
    (3) program -> . empty
    (52) function -> . type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement
    (4) external-declaration -> . type assignment SEMICOLON
    (5) external-declaration -> . array_usage SEMICOLON
    (6) external-declaration -> . type array_usage SEMICOLON
    (7) external-declaration -> . macro_definition
    (8) external-declaration -> . file_inclusion
    (88) empty -> .
    (47) type -> . INT
    (48) type -> . FLOAT
    (49) type -> . CHAR
    (50) type -> . VOID
    (51) array_usage -> . IDENTIFIER LBRACKET assignment RBRACKET
    (85) macro_definition -> . POUND DEFINE IDENTIFIER assignment
    (86) file_inclusion -> . POUND INCLUDE LESS HEADER GREATER
    (87) file_inclusion -> . POUND INCLUDE QUOTE HEADER QUOTE

    $end            reduce using rule 88 (empty -> .)
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    VOID            shift and go to state 13
    IDENTIFIER      shift and go to state 6
    POUND           shift and go to state 14

    external-declaration           shift and go to state 3
    program                        shift and go to state 16
    function                       shift and go to state 2
    empty                          shift and go to state 4
    type                           shift and go to state 5
    array_usage                    shift and go to state 7
    macro_definition               shift and go to state 8
    file_inclusion                 shift and go to state 9

state 4

    (3) program -> empty .

    $end            reduce using rule 3 (program -> empty .)


state 5

    (52) function -> type . IDENTIFIER LPAREN argument_list_option RPAREN compound_statement
    (4) external-declaration -> type . assignment SEMICOLON
    (6) external-declaration -> type . array_usage SEMICOLON
    (14) assignment -> . IDENTIFIER ASSIGN assignment
    (15) assignment -> . IDENTIFIER ASSIGN function_call
    (16) assignment -> . IDENTIFIER ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . IDENTIFIER COMMA assignment
    (19) assignment -> . INTEGER COMMA assignment
    (20) assignment -> . IDENTIFIER PLUS assignment
    (21) assignment -> . IDENTIFIER MINUS assignment
    (22) assignment -> . IDENTIFIER TIMES assignment
    (23) assignment -> . IDENTIFIER DIVIDE assignment
    (24) assignment -> . IDENTIFIER MODULUS assignment
    (25) assignment -> . INTEGER PLUS assignment
    (26) assignment -> . INTEGER MINUS assignment
    (27) assignment -> . INTEGER TIMES assignment
    (28) assignment -> . INTEGER DIVIDE assignment
    (29) assignment -> . INTEGER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . INTEGER PLUS PLUS
    (34) assignment -> . IDENTIFIER PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . INTEGER MINUS MINUS
    (37) assignment -> . IDENTIFIER MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . BOOLEAN
    (40) assignment -> . FLOATINGPOINT
    (41) assignment -> . INTEGER
    (42) assignment -> . STRING
    (43) assignment -> . IDENTIFIER
    (44) assignment -> . LETTER
    (51) array_usage -> . IDENTIFIER LBRACKET assignment RBRACKET

    IDENTIFIER      shift and go to state 17
    INTEGER         shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    BOOLEAN         shift and go to state 24
    FLOATINGPOINT   shift and go to state 25
    STRING          shift and go to state 26
    LETTER          shift and go to state 27

    assignment                     shift and go to state 19
    array_usage                    shift and go to state 20

state 6

    (51) array_usage -> IDENTIFIER . LBRACKET assignment RBRACKET

    LBRACKET        shift and go to state 28


state 7

    (5) external-declaration -> array_usage . SEMICOLON

    SEMICOLON       shift and go to state 29


state 8

    (7) external-declaration -> macro_definition .

    INT             reduce using rule 7 (external-declaration -> macro_definition .)
    FLOAT           reduce using rule 7 (external-declaration -> macro_definition .)
    CHAR            reduce using rule 7 (external-declaration -> macro_definition .)
    VOID            reduce using rule 7 (external-declaration -> macro_definition .)
    IDENTIFIER      reduce using rule 7 (external-declaration -> macro_definition .)
    POUND           reduce using rule 7 (external-declaration -> macro_definition .)
    $end            reduce using rule 7 (external-declaration -> macro_definition .)


state 9

    (8) external-declaration -> file_inclusion .

    INT             reduce using rule 8 (external-declaration -> file_inclusion .)
    FLOAT           reduce using rule 8 (external-declaration -> file_inclusion .)
    CHAR            reduce using rule 8 (external-declaration -> file_inclusion .)
    VOID            reduce using rule 8 (external-declaration -> file_inclusion .)
    IDENTIFIER      reduce using rule 8 (external-declaration -> file_inclusion .)
    POUND           reduce using rule 8 (external-declaration -> file_inclusion .)
    $end            reduce using rule 8 (external-declaration -> file_inclusion .)


state 10

    (47) type -> INT .

    IDENTIFIER      reduce using rule 47 (type -> INT .)
    INTEGER         reduce using rule 47 (type -> INT .)
    APOST           reduce using rule 47 (type -> INT .)
    LPAREN          reduce using rule 47 (type -> INT .)
    MINUS           reduce using rule 47 (type -> INT .)
    BOOLEAN         reduce using rule 47 (type -> INT .)
    FLOATINGPOINT   reduce using rule 47 (type -> INT .)
    STRING          reduce using rule 47 (type -> INT .)
    LETTER          reduce using rule 47 (type -> INT .)


state 11

    (48) type -> FLOAT .

    IDENTIFIER      reduce using rule 48 (type -> FLOAT .)
    INTEGER         reduce using rule 48 (type -> FLOAT .)
    APOST           reduce using rule 48 (type -> FLOAT .)
    LPAREN          reduce using rule 48 (type -> FLOAT .)
    MINUS           reduce using rule 48 (type -> FLOAT .)
    BOOLEAN         reduce using rule 48 (type -> FLOAT .)
    FLOATINGPOINT   reduce using rule 48 (type -> FLOAT .)
    STRING          reduce using rule 48 (type -> FLOAT .)
    LETTER          reduce using rule 48 (type -> FLOAT .)


state 12

    (49) type -> CHAR .

    IDENTIFIER      reduce using rule 49 (type -> CHAR .)
    INTEGER         reduce using rule 49 (type -> CHAR .)
    APOST           reduce using rule 49 (type -> CHAR .)
    LPAREN          reduce using rule 49 (type -> CHAR .)
    MINUS           reduce using rule 49 (type -> CHAR .)
    BOOLEAN         reduce using rule 49 (type -> CHAR .)
    FLOATINGPOINT   reduce using rule 49 (type -> CHAR .)
    STRING          reduce using rule 49 (type -> CHAR .)
    LETTER          reduce using rule 49 (type -> CHAR .)


state 13

    (50) type -> VOID .

    IDENTIFIER      reduce using rule 50 (type -> VOID .)
    INTEGER         reduce using rule 50 (type -> VOID .)
    APOST           reduce using rule 50 (type -> VOID .)
    LPAREN          reduce using rule 50 (type -> VOID .)
    MINUS           reduce using rule 50 (type -> VOID .)
    BOOLEAN         reduce using rule 50 (type -> VOID .)
    FLOATINGPOINT   reduce using rule 50 (type -> VOID .)
    STRING          reduce using rule 50 (type -> VOID .)
    LETTER          reduce using rule 50 (type -> VOID .)


state 14

    (85) macro_definition -> POUND . DEFINE IDENTIFIER assignment
    (86) file_inclusion -> POUND . INCLUDE LESS HEADER GREATER
    (87) file_inclusion -> POUND . INCLUDE QUOTE HEADER QUOTE

    DEFINE          shift and go to state 30
    INCLUDE         shift and go to state 31


state 15

    (1) program -> function program .

    $end            reduce using rule 1 (program -> function program .)


state 16

    (2) program -> external-declaration program .

    $end            reduce using rule 2 (program -> external-declaration program .)


state 17

    (52) function -> type IDENTIFIER . LPAREN argument_list_option RPAREN compound_statement
    (14) assignment -> IDENTIFIER . ASSIGN assignment
    (15) assignment -> IDENTIFIER . ASSIGN function_call
    (16) assignment -> IDENTIFIER . ASSIGN array_usage
    (18) assignment -> IDENTIFIER . COMMA assignment
    (20) assignment -> IDENTIFIER . PLUS assignment
    (21) assignment -> IDENTIFIER . MINUS assignment
    (22) assignment -> IDENTIFIER . TIMES assignment
    (23) assignment -> IDENTIFIER . DIVIDE assignment
    (24) assignment -> IDENTIFIER . MODULUS assignment
    (34) assignment -> IDENTIFIER . PLUS PLUS
    (37) assignment -> IDENTIFIER . MINUS MINUS
    (43) assignment -> IDENTIFIER .
    (51) array_usage -> IDENTIFIER . LBRACKET assignment RBRACKET

    LPAREN          shift and go to state 32
    ASSIGN          shift and go to state 33
    COMMA           shift and go to state 34
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULUS         shift and go to state 39
    SEMICOLON       reduce using rule 43 (assignment -> IDENTIFIER .)
    LBRACKET        shift and go to state 28


state 18

    (31) assignment -> LPAREN . assignment RPAREN
    (14) assignment -> . IDENTIFIER ASSIGN assignment
    (15) assignment -> . IDENTIFIER ASSIGN function_call
    (16) assignment -> . IDENTIFIER ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . IDENTIFIER COMMA assignment
    (19) assignment -> . INTEGER COMMA assignment
    (20) assignment -> . IDENTIFIER PLUS assignment
    (21) assignment -> . IDENTIFIER MINUS assignment
    (22) assignment -> . IDENTIFIER TIMES assignment
    (23) assignment -> . IDENTIFIER DIVIDE assignment
    (24) assignment -> . IDENTIFIER MODULUS assignment
    (25) assignment -> . INTEGER PLUS assignment
    (26) assignment -> . INTEGER MINUS assignment
    (27) assignment -> . INTEGER TIMES assignment
    (28) assignment -> . INTEGER DIVIDE assignment
    (29) assignment -> . INTEGER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . INTEGER PLUS PLUS
    (34) assignment -> . IDENTIFIER PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . INTEGER MINUS MINUS
    (37) assignment -> . IDENTIFIER MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . BOOLEAN
    (40) assignment -> . FLOATINGPOINT
    (41) assignment -> . INTEGER
    (42) assignment -> . STRING
    (43) assignment -> . IDENTIFIER
    (44) assignment -> . LETTER
    (51) array_usage -> . IDENTIFIER LBRACKET assignment RBRACKET

    IDENTIFIER      shift and go to state 41
    INTEGER         shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    BOOLEAN         shift and go to state 24
    FLOATINGPOINT   shift and go to state 25
    STRING          shift and go to state 26
    LETTER          shift and go to state 27

    assignment                     shift and go to state 40
    array_usage                    shift and go to state 42

state 19

    (4) external-declaration -> type assignment . SEMICOLON

    SEMICOLON       shift and go to state 43


state 20

    (6) external-declaration -> type array_usage . SEMICOLON
    (17) assignment -> array_usage . ASSIGN assignment
    (35) assignment -> array_usage . PLUS PLUS
    (38) assignment -> array_usage . MINUS MINUS

    SEMICOLON       shift and go to state 44
    ASSIGN          shift and go to state 45
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47


state 21

    (19) assignment -> INTEGER . COMMA assignment
    (25) assignment -> INTEGER . PLUS assignment
    (26) assignment -> INTEGER . MINUS assignment
    (27) assignment -> INTEGER . TIMES assignment
    (28) assignment -> INTEGER . DIVIDE assignment
    (29) assignment -> INTEGER . MODULUS assignment
    (33) assignment -> INTEGER . PLUS PLUS
    (36) assignment -> INTEGER . MINUS MINUS
    (41) assignment -> INTEGER .

    COMMA           shift and go to state 48
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    MODULUS         shift and go to state 53
    SEMICOLON       reduce using rule 41 (assignment -> INTEGER .)
    RPAREN          reduce using rule 41 (assignment -> INTEGER .)
    APOST           reduce using rule 41 (assignment -> INTEGER .)
    RBRACKET        reduce using rule 41 (assignment -> INTEGER .)
    INT             reduce using rule 41 (assignment -> INTEGER .)
    FLOAT           reduce using rule 41 (assignment -> INTEGER .)
    CHAR            reduce using rule 41 (assignment -> INTEGER .)
    VOID            reduce using rule 41 (assignment -> INTEGER .)
    IDENTIFIER      reduce using rule 41 (assignment -> INTEGER .)
    POUND           reduce using rule 41 (assignment -> INTEGER .)
    $end            reduce using rule 41 (assignment -> INTEGER .)
    EQUALS          reduce using rule 41 (assignment -> INTEGER .)
    LESS            reduce using rule 41 (assignment -> INTEGER .)
    GREATER         reduce using rule 41 (assignment -> INTEGER .)
    AND             reduce using rule 41 (assignment -> INTEGER .)
    OR              reduce using rule 41 (assignment -> INTEGER .)


state 22

    (32) assignment -> MINUS . assignment
    (14) assignment -> . IDENTIFIER ASSIGN assignment
    (15) assignment -> . IDENTIFIER ASSIGN function_call
    (16) assignment -> . IDENTIFIER ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . IDENTIFIER COMMA assignment
    (19) assignment -> . INTEGER COMMA assignment
    (20) assignment -> . IDENTIFIER PLUS assignment
    (21) assignment -> . IDENTIFIER MINUS assignment
    (22) assignment -> . IDENTIFIER TIMES assignment
    (23) assignment -> . IDENTIFIER DIVIDE assignment
    (24) assignment -> . IDENTIFIER MODULUS assignment
    (25) assignment -> . INTEGER PLUS assignment
    (26) assignment -> . INTEGER MINUS assignment
    (27) assignment -> . INTEGER TIMES assignment
    (28) assignment -> . INTEGER DIVIDE assignment
    (29) assignment -> . INTEGER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . INTEGER PLUS PLUS
    (34) assignment -> . IDENTIFIER PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . INTEGER MINUS MINUS
    (37) assignment -> . IDENTIFIER MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . BOOLEAN
    (40) assignment -> . FLOATINGPOINT
    (41) assignment -> . INTEGER
    (42) assignment -> . STRING
    (43) assignment -> . IDENTIFIER
    (44) assignment -> . LETTER
    (51) array_usage -> . IDENTIFIER LBRACKET assignment RBRACKET

    IDENTIFIER      shift and go to state 41
    INTEGER         shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    BOOLEAN         shift and go to state 24
    FLOATINGPOINT   shift and go to state 25
    STRING          shift and go to state 26
    LETTER          shift and go to state 27

    assignment                     shift and go to state 54
    array_usage                    shift and go to state 42

state 23

    (30) assignment -> APOST . assignment APOST
    (14) assignment -> . IDENTIFIER ASSIGN assignment
    (15) assignment -> . IDENTIFIER ASSIGN function_call
    (16) assignment -> . IDENTIFIER ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . IDENTIFIER COMMA assignment
    (19) assignment -> . INTEGER COMMA assignment
    (20) assignment -> . IDENTIFIER PLUS assignment
    (21) assignment -> . IDENTIFIER MINUS assignment
    (22) assignment -> . IDENTIFIER TIMES assignment
    (23) assignment -> . IDENTIFIER DIVIDE assignment
    (24) assignment -> . IDENTIFIER MODULUS assignment
    (25) assignment -> . INTEGER PLUS assignment
    (26) assignment -> . INTEGER MINUS assignment
    (27) assignment -> . INTEGER TIMES assignment
    (28) assignment -> . INTEGER DIVIDE assignment
    (29) assignment -> . INTEGER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . INTEGER PLUS PLUS
    (34) assignment -> . IDENTIFIER PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . INTEGER MINUS MINUS
    (37) assignment -> . IDENTIFIER MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . BOOLEAN
    (40) assignment -> . FLOATINGPOINT
    (41) assignment -> . INTEGER
    (42) assignment -> . STRING
    (43) assignment -> . IDENTIFIER
    (44) assignment -> . LETTER
    (51) array_usage -> . IDENTIFIER LBRACKET assignment RBRACKET

    IDENTIFIER      shift and go to state 41
    INTEGER         shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    BOOLEAN         shift and go to state 24
    FLOATINGPOINT   shift and go to state 25
    STRING          shift and go to state 26
    LETTER          shift and go to state 27

    assignment                     shift and go to state 55
    array_usage                    shift and go to state 42

state 24

    (39) assignment -> BOOLEAN .

    SEMICOLON       reduce using rule 39 (assignment -> BOOLEAN .)
    RPAREN          reduce using rule 39 (assignment -> BOOLEAN .)
    APOST           reduce using rule 39 (assignment -> BOOLEAN .)
    RBRACKET        reduce using rule 39 (assignment -> BOOLEAN .)
    INT             reduce using rule 39 (assignment -> BOOLEAN .)
    FLOAT           reduce using rule 39 (assignment -> BOOLEAN .)
    CHAR            reduce using rule 39 (assignment -> BOOLEAN .)
    VOID            reduce using rule 39 (assignment -> BOOLEAN .)
    IDENTIFIER      reduce using rule 39 (assignment -> BOOLEAN .)
    POUND           reduce using rule 39 (assignment -> BOOLEAN .)
    $end            reduce using rule 39 (assignment -> BOOLEAN .)
    EQUALS          reduce using rule 39 (assignment -> BOOLEAN .)
    LESS            reduce using rule 39 (assignment -> BOOLEAN .)
    GREATER         reduce using rule 39 (assignment -> BOOLEAN .)
    AND             reduce using rule 39 (assignment -> BOOLEAN .)
    OR              reduce using rule 39 (assignment -> BOOLEAN .)


state 25

    (40) assignment -> FLOATINGPOINT .

    SEMICOLON       reduce using rule 40 (assignment -> FLOATINGPOINT .)
    RPAREN          reduce using rule 40 (assignment -> FLOATINGPOINT .)
    APOST           reduce using rule 40 (assignment -> FLOATINGPOINT .)
    RBRACKET        reduce using rule 40 (assignment -> FLOATINGPOINT .)
    INT             reduce using rule 40 (assignment -> FLOATINGPOINT .)
    FLOAT           reduce using rule 40 (assignment -> FLOATINGPOINT .)
    CHAR            reduce using rule 40 (assignment -> FLOATINGPOINT .)
    VOID            reduce using rule 40 (assignment -> FLOATINGPOINT .)
    IDENTIFIER      reduce using rule 40 (assignment -> FLOATINGPOINT .)
    POUND           reduce using rule 40 (assignment -> FLOATINGPOINT .)
    $end            reduce using rule 40 (assignment -> FLOATINGPOINT .)
    EQUALS          reduce using rule 40 (assignment -> FLOATINGPOINT .)
    LESS            reduce using rule 40 (assignment -> FLOATINGPOINT .)
    GREATER         reduce using rule 40 (assignment -> FLOATINGPOINT .)
    AND             reduce using rule 40 (assignment -> FLOATINGPOINT .)
    OR              reduce using rule 40 (assignment -> FLOATINGPOINT .)


state 26

    (42) assignment -> STRING .

    SEMICOLON       reduce using rule 42 (assignment -> STRING .)
    RPAREN          reduce using rule 42 (assignment -> STRING .)
    APOST           reduce using rule 42 (assignment -> STRING .)
    RBRACKET        reduce using rule 42 (assignment -> STRING .)
    INT             reduce using rule 42 (assignment -> STRING .)
    FLOAT           reduce using rule 42 (assignment -> STRING .)
    CHAR            reduce using rule 42 (assignment -> STRING .)
    VOID            reduce using rule 42 (assignment -> STRING .)
    IDENTIFIER      reduce using rule 42 (assignment -> STRING .)
    POUND           reduce using rule 42 (assignment -> STRING .)
    $end            reduce using rule 42 (assignment -> STRING .)
    EQUALS          reduce using rule 42 (assignment -> STRING .)
    LESS            reduce using rule 42 (assignment -> STRING .)
    GREATER         reduce using rule 42 (assignment -> STRING .)
    AND             reduce using rule 42 (assignment -> STRING .)
    OR              reduce using rule 42 (assignment -> STRING .)


state 27

    (44) assignment -> LETTER .

    SEMICOLON       reduce using rule 44 (assignment -> LETTER .)
    RPAREN          reduce using rule 44 (assignment -> LETTER .)
    APOST           reduce using rule 44 (assignment -> LETTER .)
    RBRACKET        reduce using rule 44 (assignment -> LETTER .)
    INT             reduce using rule 44 (assignment -> LETTER .)
    FLOAT           reduce using rule 44 (assignment -> LETTER .)
    CHAR            reduce using rule 44 (assignment -> LETTER .)
    VOID            reduce using rule 44 (assignment -> LETTER .)
    IDENTIFIER      reduce using rule 44 (assignment -> LETTER .)
    POUND           reduce using rule 44 (assignment -> LETTER .)
    $end            reduce using rule 44 (assignment -> LETTER .)
    EQUALS          reduce using rule 44 (assignment -> LETTER .)
    LESS            reduce using rule 44 (assignment -> LETTER .)
    GREATER         reduce using rule 44 (assignment -> LETTER .)
    AND             reduce using rule 44 (assignment -> LETTER .)
    OR              reduce using rule 44 (assignment -> LETTER .)


state 28

    (51) array_usage -> IDENTIFIER LBRACKET . assignment RBRACKET
    (14) assignment -> . IDENTIFIER ASSIGN assignment
    (15) assignment -> . IDENTIFIER ASSIGN function_call
    (16) assignment -> . IDENTIFIER ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . IDENTIFIER COMMA assignment
    (19) assignment -> . INTEGER COMMA assignment
    (20) assignment -> . IDENTIFIER PLUS assignment
    (21) assignment -> . IDENTIFIER MINUS assignment
    (22) assignment -> . IDENTIFIER TIMES assignment
    (23) assignment -> . IDENTIFIER DIVIDE assignment
    (24) assignment -> . IDENTIFIER MODULUS assignment
    (25) assignment -> . INTEGER PLUS assignment
    (26) assignment -> . INTEGER MINUS assignment
    (27) assignment -> . INTEGER TIMES assignment
    (28) assignment -> . INTEGER DIVIDE assignment
    (29) assignment -> . INTEGER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . INTEGER PLUS PLUS
    (34) assignment -> . IDENTIFIER PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . INTEGER MINUS MINUS
    (37) assignment -> . IDENTIFIER MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . BOOLEAN
    (40) assignment -> . FLOATINGPOINT
    (41) assignment -> . INTEGER
    (42) assignment -> . STRING
    (43) assignment -> . IDENTIFIER
    (44) assignment -> . LETTER
    (51) array_usage -> . IDENTIFIER LBRACKET assignment RBRACKET

    IDENTIFIER      shift and go to state 41
    INTEGER         shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    BOOLEAN         shift and go to state 24
    FLOATINGPOINT   shift and go to state 25
    STRING          shift and go to state 26
    LETTER          shift and go to state 27

    assignment                     shift and go to state 56
    array_usage                    shift and go to state 42

state 29

    (5) external-declaration -> array_usage SEMICOLON .

    INT             reduce using rule 5 (external-declaration -> array_usage SEMICOLON .)
    FLOAT           reduce using rule 5 (external-declaration -> array_usage SEMICOLON .)
    CHAR            reduce using rule 5 (external-declaration -> array_usage SEMICOLON .)
    VOID            reduce using rule 5 (external-declaration -> array_usage SEMICOLON .)
    IDENTIFIER      reduce using rule 5 (external-declaration -> array_usage SEMICOLON .)
    POUND           reduce using rule 5 (external-declaration -> array_usage SEMICOLON .)
    $end            reduce using rule 5 (external-declaration -> array_usage SEMICOLON .)


state 30

    (85) macro_definition -> POUND DEFINE . IDENTIFIER assignment

    IDENTIFIER      shift and go to state 57


state 31

    (86) file_inclusion -> POUND INCLUDE . LESS HEADER GREATER
    (87) file_inclusion -> POUND INCLUDE . QUOTE HEADER QUOTE

    LESS            shift and go to state 58
    QUOTE           shift and go to state 59


state 32

    (52) function -> type IDENTIFIER LPAREN . argument_list_option RPAREN compound_statement
    (53) argument_list_option -> . argument_list
    (54) argument_list_option -> . empty
    (55) argument_list -> . argument_list COMMA argument
    (56) argument_list -> . argument
    (88) empty -> .
    (57) argument -> . type IDENTIFIER
    (47) type -> . INT
    (48) type -> . FLOAT
    (49) type -> . CHAR
    (50) type -> . VOID

    RPAREN          reduce using rule 88 (empty -> .)
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    VOID            shift and go to state 13

    type                           shift and go to state 60
    argument_list_option           shift and go to state 61
    argument_list                  shift and go to state 62
    empty                          shift and go to state 63
    argument                       shift and go to state 64

state 33

    (14) assignment -> IDENTIFIER ASSIGN . assignment
    (15) assignment -> IDENTIFIER ASSIGN . function_call
    (16) assignment -> IDENTIFIER ASSIGN . array_usage
    (14) assignment -> . IDENTIFIER ASSIGN assignment
    (15) assignment -> . IDENTIFIER ASSIGN function_call
    (16) assignment -> . IDENTIFIER ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . IDENTIFIER COMMA assignment
    (19) assignment -> . INTEGER COMMA assignment
    (20) assignment -> . IDENTIFIER PLUS assignment
    (21) assignment -> . IDENTIFIER MINUS assignment
    (22) assignment -> . IDENTIFIER TIMES assignment
    (23) assignment -> . IDENTIFIER DIVIDE assignment
    (24) assignment -> . IDENTIFIER MODULUS assignment
    (25) assignment -> . INTEGER PLUS assignment
    (26) assignment -> . INTEGER MINUS assignment
    (27) assignment -> . INTEGER TIMES assignment
    (28) assignment -> . INTEGER DIVIDE assignment
    (29) assignment -> . INTEGER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . INTEGER PLUS PLUS
    (34) assignment -> . IDENTIFIER PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . INTEGER MINUS MINUS
    (37) assignment -> . IDENTIFIER MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . BOOLEAN
    (40) assignment -> . FLOATINGPOINT
    (41) assignment -> . INTEGER
    (42) assignment -> . STRING
    (43) assignment -> . IDENTIFIER
    (44) assignment -> . LETTER
    (45) function_call -> . IDENTIFIER LPAREN RPAREN
    (46) function_call -> . IDENTIFIER LPAREN assignment RPAREN
    (51) array_usage -> . IDENTIFIER LBRACKET assignment RBRACKET

    IDENTIFIER      shift and go to state 65
    INTEGER         shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    BOOLEAN         shift and go to state 24
    FLOATINGPOINT   shift and go to state 25
    STRING          shift and go to state 26
    LETTER          shift and go to state 27

    assignment                     shift and go to state 66
    function_call                  shift and go to state 67
    array_usage                    shift and go to state 68

state 34

    (18) assignment -> IDENTIFIER COMMA . assignment
    (14) assignment -> . IDENTIFIER ASSIGN assignment
    (15) assignment -> . IDENTIFIER ASSIGN function_call
    (16) assignment -> . IDENTIFIER ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . IDENTIFIER COMMA assignment
    (19) assignment -> . INTEGER COMMA assignment
    (20) assignment -> . IDENTIFIER PLUS assignment
    (21) assignment -> . IDENTIFIER MINUS assignment
    (22) assignment -> . IDENTIFIER TIMES assignment
    (23) assignment -> . IDENTIFIER DIVIDE assignment
    (24) assignment -> . IDENTIFIER MODULUS assignment
    (25) assignment -> . INTEGER PLUS assignment
    (26) assignment -> . INTEGER MINUS assignment
    (27) assignment -> . INTEGER TIMES assignment
    (28) assignment -> . INTEGER DIVIDE assignment
    (29) assignment -> . INTEGER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . INTEGER PLUS PLUS
    (34) assignment -> . IDENTIFIER PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . INTEGER MINUS MINUS
    (37) assignment -> . IDENTIFIER MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . BOOLEAN
    (40) assignment -> . FLOATINGPOINT
    (41) assignment -> . INTEGER
    (42) assignment -> . STRING
    (43) assignment -> . IDENTIFIER
    (44) assignment -> . LETTER
    (51) array_usage -> . IDENTIFIER LBRACKET assignment RBRACKET

    IDENTIFIER      shift and go to state 41
    INTEGER         shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    BOOLEAN         shift and go to state 24
    FLOATINGPOINT   shift and go to state 25
    STRING          shift and go to state 26
    LETTER          shift and go to state 27

    assignment                     shift and go to state 69
    array_usage                    shift and go to state 42

state 35

    (20) assignment -> IDENTIFIER PLUS . assignment
    (34) assignment -> IDENTIFIER PLUS . PLUS
    (14) assignment -> . IDENTIFIER ASSIGN assignment
    (15) assignment -> . IDENTIFIER ASSIGN function_call
    (16) assignment -> . IDENTIFIER ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . IDENTIFIER COMMA assignment
    (19) assignment -> . INTEGER COMMA assignment
    (20) assignment -> . IDENTIFIER PLUS assignment
    (21) assignment -> . IDENTIFIER MINUS assignment
    (22) assignment -> . IDENTIFIER TIMES assignment
    (23) assignment -> . IDENTIFIER DIVIDE assignment
    (24) assignment -> . IDENTIFIER MODULUS assignment
    (25) assignment -> . INTEGER PLUS assignment
    (26) assignment -> . INTEGER MINUS assignment
    (27) assignment -> . INTEGER TIMES assignment
    (28) assignment -> . INTEGER DIVIDE assignment
    (29) assignment -> . INTEGER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . INTEGER PLUS PLUS
    (34) assignment -> . IDENTIFIER PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . INTEGER MINUS MINUS
    (37) assignment -> . IDENTIFIER MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . BOOLEAN
    (40) assignment -> . FLOATINGPOINT
    (41) assignment -> . INTEGER
    (42) assignment -> . STRING
    (43) assignment -> . IDENTIFIER
    (44) assignment -> . LETTER
    (51) array_usage -> . IDENTIFIER LBRACKET assignment RBRACKET

    PLUS            shift and go to state 70
    IDENTIFIER      shift and go to state 41
    INTEGER         shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    BOOLEAN         shift and go to state 24
    FLOATINGPOINT   shift and go to state 25
    STRING          shift and go to state 26
    LETTER          shift and go to state 27

    assignment                     shift and go to state 71
    array_usage                    shift and go to state 42

state 36

    (21) assignment -> IDENTIFIER MINUS . assignment
    (37) assignment -> IDENTIFIER MINUS . MINUS
    (14) assignment -> . IDENTIFIER ASSIGN assignment
    (15) assignment -> . IDENTIFIER ASSIGN function_call
    (16) assignment -> . IDENTIFIER ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . IDENTIFIER COMMA assignment
    (19) assignment -> . INTEGER COMMA assignment
    (20) assignment -> . IDENTIFIER PLUS assignment
    (21) assignment -> . IDENTIFIER MINUS assignment
    (22) assignment -> . IDENTIFIER TIMES assignment
    (23) assignment -> . IDENTIFIER DIVIDE assignment
    (24) assignment -> . IDENTIFIER MODULUS assignment
    (25) assignment -> . INTEGER PLUS assignment
    (26) assignment -> . INTEGER MINUS assignment
    (27) assignment -> . INTEGER TIMES assignment
    (28) assignment -> . INTEGER DIVIDE assignment
    (29) assignment -> . INTEGER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . INTEGER PLUS PLUS
    (34) assignment -> . IDENTIFIER PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . INTEGER MINUS MINUS
    (37) assignment -> . IDENTIFIER MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . BOOLEAN
    (40) assignment -> . FLOATINGPOINT
    (41) assignment -> . INTEGER
    (42) assignment -> . STRING
    (43) assignment -> . IDENTIFIER
    (44) assignment -> . LETTER
    (51) array_usage -> . IDENTIFIER LBRACKET assignment RBRACKET

    MINUS           shift and go to state 72
    IDENTIFIER      shift and go to state 41
    INTEGER         shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    BOOLEAN         shift and go to state 24
    FLOATINGPOINT   shift and go to state 25
    STRING          shift and go to state 26
    LETTER          shift and go to state 27

    assignment                     shift and go to state 73
    array_usage                    shift and go to state 42

state 37

    (22) assignment -> IDENTIFIER TIMES . assignment
    (14) assignment -> . IDENTIFIER ASSIGN assignment
    (15) assignment -> . IDENTIFIER ASSIGN function_call
    (16) assignment -> . IDENTIFIER ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . IDENTIFIER COMMA assignment
    (19) assignment -> . INTEGER COMMA assignment
    (20) assignment -> . IDENTIFIER PLUS assignment
    (21) assignment -> . IDENTIFIER MINUS assignment
    (22) assignment -> . IDENTIFIER TIMES assignment
    (23) assignment -> . IDENTIFIER DIVIDE assignment
    (24) assignment -> . IDENTIFIER MODULUS assignment
    (25) assignment -> . INTEGER PLUS assignment
    (26) assignment -> . INTEGER MINUS assignment
    (27) assignment -> . INTEGER TIMES assignment
    (28) assignment -> . INTEGER DIVIDE assignment
    (29) assignment -> . INTEGER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . INTEGER PLUS PLUS
    (34) assignment -> . IDENTIFIER PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . INTEGER MINUS MINUS
    (37) assignment -> . IDENTIFIER MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . BOOLEAN
    (40) assignment -> . FLOATINGPOINT
    (41) assignment -> . INTEGER
    (42) assignment -> . STRING
    (43) assignment -> . IDENTIFIER
    (44) assignment -> . LETTER
    (51) array_usage -> . IDENTIFIER LBRACKET assignment RBRACKET

    IDENTIFIER      shift and go to state 41
    INTEGER         shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    BOOLEAN         shift and go to state 24
    FLOATINGPOINT   shift and go to state 25
    STRING          shift and go to state 26
    LETTER          shift and go to state 27

    assignment                     shift and go to state 74
    array_usage                    shift and go to state 42

state 38

    (23) assignment -> IDENTIFIER DIVIDE . assignment
    (14) assignment -> . IDENTIFIER ASSIGN assignment
    (15) assignment -> . IDENTIFIER ASSIGN function_call
    (16) assignment -> . IDENTIFIER ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . IDENTIFIER COMMA assignment
    (19) assignment -> . INTEGER COMMA assignment
    (20) assignment -> . IDENTIFIER PLUS assignment
    (21) assignment -> . IDENTIFIER MINUS assignment
    (22) assignment -> . IDENTIFIER TIMES assignment
    (23) assignment -> . IDENTIFIER DIVIDE assignment
    (24) assignment -> . IDENTIFIER MODULUS assignment
    (25) assignment -> . INTEGER PLUS assignment
    (26) assignment -> . INTEGER MINUS assignment
    (27) assignment -> . INTEGER TIMES assignment
    (28) assignment -> . INTEGER DIVIDE assignment
    (29) assignment -> . INTEGER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . INTEGER PLUS PLUS
    (34) assignment -> . IDENTIFIER PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . INTEGER MINUS MINUS
    (37) assignment -> . IDENTIFIER MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . BOOLEAN
    (40) assignment -> . FLOATINGPOINT
    (41) assignment -> . INTEGER
    (42) assignment -> . STRING
    (43) assignment -> . IDENTIFIER
    (44) assignment -> . LETTER
    (51) array_usage -> . IDENTIFIER LBRACKET assignment RBRACKET

    IDENTIFIER      shift and go to state 41
    INTEGER         shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    BOOLEAN         shift and go to state 24
    FLOATINGPOINT   shift and go to state 25
    STRING          shift and go to state 26
    LETTER          shift and go to state 27

    assignment                     shift and go to state 75
    array_usage                    shift and go to state 42

state 39

    (24) assignment -> IDENTIFIER MODULUS . assignment
    (14) assignment -> . IDENTIFIER ASSIGN assignment
    (15) assignment -> . IDENTIFIER ASSIGN function_call
    (16) assignment -> . IDENTIFIER ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . IDENTIFIER COMMA assignment
    (19) assignment -> . INTEGER COMMA assignment
    (20) assignment -> . IDENTIFIER PLUS assignment
    (21) assignment -> . IDENTIFIER MINUS assignment
    (22) assignment -> . IDENTIFIER TIMES assignment
    (23) assignment -> . IDENTIFIER DIVIDE assignment
    (24) assignment -> . IDENTIFIER MODULUS assignment
    (25) assignment -> . INTEGER PLUS assignment
    (26) assignment -> . INTEGER MINUS assignment
    (27) assignment -> . INTEGER TIMES assignment
    (28) assignment -> . INTEGER DIVIDE assignment
    (29) assignment -> . INTEGER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . INTEGER PLUS PLUS
    (34) assignment -> . IDENTIFIER PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . INTEGER MINUS MINUS
    (37) assignment -> . IDENTIFIER MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . BOOLEAN
    (40) assignment -> . FLOATINGPOINT
    (41) assignment -> . INTEGER
    (42) assignment -> . STRING
    (43) assignment -> . IDENTIFIER
    (44) assignment -> . LETTER
    (51) array_usage -> . IDENTIFIER LBRACKET assignment RBRACKET

    IDENTIFIER      shift and go to state 41
    INTEGER         shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    BOOLEAN         shift and go to state 24
    FLOATINGPOINT   shift and go to state 25
    STRING          shift and go to state 26
    LETTER          shift and go to state 27

    assignment                     shift and go to state 76
    array_usage                    shift and go to state 42

state 40

    (31) assignment -> LPAREN assignment . RPAREN

    RPAREN          shift and go to state 77


state 41

    (14) assignment -> IDENTIFIER . ASSIGN assignment
    (15) assignment -> IDENTIFIER . ASSIGN function_call
    (16) assignment -> IDENTIFIER . ASSIGN array_usage
    (18) assignment -> IDENTIFIER . COMMA assignment
    (20) assignment -> IDENTIFIER . PLUS assignment
    (21) assignment -> IDENTIFIER . MINUS assignment
    (22) assignment -> IDENTIFIER . TIMES assignment
    (23) assignment -> IDENTIFIER . DIVIDE assignment
    (24) assignment -> IDENTIFIER . MODULUS assignment
    (34) assignment -> IDENTIFIER . PLUS PLUS
    (37) assignment -> IDENTIFIER . MINUS MINUS
    (43) assignment -> IDENTIFIER .
    (51) array_usage -> IDENTIFIER . LBRACKET assignment RBRACKET

    ASSIGN          shift and go to state 33
    COMMA           shift and go to state 34
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULUS         shift and go to state 39
    RPAREN          reduce using rule 43 (assignment -> IDENTIFIER .)
    SEMICOLON       reduce using rule 43 (assignment -> IDENTIFIER .)
    APOST           reduce using rule 43 (assignment -> IDENTIFIER .)
    RBRACKET        reduce using rule 43 (assignment -> IDENTIFIER .)
    INT             reduce using rule 43 (assignment -> IDENTIFIER .)
    FLOAT           reduce using rule 43 (assignment -> IDENTIFIER .)
    CHAR            reduce using rule 43 (assignment -> IDENTIFIER .)
    VOID            reduce using rule 43 (assignment -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 43 (assignment -> IDENTIFIER .)
    POUND           reduce using rule 43 (assignment -> IDENTIFIER .)
    $end            reduce using rule 43 (assignment -> IDENTIFIER .)
    EQUALS          reduce using rule 43 (assignment -> IDENTIFIER .)
    LESS            reduce using rule 43 (assignment -> IDENTIFIER .)
    GREATER         reduce using rule 43 (assignment -> IDENTIFIER .)
    AND             reduce using rule 43 (assignment -> IDENTIFIER .)
    OR              reduce using rule 43 (assignment -> IDENTIFIER .)
    LBRACKET        shift and go to state 28


state 42

    (17) assignment -> array_usage . ASSIGN assignment
    (35) assignment -> array_usage . PLUS PLUS
    (38) assignment -> array_usage . MINUS MINUS

    ASSIGN          shift and go to state 45
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47


state 43

    (4) external-declaration -> type assignment SEMICOLON .

    INT             reduce using rule 4 (external-declaration -> type assignment SEMICOLON .)
    FLOAT           reduce using rule 4 (external-declaration -> type assignment SEMICOLON .)
    CHAR            reduce using rule 4 (external-declaration -> type assignment SEMICOLON .)
    VOID            reduce using rule 4 (external-declaration -> type assignment SEMICOLON .)
    IDENTIFIER      reduce using rule 4 (external-declaration -> type assignment SEMICOLON .)
    POUND           reduce using rule 4 (external-declaration -> type assignment SEMICOLON .)
    $end            reduce using rule 4 (external-declaration -> type assignment SEMICOLON .)


state 44

    (6) external-declaration -> type array_usage SEMICOLON .

    INT             reduce using rule 6 (external-declaration -> type array_usage SEMICOLON .)
    FLOAT           reduce using rule 6 (external-declaration -> type array_usage SEMICOLON .)
    CHAR            reduce using rule 6 (external-declaration -> type array_usage SEMICOLON .)
    VOID            reduce using rule 6 (external-declaration -> type array_usage SEMICOLON .)
    IDENTIFIER      reduce using rule 6 (external-declaration -> type array_usage SEMICOLON .)
    POUND           reduce using rule 6 (external-declaration -> type array_usage SEMICOLON .)
    $end            reduce using rule 6 (external-declaration -> type array_usage SEMICOLON .)


state 45

    (17) assignment -> array_usage ASSIGN . assignment
    (14) assignment -> . IDENTIFIER ASSIGN assignment
    (15) assignment -> . IDENTIFIER ASSIGN function_call
    (16) assignment -> . IDENTIFIER ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . IDENTIFIER COMMA assignment
    (19) assignment -> . INTEGER COMMA assignment
    (20) assignment -> . IDENTIFIER PLUS assignment
    (21) assignment -> . IDENTIFIER MINUS assignment
    (22) assignment -> . IDENTIFIER TIMES assignment
    (23) assignment -> . IDENTIFIER DIVIDE assignment
    (24) assignment -> . IDENTIFIER MODULUS assignment
    (25) assignment -> . INTEGER PLUS assignment
    (26) assignment -> . INTEGER MINUS assignment
    (27) assignment -> . INTEGER TIMES assignment
    (28) assignment -> . INTEGER DIVIDE assignment
    (29) assignment -> . INTEGER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . INTEGER PLUS PLUS
    (34) assignment -> . IDENTIFIER PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . INTEGER MINUS MINUS
    (37) assignment -> . IDENTIFIER MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . BOOLEAN
    (40) assignment -> . FLOATINGPOINT
    (41) assignment -> . INTEGER
    (42) assignment -> . STRING
    (43) assignment -> . IDENTIFIER
    (44) assignment -> . LETTER
    (51) array_usage -> . IDENTIFIER LBRACKET assignment RBRACKET

    IDENTIFIER      shift and go to state 41
    INTEGER         shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    BOOLEAN         shift and go to state 24
    FLOATINGPOINT   shift and go to state 25
    STRING          shift and go to state 26
    LETTER          shift and go to state 27

    array_usage                    shift and go to state 42
    assignment                     shift and go to state 78

state 46

    (35) assignment -> array_usage PLUS . PLUS

    PLUS            shift and go to state 79


state 47

    (38) assignment -> array_usage MINUS . MINUS

    MINUS           shift and go to state 80


state 48

    (19) assignment -> INTEGER COMMA . assignment
    (14) assignment -> . IDENTIFIER ASSIGN assignment
    (15) assignment -> . IDENTIFIER ASSIGN function_call
    (16) assignment -> . IDENTIFIER ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . IDENTIFIER COMMA assignment
    (19) assignment -> . INTEGER COMMA assignment
    (20) assignment -> . IDENTIFIER PLUS assignment
    (21) assignment -> . IDENTIFIER MINUS assignment
    (22) assignment -> . IDENTIFIER TIMES assignment
    (23) assignment -> . IDENTIFIER DIVIDE assignment
    (24) assignment -> . IDENTIFIER MODULUS assignment
    (25) assignment -> . INTEGER PLUS assignment
    (26) assignment -> . INTEGER MINUS assignment
    (27) assignment -> . INTEGER TIMES assignment
    (28) assignment -> . INTEGER DIVIDE assignment
    (29) assignment -> . INTEGER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . INTEGER PLUS PLUS
    (34) assignment -> . IDENTIFIER PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . INTEGER MINUS MINUS
    (37) assignment -> . IDENTIFIER MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . BOOLEAN
    (40) assignment -> . FLOATINGPOINT
    (41) assignment -> . INTEGER
    (42) assignment -> . STRING
    (43) assignment -> . IDENTIFIER
    (44) assignment -> . LETTER
    (51) array_usage -> . IDENTIFIER LBRACKET assignment RBRACKET

    IDENTIFIER      shift and go to state 41
    INTEGER         shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    BOOLEAN         shift and go to state 24
    FLOATINGPOINT   shift and go to state 25
    STRING          shift and go to state 26
    LETTER          shift and go to state 27

    assignment                     shift and go to state 81
    array_usage                    shift and go to state 42

state 49

    (25) assignment -> INTEGER PLUS . assignment
    (33) assignment -> INTEGER PLUS . PLUS
    (14) assignment -> . IDENTIFIER ASSIGN assignment
    (15) assignment -> . IDENTIFIER ASSIGN function_call
    (16) assignment -> . IDENTIFIER ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . IDENTIFIER COMMA assignment
    (19) assignment -> . INTEGER COMMA assignment
    (20) assignment -> . IDENTIFIER PLUS assignment
    (21) assignment -> . IDENTIFIER MINUS assignment
    (22) assignment -> . IDENTIFIER TIMES assignment
    (23) assignment -> . IDENTIFIER DIVIDE assignment
    (24) assignment -> . IDENTIFIER MODULUS assignment
    (25) assignment -> . INTEGER PLUS assignment
    (26) assignment -> . INTEGER MINUS assignment
    (27) assignment -> . INTEGER TIMES assignment
    (28) assignment -> . INTEGER DIVIDE assignment
    (29) assignment -> . INTEGER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . INTEGER PLUS PLUS
    (34) assignment -> . IDENTIFIER PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . INTEGER MINUS MINUS
    (37) assignment -> . IDENTIFIER MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . BOOLEAN
    (40) assignment -> . FLOATINGPOINT
    (41) assignment -> . INTEGER
    (42) assignment -> . STRING
    (43) assignment -> . IDENTIFIER
    (44) assignment -> . LETTER
    (51) array_usage -> . IDENTIFIER LBRACKET assignment RBRACKET

    PLUS            shift and go to state 82
    IDENTIFIER      shift and go to state 41
    INTEGER         shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    BOOLEAN         shift and go to state 24
    FLOATINGPOINT   shift and go to state 25
    STRING          shift and go to state 26
    LETTER          shift and go to state 27

    assignment                     shift and go to state 83
    array_usage                    shift and go to state 42

state 50

    (26) assignment -> INTEGER MINUS . assignment
    (36) assignment -> INTEGER MINUS . MINUS
    (14) assignment -> . IDENTIFIER ASSIGN assignment
    (15) assignment -> . IDENTIFIER ASSIGN function_call
    (16) assignment -> . IDENTIFIER ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . IDENTIFIER COMMA assignment
    (19) assignment -> . INTEGER COMMA assignment
    (20) assignment -> . IDENTIFIER PLUS assignment
    (21) assignment -> . IDENTIFIER MINUS assignment
    (22) assignment -> . IDENTIFIER TIMES assignment
    (23) assignment -> . IDENTIFIER DIVIDE assignment
    (24) assignment -> . IDENTIFIER MODULUS assignment
    (25) assignment -> . INTEGER PLUS assignment
    (26) assignment -> . INTEGER MINUS assignment
    (27) assignment -> . INTEGER TIMES assignment
    (28) assignment -> . INTEGER DIVIDE assignment
    (29) assignment -> . INTEGER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . INTEGER PLUS PLUS
    (34) assignment -> . IDENTIFIER PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . INTEGER MINUS MINUS
    (37) assignment -> . IDENTIFIER MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . BOOLEAN
    (40) assignment -> . FLOATINGPOINT
    (41) assignment -> . INTEGER
    (42) assignment -> . STRING
    (43) assignment -> . IDENTIFIER
    (44) assignment -> . LETTER
    (51) array_usage -> . IDENTIFIER LBRACKET assignment RBRACKET

    MINUS           shift and go to state 84
    IDENTIFIER      shift and go to state 41
    INTEGER         shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    BOOLEAN         shift and go to state 24
    FLOATINGPOINT   shift and go to state 25
    STRING          shift and go to state 26
    LETTER          shift and go to state 27

    assignment                     shift and go to state 85
    array_usage                    shift and go to state 42

state 51

    (27) assignment -> INTEGER TIMES . assignment
    (14) assignment -> . IDENTIFIER ASSIGN assignment
    (15) assignment -> . IDENTIFIER ASSIGN function_call
    (16) assignment -> . IDENTIFIER ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . IDENTIFIER COMMA assignment
    (19) assignment -> . INTEGER COMMA assignment
    (20) assignment -> . IDENTIFIER PLUS assignment
    (21) assignment -> . IDENTIFIER MINUS assignment
    (22) assignment -> . IDENTIFIER TIMES assignment
    (23) assignment -> . IDENTIFIER DIVIDE assignment
    (24) assignment -> . IDENTIFIER MODULUS assignment
    (25) assignment -> . INTEGER PLUS assignment
    (26) assignment -> . INTEGER MINUS assignment
    (27) assignment -> . INTEGER TIMES assignment
    (28) assignment -> . INTEGER DIVIDE assignment
    (29) assignment -> . INTEGER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . INTEGER PLUS PLUS
    (34) assignment -> . IDENTIFIER PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . INTEGER MINUS MINUS
    (37) assignment -> . IDENTIFIER MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . BOOLEAN
    (40) assignment -> . FLOATINGPOINT
    (41) assignment -> . INTEGER
    (42) assignment -> . STRING
    (43) assignment -> . IDENTIFIER
    (44) assignment -> . LETTER
    (51) array_usage -> . IDENTIFIER LBRACKET assignment RBRACKET

    IDENTIFIER      shift and go to state 41
    INTEGER         shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    BOOLEAN         shift and go to state 24
    FLOATINGPOINT   shift and go to state 25
    STRING          shift and go to state 26
    LETTER          shift and go to state 27

    assignment                     shift and go to state 86
    array_usage                    shift and go to state 42

state 52

    (28) assignment -> INTEGER DIVIDE . assignment
    (14) assignment -> . IDENTIFIER ASSIGN assignment
    (15) assignment -> . IDENTIFIER ASSIGN function_call
    (16) assignment -> . IDENTIFIER ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . IDENTIFIER COMMA assignment
    (19) assignment -> . INTEGER COMMA assignment
    (20) assignment -> . IDENTIFIER PLUS assignment
    (21) assignment -> . IDENTIFIER MINUS assignment
    (22) assignment -> . IDENTIFIER TIMES assignment
    (23) assignment -> . IDENTIFIER DIVIDE assignment
    (24) assignment -> . IDENTIFIER MODULUS assignment
    (25) assignment -> . INTEGER PLUS assignment
    (26) assignment -> . INTEGER MINUS assignment
    (27) assignment -> . INTEGER TIMES assignment
    (28) assignment -> . INTEGER DIVIDE assignment
    (29) assignment -> . INTEGER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . INTEGER PLUS PLUS
    (34) assignment -> . IDENTIFIER PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . INTEGER MINUS MINUS
    (37) assignment -> . IDENTIFIER MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . BOOLEAN
    (40) assignment -> . FLOATINGPOINT
    (41) assignment -> . INTEGER
    (42) assignment -> . STRING
    (43) assignment -> . IDENTIFIER
    (44) assignment -> . LETTER
    (51) array_usage -> . IDENTIFIER LBRACKET assignment RBRACKET

    IDENTIFIER      shift and go to state 41
    INTEGER         shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    BOOLEAN         shift and go to state 24
    FLOATINGPOINT   shift and go to state 25
    STRING          shift and go to state 26
    LETTER          shift and go to state 27

    assignment                     shift and go to state 87
    array_usage                    shift and go to state 42

state 53

    (29) assignment -> INTEGER MODULUS . assignment
    (14) assignment -> . IDENTIFIER ASSIGN assignment
    (15) assignment -> . IDENTIFIER ASSIGN function_call
    (16) assignment -> . IDENTIFIER ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . IDENTIFIER COMMA assignment
    (19) assignment -> . INTEGER COMMA assignment
    (20) assignment -> . IDENTIFIER PLUS assignment
    (21) assignment -> . IDENTIFIER MINUS assignment
    (22) assignment -> . IDENTIFIER TIMES assignment
    (23) assignment -> . IDENTIFIER DIVIDE assignment
    (24) assignment -> . IDENTIFIER MODULUS assignment
    (25) assignment -> . INTEGER PLUS assignment
    (26) assignment -> . INTEGER MINUS assignment
    (27) assignment -> . INTEGER TIMES assignment
    (28) assignment -> . INTEGER DIVIDE assignment
    (29) assignment -> . INTEGER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . INTEGER PLUS PLUS
    (34) assignment -> . IDENTIFIER PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . INTEGER MINUS MINUS
    (37) assignment -> . IDENTIFIER MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . BOOLEAN
    (40) assignment -> . FLOATINGPOINT
    (41) assignment -> . INTEGER
    (42) assignment -> . STRING
    (43) assignment -> . IDENTIFIER
    (44) assignment -> . LETTER
    (51) array_usage -> . IDENTIFIER LBRACKET assignment RBRACKET

    IDENTIFIER      shift and go to state 41
    INTEGER         shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    BOOLEAN         shift and go to state 24
    FLOATINGPOINT   shift and go to state 25
    STRING          shift and go to state 26
    LETTER          shift and go to state 27

    assignment                     shift and go to state 88
    array_usage                    shift and go to state 42

state 54

    (32) assignment -> MINUS assignment .

    SEMICOLON       reduce using rule 32 (assignment -> MINUS assignment .)
    RPAREN          reduce using rule 32 (assignment -> MINUS assignment .)
    APOST           reduce using rule 32 (assignment -> MINUS assignment .)
    RBRACKET        reduce using rule 32 (assignment -> MINUS assignment .)
    INT             reduce using rule 32 (assignment -> MINUS assignment .)
    FLOAT           reduce using rule 32 (assignment -> MINUS assignment .)
    CHAR            reduce using rule 32 (assignment -> MINUS assignment .)
    VOID            reduce using rule 32 (assignment -> MINUS assignment .)
    IDENTIFIER      reduce using rule 32 (assignment -> MINUS assignment .)
    POUND           reduce using rule 32 (assignment -> MINUS assignment .)
    $end            reduce using rule 32 (assignment -> MINUS assignment .)
    EQUALS          reduce using rule 32 (assignment -> MINUS assignment .)
    LESS            reduce using rule 32 (assignment -> MINUS assignment .)
    GREATER         reduce using rule 32 (assignment -> MINUS assignment .)
    AND             reduce using rule 32 (assignment -> MINUS assignment .)
    OR              reduce using rule 32 (assignment -> MINUS assignment .)


state 55

    (30) assignment -> APOST assignment . APOST

    APOST           shift and go to state 89


state 56

    (51) array_usage -> IDENTIFIER LBRACKET assignment . RBRACKET

    RBRACKET        shift and go to state 90


state 57

    (85) macro_definition -> POUND DEFINE IDENTIFIER . assignment
    (14) assignment -> . IDENTIFIER ASSIGN assignment
    (15) assignment -> . IDENTIFIER ASSIGN function_call
    (16) assignment -> . IDENTIFIER ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . IDENTIFIER COMMA assignment
    (19) assignment -> . INTEGER COMMA assignment
    (20) assignment -> . IDENTIFIER PLUS assignment
    (21) assignment -> . IDENTIFIER MINUS assignment
    (22) assignment -> . IDENTIFIER TIMES assignment
    (23) assignment -> . IDENTIFIER DIVIDE assignment
    (24) assignment -> . IDENTIFIER MODULUS assignment
    (25) assignment -> . INTEGER PLUS assignment
    (26) assignment -> . INTEGER MINUS assignment
    (27) assignment -> . INTEGER TIMES assignment
    (28) assignment -> . INTEGER DIVIDE assignment
    (29) assignment -> . INTEGER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . INTEGER PLUS PLUS
    (34) assignment -> . IDENTIFIER PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . INTEGER MINUS MINUS
    (37) assignment -> . IDENTIFIER MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . BOOLEAN
    (40) assignment -> . FLOATINGPOINT
    (41) assignment -> . INTEGER
    (42) assignment -> . STRING
    (43) assignment -> . IDENTIFIER
    (44) assignment -> . LETTER
    (51) array_usage -> . IDENTIFIER LBRACKET assignment RBRACKET

    IDENTIFIER      shift and go to state 41
    INTEGER         shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    BOOLEAN         shift and go to state 24
    FLOATINGPOINT   shift and go to state 25
    STRING          shift and go to state 26
    LETTER          shift and go to state 27

    assignment                     shift and go to state 91
    array_usage                    shift and go to state 42

state 58

    (86) file_inclusion -> POUND INCLUDE LESS . HEADER GREATER

    HEADER          shift and go to state 92


state 59

    (87) file_inclusion -> POUND INCLUDE QUOTE . HEADER QUOTE

    HEADER          shift and go to state 93


state 60

    (57) argument -> type . IDENTIFIER

    IDENTIFIER      shift and go to state 94


state 61

    (52) function -> type IDENTIFIER LPAREN argument_list_option . RPAREN compound_statement

    RPAREN          shift and go to state 95


state 62

    (53) argument_list_option -> argument_list .
    (55) argument_list -> argument_list . COMMA argument

    RPAREN          reduce using rule 53 (argument_list_option -> argument_list .)
    COMMA           shift and go to state 96


state 63

    (54) argument_list_option -> empty .

    RPAREN          reduce using rule 54 (argument_list_option -> empty .)


state 64

    (56) argument_list -> argument .

    COMMA           reduce using rule 56 (argument_list -> argument .)
    RPAREN          reduce using rule 56 (argument_list -> argument .)


state 65

    (14) assignment -> IDENTIFIER . ASSIGN assignment
    (15) assignment -> IDENTIFIER . ASSIGN function_call
    (16) assignment -> IDENTIFIER . ASSIGN array_usage
    (18) assignment -> IDENTIFIER . COMMA assignment
    (20) assignment -> IDENTIFIER . PLUS assignment
    (21) assignment -> IDENTIFIER . MINUS assignment
    (22) assignment -> IDENTIFIER . TIMES assignment
    (23) assignment -> IDENTIFIER . DIVIDE assignment
    (24) assignment -> IDENTIFIER . MODULUS assignment
    (34) assignment -> IDENTIFIER . PLUS PLUS
    (37) assignment -> IDENTIFIER . MINUS MINUS
    (43) assignment -> IDENTIFIER .
    (45) function_call -> IDENTIFIER . LPAREN RPAREN
    (46) function_call -> IDENTIFIER . LPAREN assignment RPAREN
    (51) array_usage -> IDENTIFIER . LBRACKET assignment RBRACKET

    ASSIGN          shift and go to state 33
    COMMA           shift and go to state 34
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULUS         shift and go to state 39
    SEMICOLON       reduce using rule 43 (assignment -> IDENTIFIER .)
    RPAREN          reduce using rule 43 (assignment -> IDENTIFIER .)
    APOST           reduce using rule 43 (assignment -> IDENTIFIER .)
    RBRACKET        reduce using rule 43 (assignment -> IDENTIFIER .)
    INT             reduce using rule 43 (assignment -> IDENTIFIER .)
    FLOAT           reduce using rule 43 (assignment -> IDENTIFIER .)
    CHAR            reduce using rule 43 (assignment -> IDENTIFIER .)
    VOID            reduce using rule 43 (assignment -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 43 (assignment -> IDENTIFIER .)
    POUND           reduce using rule 43 (assignment -> IDENTIFIER .)
    $end            reduce using rule 43 (assignment -> IDENTIFIER .)
    EQUALS          reduce using rule 43 (assignment -> IDENTIFIER .)
    LESS            reduce using rule 43 (assignment -> IDENTIFIER .)
    GREATER         reduce using rule 43 (assignment -> IDENTIFIER .)
    AND             reduce using rule 43 (assignment -> IDENTIFIER .)
    OR              reduce using rule 43 (assignment -> IDENTIFIER .)
    LPAREN          shift and go to state 97
    LBRACKET        shift and go to state 28


state 66

    (14) assignment -> IDENTIFIER ASSIGN assignment .

    SEMICOLON       reduce using rule 14 (assignment -> IDENTIFIER ASSIGN assignment .)
    RPAREN          reduce using rule 14 (assignment -> IDENTIFIER ASSIGN assignment .)
    APOST           reduce using rule 14 (assignment -> IDENTIFIER ASSIGN assignment .)
    RBRACKET        reduce using rule 14 (assignment -> IDENTIFIER ASSIGN assignment .)
    INT             reduce using rule 14 (assignment -> IDENTIFIER ASSIGN assignment .)
    FLOAT           reduce using rule 14 (assignment -> IDENTIFIER ASSIGN assignment .)
    CHAR            reduce using rule 14 (assignment -> IDENTIFIER ASSIGN assignment .)
    VOID            reduce using rule 14 (assignment -> IDENTIFIER ASSIGN assignment .)
    IDENTIFIER      reduce using rule 14 (assignment -> IDENTIFIER ASSIGN assignment .)
    POUND           reduce using rule 14 (assignment -> IDENTIFIER ASSIGN assignment .)
    $end            reduce using rule 14 (assignment -> IDENTIFIER ASSIGN assignment .)
    EQUALS          reduce using rule 14 (assignment -> IDENTIFIER ASSIGN assignment .)
    LESS            reduce using rule 14 (assignment -> IDENTIFIER ASSIGN assignment .)
    GREATER         reduce using rule 14 (assignment -> IDENTIFIER ASSIGN assignment .)
    AND             reduce using rule 14 (assignment -> IDENTIFIER ASSIGN assignment .)
    OR              reduce using rule 14 (assignment -> IDENTIFIER ASSIGN assignment .)


state 67

    (15) assignment -> IDENTIFIER ASSIGN function_call .

    SEMICOLON       reduce using rule 15 (assignment -> IDENTIFIER ASSIGN function_call .)
    RPAREN          reduce using rule 15 (assignment -> IDENTIFIER ASSIGN function_call .)
    APOST           reduce using rule 15 (assignment -> IDENTIFIER ASSIGN function_call .)
    RBRACKET        reduce using rule 15 (assignment -> IDENTIFIER ASSIGN function_call .)
    INT             reduce using rule 15 (assignment -> IDENTIFIER ASSIGN function_call .)
    FLOAT           reduce using rule 15 (assignment -> IDENTIFIER ASSIGN function_call .)
    CHAR            reduce using rule 15 (assignment -> IDENTIFIER ASSIGN function_call .)
    VOID            reduce using rule 15 (assignment -> IDENTIFIER ASSIGN function_call .)
    IDENTIFIER      reduce using rule 15 (assignment -> IDENTIFIER ASSIGN function_call .)
    POUND           reduce using rule 15 (assignment -> IDENTIFIER ASSIGN function_call .)
    $end            reduce using rule 15 (assignment -> IDENTIFIER ASSIGN function_call .)
    EQUALS          reduce using rule 15 (assignment -> IDENTIFIER ASSIGN function_call .)
    LESS            reduce using rule 15 (assignment -> IDENTIFIER ASSIGN function_call .)
    GREATER         reduce using rule 15 (assignment -> IDENTIFIER ASSIGN function_call .)
    AND             reduce using rule 15 (assignment -> IDENTIFIER ASSIGN function_call .)
    OR              reduce using rule 15 (assignment -> IDENTIFIER ASSIGN function_call .)


state 68

    (16) assignment -> IDENTIFIER ASSIGN array_usage .
    (17) assignment -> array_usage . ASSIGN assignment
    (35) assignment -> array_usage . PLUS PLUS
    (38) assignment -> array_usage . MINUS MINUS

    SEMICOLON       reduce using rule 16 (assignment -> IDENTIFIER ASSIGN array_usage .)
    RPAREN          reduce using rule 16 (assignment -> IDENTIFIER ASSIGN array_usage .)
    APOST           reduce using rule 16 (assignment -> IDENTIFIER ASSIGN array_usage .)
    RBRACKET        reduce using rule 16 (assignment -> IDENTIFIER ASSIGN array_usage .)
    INT             reduce using rule 16 (assignment -> IDENTIFIER ASSIGN array_usage .)
    FLOAT           reduce using rule 16 (assignment -> IDENTIFIER ASSIGN array_usage .)
    CHAR            reduce using rule 16 (assignment -> IDENTIFIER ASSIGN array_usage .)
    VOID            reduce using rule 16 (assignment -> IDENTIFIER ASSIGN array_usage .)
    IDENTIFIER      reduce using rule 16 (assignment -> IDENTIFIER ASSIGN array_usage .)
    POUND           reduce using rule 16 (assignment -> IDENTIFIER ASSIGN array_usage .)
    $end            reduce using rule 16 (assignment -> IDENTIFIER ASSIGN array_usage .)
    EQUALS          reduce using rule 16 (assignment -> IDENTIFIER ASSIGN array_usage .)
    LESS            reduce using rule 16 (assignment -> IDENTIFIER ASSIGN array_usage .)
    GREATER         reduce using rule 16 (assignment -> IDENTIFIER ASSIGN array_usage .)
    AND             reduce using rule 16 (assignment -> IDENTIFIER ASSIGN array_usage .)
    OR              reduce using rule 16 (assignment -> IDENTIFIER ASSIGN array_usage .)
    ASSIGN          shift and go to state 45
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47


state 69

    (18) assignment -> IDENTIFIER COMMA assignment .

    SEMICOLON       reduce using rule 18 (assignment -> IDENTIFIER COMMA assignment .)
    RPAREN          reduce using rule 18 (assignment -> IDENTIFIER COMMA assignment .)
    APOST           reduce using rule 18 (assignment -> IDENTIFIER COMMA assignment .)
    RBRACKET        reduce using rule 18 (assignment -> IDENTIFIER COMMA assignment .)
    INT             reduce using rule 18 (assignment -> IDENTIFIER COMMA assignment .)
    FLOAT           reduce using rule 18 (assignment -> IDENTIFIER COMMA assignment .)
    CHAR            reduce using rule 18 (assignment -> IDENTIFIER COMMA assignment .)
    VOID            reduce using rule 18 (assignment -> IDENTIFIER COMMA assignment .)
    IDENTIFIER      reduce using rule 18 (assignment -> IDENTIFIER COMMA assignment .)
    POUND           reduce using rule 18 (assignment -> IDENTIFIER COMMA assignment .)
    $end            reduce using rule 18 (assignment -> IDENTIFIER COMMA assignment .)
    EQUALS          reduce using rule 18 (assignment -> IDENTIFIER COMMA assignment .)
    LESS            reduce using rule 18 (assignment -> IDENTIFIER COMMA assignment .)
    GREATER         reduce using rule 18 (assignment -> IDENTIFIER COMMA assignment .)
    AND             reduce using rule 18 (assignment -> IDENTIFIER COMMA assignment .)
    OR              reduce using rule 18 (assignment -> IDENTIFIER COMMA assignment .)


state 70

    (34) assignment -> IDENTIFIER PLUS PLUS .

    SEMICOLON       reduce using rule 34 (assignment -> IDENTIFIER PLUS PLUS .)
    RPAREN          reduce using rule 34 (assignment -> IDENTIFIER PLUS PLUS .)
    APOST           reduce using rule 34 (assignment -> IDENTIFIER PLUS PLUS .)
    RBRACKET        reduce using rule 34 (assignment -> IDENTIFIER PLUS PLUS .)
    INT             reduce using rule 34 (assignment -> IDENTIFIER PLUS PLUS .)
    FLOAT           reduce using rule 34 (assignment -> IDENTIFIER PLUS PLUS .)
    CHAR            reduce using rule 34 (assignment -> IDENTIFIER PLUS PLUS .)
    VOID            reduce using rule 34 (assignment -> IDENTIFIER PLUS PLUS .)
    IDENTIFIER      reduce using rule 34 (assignment -> IDENTIFIER PLUS PLUS .)
    POUND           reduce using rule 34 (assignment -> IDENTIFIER PLUS PLUS .)
    $end            reduce using rule 34 (assignment -> IDENTIFIER PLUS PLUS .)
    EQUALS          reduce using rule 34 (assignment -> IDENTIFIER PLUS PLUS .)
    LESS            reduce using rule 34 (assignment -> IDENTIFIER PLUS PLUS .)
    GREATER         reduce using rule 34 (assignment -> IDENTIFIER PLUS PLUS .)
    AND             reduce using rule 34 (assignment -> IDENTIFIER PLUS PLUS .)
    OR              reduce using rule 34 (assignment -> IDENTIFIER PLUS PLUS .)


state 71

    (20) assignment -> IDENTIFIER PLUS assignment .

    SEMICOLON       reduce using rule 20 (assignment -> IDENTIFIER PLUS assignment .)
    RPAREN          reduce using rule 20 (assignment -> IDENTIFIER PLUS assignment .)
    APOST           reduce using rule 20 (assignment -> IDENTIFIER PLUS assignment .)
    RBRACKET        reduce using rule 20 (assignment -> IDENTIFIER PLUS assignment .)
    INT             reduce using rule 20 (assignment -> IDENTIFIER PLUS assignment .)
    FLOAT           reduce using rule 20 (assignment -> IDENTIFIER PLUS assignment .)
    CHAR            reduce using rule 20 (assignment -> IDENTIFIER PLUS assignment .)
    VOID            reduce using rule 20 (assignment -> IDENTIFIER PLUS assignment .)
    IDENTIFIER      reduce using rule 20 (assignment -> IDENTIFIER PLUS assignment .)
    POUND           reduce using rule 20 (assignment -> IDENTIFIER PLUS assignment .)
    $end            reduce using rule 20 (assignment -> IDENTIFIER PLUS assignment .)
    EQUALS          reduce using rule 20 (assignment -> IDENTIFIER PLUS assignment .)
    LESS            reduce using rule 20 (assignment -> IDENTIFIER PLUS assignment .)
    GREATER         reduce using rule 20 (assignment -> IDENTIFIER PLUS assignment .)
    AND             reduce using rule 20 (assignment -> IDENTIFIER PLUS assignment .)
    OR              reduce using rule 20 (assignment -> IDENTIFIER PLUS assignment .)


state 72

    (37) assignment -> IDENTIFIER MINUS MINUS .
    (32) assignment -> MINUS . assignment
    (14) assignment -> . IDENTIFIER ASSIGN assignment
    (15) assignment -> . IDENTIFIER ASSIGN function_call
    (16) assignment -> . IDENTIFIER ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . IDENTIFIER COMMA assignment
    (19) assignment -> . INTEGER COMMA assignment
    (20) assignment -> . IDENTIFIER PLUS assignment
    (21) assignment -> . IDENTIFIER MINUS assignment
    (22) assignment -> . IDENTIFIER TIMES assignment
    (23) assignment -> . IDENTIFIER DIVIDE assignment
    (24) assignment -> . IDENTIFIER MODULUS assignment
    (25) assignment -> . INTEGER PLUS assignment
    (26) assignment -> . INTEGER MINUS assignment
    (27) assignment -> . INTEGER TIMES assignment
    (28) assignment -> . INTEGER DIVIDE assignment
    (29) assignment -> . INTEGER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . INTEGER PLUS PLUS
    (34) assignment -> . IDENTIFIER PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . INTEGER MINUS MINUS
    (37) assignment -> . IDENTIFIER MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . BOOLEAN
    (40) assignment -> . FLOATINGPOINT
    (41) assignment -> . INTEGER
    (42) assignment -> . STRING
    (43) assignment -> . IDENTIFIER
    (44) assignment -> . LETTER
    (51) array_usage -> . IDENTIFIER LBRACKET assignment RBRACKET

    SEMICOLON       reduce using rule 37 (assignment -> IDENTIFIER MINUS MINUS .)
    RPAREN          reduce using rule 37 (assignment -> IDENTIFIER MINUS MINUS .)
    APOST           reduce using rule 37 (assignment -> IDENTIFIER MINUS MINUS .)
    RBRACKET        reduce using rule 37 (assignment -> IDENTIFIER MINUS MINUS .)
    INT             reduce using rule 37 (assignment -> IDENTIFIER MINUS MINUS .)
    FLOAT           reduce using rule 37 (assignment -> IDENTIFIER MINUS MINUS .)
    CHAR            reduce using rule 37 (assignment -> IDENTIFIER MINUS MINUS .)
    VOID            reduce using rule 37 (assignment -> IDENTIFIER MINUS MINUS .)
    IDENTIFIER      reduce using rule 37 (assignment -> IDENTIFIER MINUS MINUS .)
    POUND           reduce using rule 37 (assignment -> IDENTIFIER MINUS MINUS .)
    $end            reduce using rule 37 (assignment -> IDENTIFIER MINUS MINUS .)
    EQUALS          reduce using rule 37 (assignment -> IDENTIFIER MINUS MINUS .)
    LESS            reduce using rule 37 (assignment -> IDENTIFIER MINUS MINUS .)
    GREATER         reduce using rule 37 (assignment -> IDENTIFIER MINUS MINUS .)
    AND             reduce using rule 37 (assignment -> IDENTIFIER MINUS MINUS .)
    OR              reduce using rule 37 (assignment -> IDENTIFIER MINUS MINUS .)
    INTEGER         shift and go to state 21
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    BOOLEAN         shift and go to state 24
    FLOATINGPOINT   shift and go to state 25
    STRING          shift and go to state 26
    LETTER          shift and go to state 27

  ! IDENTIFIER      [ shift and go to state 41 ]
  ! APOST           [ shift and go to state 23 ]

    assignment                     shift and go to state 54
    array_usage                    shift and go to state 42

state 73

    (21) assignment -> IDENTIFIER MINUS assignment .

    SEMICOLON       reduce using rule 21 (assignment -> IDENTIFIER MINUS assignment .)
    RPAREN          reduce using rule 21 (assignment -> IDENTIFIER MINUS assignment .)
    APOST           reduce using rule 21 (assignment -> IDENTIFIER MINUS assignment .)
    RBRACKET        reduce using rule 21 (assignment -> IDENTIFIER MINUS assignment .)
    INT             reduce using rule 21 (assignment -> IDENTIFIER MINUS assignment .)
    FLOAT           reduce using rule 21 (assignment -> IDENTIFIER MINUS assignment .)
    CHAR            reduce using rule 21 (assignment -> IDENTIFIER MINUS assignment .)
    VOID            reduce using rule 21 (assignment -> IDENTIFIER MINUS assignment .)
    IDENTIFIER      reduce using rule 21 (assignment -> IDENTIFIER MINUS assignment .)
    POUND           reduce using rule 21 (assignment -> IDENTIFIER MINUS assignment .)
    $end            reduce using rule 21 (assignment -> IDENTIFIER MINUS assignment .)
    EQUALS          reduce using rule 21 (assignment -> IDENTIFIER MINUS assignment .)
    LESS            reduce using rule 21 (assignment -> IDENTIFIER MINUS assignment .)
    GREATER         reduce using rule 21 (assignment -> IDENTIFIER MINUS assignment .)
    AND             reduce using rule 21 (assignment -> IDENTIFIER MINUS assignment .)
    OR              reduce using rule 21 (assignment -> IDENTIFIER MINUS assignment .)


state 74

    (22) assignment -> IDENTIFIER TIMES assignment .

    SEMICOLON       reduce using rule 22 (assignment -> IDENTIFIER TIMES assignment .)
    RPAREN          reduce using rule 22 (assignment -> IDENTIFIER TIMES assignment .)
    APOST           reduce using rule 22 (assignment -> IDENTIFIER TIMES assignment .)
    RBRACKET        reduce using rule 22 (assignment -> IDENTIFIER TIMES assignment .)
    INT             reduce using rule 22 (assignment -> IDENTIFIER TIMES assignment .)
    FLOAT           reduce using rule 22 (assignment -> IDENTIFIER TIMES assignment .)
    CHAR            reduce using rule 22 (assignment -> IDENTIFIER TIMES assignment .)
    VOID            reduce using rule 22 (assignment -> IDENTIFIER TIMES assignment .)
    IDENTIFIER      reduce using rule 22 (assignment -> IDENTIFIER TIMES assignment .)
    POUND           reduce using rule 22 (assignment -> IDENTIFIER TIMES assignment .)
    $end            reduce using rule 22 (assignment -> IDENTIFIER TIMES assignment .)
    EQUALS          reduce using rule 22 (assignment -> IDENTIFIER TIMES assignment .)
    LESS            reduce using rule 22 (assignment -> IDENTIFIER TIMES assignment .)
    GREATER         reduce using rule 22 (assignment -> IDENTIFIER TIMES assignment .)
    AND             reduce using rule 22 (assignment -> IDENTIFIER TIMES assignment .)
    OR              reduce using rule 22 (assignment -> IDENTIFIER TIMES assignment .)


state 75

    (23) assignment -> IDENTIFIER DIVIDE assignment .

    SEMICOLON       reduce using rule 23 (assignment -> IDENTIFIER DIVIDE assignment .)
    RPAREN          reduce using rule 23 (assignment -> IDENTIFIER DIVIDE assignment .)
    APOST           reduce using rule 23 (assignment -> IDENTIFIER DIVIDE assignment .)
    RBRACKET        reduce using rule 23 (assignment -> IDENTIFIER DIVIDE assignment .)
    INT             reduce using rule 23 (assignment -> IDENTIFIER DIVIDE assignment .)
    FLOAT           reduce using rule 23 (assignment -> IDENTIFIER DIVIDE assignment .)
    CHAR            reduce using rule 23 (assignment -> IDENTIFIER DIVIDE assignment .)
    VOID            reduce using rule 23 (assignment -> IDENTIFIER DIVIDE assignment .)
    IDENTIFIER      reduce using rule 23 (assignment -> IDENTIFIER DIVIDE assignment .)
    POUND           reduce using rule 23 (assignment -> IDENTIFIER DIVIDE assignment .)
    $end            reduce using rule 23 (assignment -> IDENTIFIER DIVIDE assignment .)
    EQUALS          reduce using rule 23 (assignment -> IDENTIFIER DIVIDE assignment .)
    LESS            reduce using rule 23 (assignment -> IDENTIFIER DIVIDE assignment .)
    GREATER         reduce using rule 23 (assignment -> IDENTIFIER DIVIDE assignment .)
    AND             reduce using rule 23 (assignment -> IDENTIFIER DIVIDE assignment .)
    OR              reduce using rule 23 (assignment -> IDENTIFIER DIVIDE assignment .)


state 76

    (24) assignment -> IDENTIFIER MODULUS assignment .

    SEMICOLON       reduce using rule 24 (assignment -> IDENTIFIER MODULUS assignment .)
    RPAREN          reduce using rule 24 (assignment -> IDENTIFIER MODULUS assignment .)
    APOST           reduce using rule 24 (assignment -> IDENTIFIER MODULUS assignment .)
    RBRACKET        reduce using rule 24 (assignment -> IDENTIFIER MODULUS assignment .)
    INT             reduce using rule 24 (assignment -> IDENTIFIER MODULUS assignment .)
    FLOAT           reduce using rule 24 (assignment -> IDENTIFIER MODULUS assignment .)
    CHAR            reduce using rule 24 (assignment -> IDENTIFIER MODULUS assignment .)
    VOID            reduce using rule 24 (assignment -> IDENTIFIER MODULUS assignment .)
    IDENTIFIER      reduce using rule 24 (assignment -> IDENTIFIER MODULUS assignment .)
    POUND           reduce using rule 24 (assignment -> IDENTIFIER MODULUS assignment .)
    $end            reduce using rule 24 (assignment -> IDENTIFIER MODULUS assignment .)
    EQUALS          reduce using rule 24 (assignment -> IDENTIFIER MODULUS assignment .)
    LESS            reduce using rule 24 (assignment -> IDENTIFIER MODULUS assignment .)
    GREATER         reduce using rule 24 (assignment -> IDENTIFIER MODULUS assignment .)
    AND             reduce using rule 24 (assignment -> IDENTIFIER MODULUS assignment .)
    OR              reduce using rule 24 (assignment -> IDENTIFIER MODULUS assignment .)


state 77

    (31) assignment -> LPAREN assignment RPAREN .

    SEMICOLON       reduce using rule 31 (assignment -> LPAREN assignment RPAREN .)
    RPAREN          reduce using rule 31 (assignment -> LPAREN assignment RPAREN .)
    APOST           reduce using rule 31 (assignment -> LPAREN assignment RPAREN .)
    RBRACKET        reduce using rule 31 (assignment -> LPAREN assignment RPAREN .)
    INT             reduce using rule 31 (assignment -> LPAREN assignment RPAREN .)
    FLOAT           reduce using rule 31 (assignment -> LPAREN assignment RPAREN .)
    CHAR            reduce using rule 31 (assignment -> LPAREN assignment RPAREN .)
    VOID            reduce using rule 31 (assignment -> LPAREN assignment RPAREN .)
    IDENTIFIER      reduce using rule 31 (assignment -> LPAREN assignment RPAREN .)
    POUND           reduce using rule 31 (assignment -> LPAREN assignment RPAREN .)
    $end            reduce using rule 31 (assignment -> LPAREN assignment RPAREN .)
    EQUALS          reduce using rule 31 (assignment -> LPAREN assignment RPAREN .)
    LESS            reduce using rule 31 (assignment -> LPAREN assignment RPAREN .)
    GREATER         reduce using rule 31 (assignment -> LPAREN assignment RPAREN .)
    AND             reduce using rule 31 (assignment -> LPAREN assignment RPAREN .)
    OR              reduce using rule 31 (assignment -> LPAREN assignment RPAREN .)


state 78

    (17) assignment -> array_usage ASSIGN assignment .

    SEMICOLON       reduce using rule 17 (assignment -> array_usage ASSIGN assignment .)
    RPAREN          reduce using rule 17 (assignment -> array_usage ASSIGN assignment .)
    APOST           reduce using rule 17 (assignment -> array_usage ASSIGN assignment .)
    RBRACKET        reduce using rule 17 (assignment -> array_usage ASSIGN assignment .)
    INT             reduce using rule 17 (assignment -> array_usage ASSIGN assignment .)
    FLOAT           reduce using rule 17 (assignment -> array_usage ASSIGN assignment .)
    CHAR            reduce using rule 17 (assignment -> array_usage ASSIGN assignment .)
    VOID            reduce using rule 17 (assignment -> array_usage ASSIGN assignment .)
    IDENTIFIER      reduce using rule 17 (assignment -> array_usage ASSIGN assignment .)
    POUND           reduce using rule 17 (assignment -> array_usage ASSIGN assignment .)
    $end            reduce using rule 17 (assignment -> array_usage ASSIGN assignment .)
    EQUALS          reduce using rule 17 (assignment -> array_usage ASSIGN assignment .)
    LESS            reduce using rule 17 (assignment -> array_usage ASSIGN assignment .)
    GREATER         reduce using rule 17 (assignment -> array_usage ASSIGN assignment .)
    AND             reduce using rule 17 (assignment -> array_usage ASSIGN assignment .)
    OR              reduce using rule 17 (assignment -> array_usage ASSIGN assignment .)


state 79

    (35) assignment -> array_usage PLUS PLUS .

    SEMICOLON       reduce using rule 35 (assignment -> array_usage PLUS PLUS .)
    RPAREN          reduce using rule 35 (assignment -> array_usage PLUS PLUS .)
    APOST           reduce using rule 35 (assignment -> array_usage PLUS PLUS .)
    RBRACKET        reduce using rule 35 (assignment -> array_usage PLUS PLUS .)
    INT             reduce using rule 35 (assignment -> array_usage PLUS PLUS .)
    FLOAT           reduce using rule 35 (assignment -> array_usage PLUS PLUS .)
    CHAR            reduce using rule 35 (assignment -> array_usage PLUS PLUS .)
    VOID            reduce using rule 35 (assignment -> array_usage PLUS PLUS .)
    IDENTIFIER      reduce using rule 35 (assignment -> array_usage PLUS PLUS .)
    POUND           reduce using rule 35 (assignment -> array_usage PLUS PLUS .)
    $end            reduce using rule 35 (assignment -> array_usage PLUS PLUS .)
    EQUALS          reduce using rule 35 (assignment -> array_usage PLUS PLUS .)
    LESS            reduce using rule 35 (assignment -> array_usage PLUS PLUS .)
    GREATER         reduce using rule 35 (assignment -> array_usage PLUS PLUS .)
    AND             reduce using rule 35 (assignment -> array_usage PLUS PLUS .)
    OR              reduce using rule 35 (assignment -> array_usage PLUS PLUS .)


state 80

    (38) assignment -> array_usage MINUS MINUS .

    SEMICOLON       reduce using rule 38 (assignment -> array_usage MINUS MINUS .)
    RPAREN          reduce using rule 38 (assignment -> array_usage MINUS MINUS .)
    APOST           reduce using rule 38 (assignment -> array_usage MINUS MINUS .)
    RBRACKET        reduce using rule 38 (assignment -> array_usage MINUS MINUS .)
    INT             reduce using rule 38 (assignment -> array_usage MINUS MINUS .)
    FLOAT           reduce using rule 38 (assignment -> array_usage MINUS MINUS .)
    CHAR            reduce using rule 38 (assignment -> array_usage MINUS MINUS .)
    VOID            reduce using rule 38 (assignment -> array_usage MINUS MINUS .)
    IDENTIFIER      reduce using rule 38 (assignment -> array_usage MINUS MINUS .)
    POUND           reduce using rule 38 (assignment -> array_usage MINUS MINUS .)
    $end            reduce using rule 38 (assignment -> array_usage MINUS MINUS .)
    EQUALS          reduce using rule 38 (assignment -> array_usage MINUS MINUS .)
    LESS            reduce using rule 38 (assignment -> array_usage MINUS MINUS .)
    GREATER         reduce using rule 38 (assignment -> array_usage MINUS MINUS .)
    AND             reduce using rule 38 (assignment -> array_usage MINUS MINUS .)
    OR              reduce using rule 38 (assignment -> array_usage MINUS MINUS .)


state 81

    (19) assignment -> INTEGER COMMA assignment .

    SEMICOLON       reduce using rule 19 (assignment -> INTEGER COMMA assignment .)
    RPAREN          reduce using rule 19 (assignment -> INTEGER COMMA assignment .)
    APOST           reduce using rule 19 (assignment -> INTEGER COMMA assignment .)
    RBRACKET        reduce using rule 19 (assignment -> INTEGER COMMA assignment .)
    INT             reduce using rule 19 (assignment -> INTEGER COMMA assignment .)
    FLOAT           reduce using rule 19 (assignment -> INTEGER COMMA assignment .)
    CHAR            reduce using rule 19 (assignment -> INTEGER COMMA assignment .)
    VOID            reduce using rule 19 (assignment -> INTEGER COMMA assignment .)
    IDENTIFIER      reduce using rule 19 (assignment -> INTEGER COMMA assignment .)
    POUND           reduce using rule 19 (assignment -> INTEGER COMMA assignment .)
    $end            reduce using rule 19 (assignment -> INTEGER COMMA assignment .)
    EQUALS          reduce using rule 19 (assignment -> INTEGER COMMA assignment .)
    LESS            reduce using rule 19 (assignment -> INTEGER COMMA assignment .)
    GREATER         reduce using rule 19 (assignment -> INTEGER COMMA assignment .)
    AND             reduce using rule 19 (assignment -> INTEGER COMMA assignment .)
    OR              reduce using rule 19 (assignment -> INTEGER COMMA assignment .)


state 82

    (33) assignment -> INTEGER PLUS PLUS .

    SEMICOLON       reduce using rule 33 (assignment -> INTEGER PLUS PLUS .)
    RPAREN          reduce using rule 33 (assignment -> INTEGER PLUS PLUS .)
    APOST           reduce using rule 33 (assignment -> INTEGER PLUS PLUS .)
    RBRACKET        reduce using rule 33 (assignment -> INTEGER PLUS PLUS .)
    INT             reduce using rule 33 (assignment -> INTEGER PLUS PLUS .)
    FLOAT           reduce using rule 33 (assignment -> INTEGER PLUS PLUS .)
    CHAR            reduce using rule 33 (assignment -> INTEGER PLUS PLUS .)
    VOID            reduce using rule 33 (assignment -> INTEGER PLUS PLUS .)
    IDENTIFIER      reduce using rule 33 (assignment -> INTEGER PLUS PLUS .)
    POUND           reduce using rule 33 (assignment -> INTEGER PLUS PLUS .)
    $end            reduce using rule 33 (assignment -> INTEGER PLUS PLUS .)
    EQUALS          reduce using rule 33 (assignment -> INTEGER PLUS PLUS .)
    LESS            reduce using rule 33 (assignment -> INTEGER PLUS PLUS .)
    GREATER         reduce using rule 33 (assignment -> INTEGER PLUS PLUS .)
    AND             reduce using rule 33 (assignment -> INTEGER PLUS PLUS .)
    OR              reduce using rule 33 (assignment -> INTEGER PLUS PLUS .)


state 83

    (25) assignment -> INTEGER PLUS assignment .

    SEMICOLON       reduce using rule 25 (assignment -> INTEGER PLUS assignment .)
    RPAREN          reduce using rule 25 (assignment -> INTEGER PLUS assignment .)
    APOST           reduce using rule 25 (assignment -> INTEGER PLUS assignment .)
    RBRACKET        reduce using rule 25 (assignment -> INTEGER PLUS assignment .)
    INT             reduce using rule 25 (assignment -> INTEGER PLUS assignment .)
    FLOAT           reduce using rule 25 (assignment -> INTEGER PLUS assignment .)
    CHAR            reduce using rule 25 (assignment -> INTEGER PLUS assignment .)
    VOID            reduce using rule 25 (assignment -> INTEGER PLUS assignment .)
    IDENTIFIER      reduce using rule 25 (assignment -> INTEGER PLUS assignment .)
    POUND           reduce using rule 25 (assignment -> INTEGER PLUS assignment .)
    $end            reduce using rule 25 (assignment -> INTEGER PLUS assignment .)
    EQUALS          reduce using rule 25 (assignment -> INTEGER PLUS assignment .)
    LESS            reduce using rule 25 (assignment -> INTEGER PLUS assignment .)
    GREATER         reduce using rule 25 (assignment -> INTEGER PLUS assignment .)
    AND             reduce using rule 25 (assignment -> INTEGER PLUS assignment .)
    OR              reduce using rule 25 (assignment -> INTEGER PLUS assignment .)


state 84

    (36) assignment -> INTEGER MINUS MINUS .
    (32) assignment -> MINUS . assignment
    (14) assignment -> . IDENTIFIER ASSIGN assignment
    (15) assignment -> . IDENTIFIER ASSIGN function_call
    (16) assignment -> . IDENTIFIER ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . IDENTIFIER COMMA assignment
    (19) assignment -> . INTEGER COMMA assignment
    (20) assignment -> . IDENTIFIER PLUS assignment
    (21) assignment -> . IDENTIFIER MINUS assignment
    (22) assignment -> . IDENTIFIER TIMES assignment
    (23) assignment -> . IDENTIFIER DIVIDE assignment
    (24) assignment -> . IDENTIFIER MODULUS assignment
    (25) assignment -> . INTEGER PLUS assignment
    (26) assignment -> . INTEGER MINUS assignment
    (27) assignment -> . INTEGER TIMES assignment
    (28) assignment -> . INTEGER DIVIDE assignment
    (29) assignment -> . INTEGER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . INTEGER PLUS PLUS
    (34) assignment -> . IDENTIFIER PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . INTEGER MINUS MINUS
    (37) assignment -> . IDENTIFIER MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . BOOLEAN
    (40) assignment -> . FLOATINGPOINT
    (41) assignment -> . INTEGER
    (42) assignment -> . STRING
    (43) assignment -> . IDENTIFIER
    (44) assignment -> . LETTER
    (51) array_usage -> . IDENTIFIER LBRACKET assignment RBRACKET

    SEMICOLON       reduce using rule 36 (assignment -> INTEGER MINUS MINUS .)
    RPAREN          reduce using rule 36 (assignment -> INTEGER MINUS MINUS .)
    APOST           reduce using rule 36 (assignment -> INTEGER MINUS MINUS .)
    RBRACKET        reduce using rule 36 (assignment -> INTEGER MINUS MINUS .)
    INT             reduce using rule 36 (assignment -> INTEGER MINUS MINUS .)
    FLOAT           reduce using rule 36 (assignment -> INTEGER MINUS MINUS .)
    CHAR            reduce using rule 36 (assignment -> INTEGER MINUS MINUS .)
    VOID            reduce using rule 36 (assignment -> INTEGER MINUS MINUS .)
    IDENTIFIER      reduce using rule 36 (assignment -> INTEGER MINUS MINUS .)
    POUND           reduce using rule 36 (assignment -> INTEGER MINUS MINUS .)
    $end            reduce using rule 36 (assignment -> INTEGER MINUS MINUS .)
    EQUALS          reduce using rule 36 (assignment -> INTEGER MINUS MINUS .)
    LESS            reduce using rule 36 (assignment -> INTEGER MINUS MINUS .)
    GREATER         reduce using rule 36 (assignment -> INTEGER MINUS MINUS .)
    AND             reduce using rule 36 (assignment -> INTEGER MINUS MINUS .)
    OR              reduce using rule 36 (assignment -> INTEGER MINUS MINUS .)
    INTEGER         shift and go to state 21
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    BOOLEAN         shift and go to state 24
    FLOATINGPOINT   shift and go to state 25
    STRING          shift and go to state 26
    LETTER          shift and go to state 27

  ! IDENTIFIER      [ shift and go to state 41 ]
  ! APOST           [ shift and go to state 23 ]

    assignment                     shift and go to state 54
    array_usage                    shift and go to state 42

state 85

    (26) assignment -> INTEGER MINUS assignment .

    SEMICOLON       reduce using rule 26 (assignment -> INTEGER MINUS assignment .)
    RPAREN          reduce using rule 26 (assignment -> INTEGER MINUS assignment .)
    APOST           reduce using rule 26 (assignment -> INTEGER MINUS assignment .)
    RBRACKET        reduce using rule 26 (assignment -> INTEGER MINUS assignment .)
    INT             reduce using rule 26 (assignment -> INTEGER MINUS assignment .)
    FLOAT           reduce using rule 26 (assignment -> INTEGER MINUS assignment .)
    CHAR            reduce using rule 26 (assignment -> INTEGER MINUS assignment .)
    VOID            reduce using rule 26 (assignment -> INTEGER MINUS assignment .)
    IDENTIFIER      reduce using rule 26 (assignment -> INTEGER MINUS assignment .)
    POUND           reduce using rule 26 (assignment -> INTEGER MINUS assignment .)
    $end            reduce using rule 26 (assignment -> INTEGER MINUS assignment .)
    EQUALS          reduce using rule 26 (assignment -> INTEGER MINUS assignment .)
    LESS            reduce using rule 26 (assignment -> INTEGER MINUS assignment .)
    GREATER         reduce using rule 26 (assignment -> INTEGER MINUS assignment .)
    AND             reduce using rule 26 (assignment -> INTEGER MINUS assignment .)
    OR              reduce using rule 26 (assignment -> INTEGER MINUS assignment .)


state 86

    (27) assignment -> INTEGER TIMES assignment .

    SEMICOLON       reduce using rule 27 (assignment -> INTEGER TIMES assignment .)
    RPAREN          reduce using rule 27 (assignment -> INTEGER TIMES assignment .)
    APOST           reduce using rule 27 (assignment -> INTEGER TIMES assignment .)
    RBRACKET        reduce using rule 27 (assignment -> INTEGER TIMES assignment .)
    INT             reduce using rule 27 (assignment -> INTEGER TIMES assignment .)
    FLOAT           reduce using rule 27 (assignment -> INTEGER TIMES assignment .)
    CHAR            reduce using rule 27 (assignment -> INTEGER TIMES assignment .)
    VOID            reduce using rule 27 (assignment -> INTEGER TIMES assignment .)
    IDENTIFIER      reduce using rule 27 (assignment -> INTEGER TIMES assignment .)
    POUND           reduce using rule 27 (assignment -> INTEGER TIMES assignment .)
    $end            reduce using rule 27 (assignment -> INTEGER TIMES assignment .)
    EQUALS          reduce using rule 27 (assignment -> INTEGER TIMES assignment .)
    LESS            reduce using rule 27 (assignment -> INTEGER TIMES assignment .)
    GREATER         reduce using rule 27 (assignment -> INTEGER TIMES assignment .)
    AND             reduce using rule 27 (assignment -> INTEGER TIMES assignment .)
    OR              reduce using rule 27 (assignment -> INTEGER TIMES assignment .)


state 87

    (28) assignment -> INTEGER DIVIDE assignment .

    SEMICOLON       reduce using rule 28 (assignment -> INTEGER DIVIDE assignment .)
    RPAREN          reduce using rule 28 (assignment -> INTEGER DIVIDE assignment .)
    APOST           reduce using rule 28 (assignment -> INTEGER DIVIDE assignment .)
    RBRACKET        reduce using rule 28 (assignment -> INTEGER DIVIDE assignment .)
    INT             reduce using rule 28 (assignment -> INTEGER DIVIDE assignment .)
    FLOAT           reduce using rule 28 (assignment -> INTEGER DIVIDE assignment .)
    CHAR            reduce using rule 28 (assignment -> INTEGER DIVIDE assignment .)
    VOID            reduce using rule 28 (assignment -> INTEGER DIVIDE assignment .)
    IDENTIFIER      reduce using rule 28 (assignment -> INTEGER DIVIDE assignment .)
    POUND           reduce using rule 28 (assignment -> INTEGER DIVIDE assignment .)
    $end            reduce using rule 28 (assignment -> INTEGER DIVIDE assignment .)
    EQUALS          reduce using rule 28 (assignment -> INTEGER DIVIDE assignment .)
    LESS            reduce using rule 28 (assignment -> INTEGER DIVIDE assignment .)
    GREATER         reduce using rule 28 (assignment -> INTEGER DIVIDE assignment .)
    AND             reduce using rule 28 (assignment -> INTEGER DIVIDE assignment .)
    OR              reduce using rule 28 (assignment -> INTEGER DIVIDE assignment .)


state 88

    (29) assignment -> INTEGER MODULUS assignment .

    SEMICOLON       reduce using rule 29 (assignment -> INTEGER MODULUS assignment .)
    RPAREN          reduce using rule 29 (assignment -> INTEGER MODULUS assignment .)
    APOST           reduce using rule 29 (assignment -> INTEGER MODULUS assignment .)
    RBRACKET        reduce using rule 29 (assignment -> INTEGER MODULUS assignment .)
    INT             reduce using rule 29 (assignment -> INTEGER MODULUS assignment .)
    FLOAT           reduce using rule 29 (assignment -> INTEGER MODULUS assignment .)
    CHAR            reduce using rule 29 (assignment -> INTEGER MODULUS assignment .)
    VOID            reduce using rule 29 (assignment -> INTEGER MODULUS assignment .)
    IDENTIFIER      reduce using rule 29 (assignment -> INTEGER MODULUS assignment .)
    POUND           reduce using rule 29 (assignment -> INTEGER MODULUS assignment .)
    $end            reduce using rule 29 (assignment -> INTEGER MODULUS assignment .)
    EQUALS          reduce using rule 29 (assignment -> INTEGER MODULUS assignment .)
    LESS            reduce using rule 29 (assignment -> INTEGER MODULUS assignment .)
    GREATER         reduce using rule 29 (assignment -> INTEGER MODULUS assignment .)
    AND             reduce using rule 29 (assignment -> INTEGER MODULUS assignment .)
    OR              reduce using rule 29 (assignment -> INTEGER MODULUS assignment .)


state 89

    (30) assignment -> APOST assignment APOST .

    SEMICOLON       reduce using rule 30 (assignment -> APOST assignment APOST .)
    RPAREN          reduce using rule 30 (assignment -> APOST assignment APOST .)
    APOST           reduce using rule 30 (assignment -> APOST assignment APOST .)
    RBRACKET        reduce using rule 30 (assignment -> APOST assignment APOST .)
    INT             reduce using rule 30 (assignment -> APOST assignment APOST .)
    FLOAT           reduce using rule 30 (assignment -> APOST assignment APOST .)
    CHAR            reduce using rule 30 (assignment -> APOST assignment APOST .)
    VOID            reduce using rule 30 (assignment -> APOST assignment APOST .)
    IDENTIFIER      reduce using rule 30 (assignment -> APOST assignment APOST .)
    POUND           reduce using rule 30 (assignment -> APOST assignment APOST .)
    $end            reduce using rule 30 (assignment -> APOST assignment APOST .)
    EQUALS          reduce using rule 30 (assignment -> APOST assignment APOST .)
    LESS            reduce using rule 30 (assignment -> APOST assignment APOST .)
    GREATER         reduce using rule 30 (assignment -> APOST assignment APOST .)
    AND             reduce using rule 30 (assignment -> APOST assignment APOST .)
    OR              reduce using rule 30 (assignment -> APOST assignment APOST .)


state 90

    (51) array_usage -> IDENTIFIER LBRACKET assignment RBRACKET .

    SEMICOLON       reduce using rule 51 (array_usage -> IDENTIFIER LBRACKET assignment RBRACKET .)
    ASSIGN          reduce using rule 51 (array_usage -> IDENTIFIER LBRACKET assignment RBRACKET .)
    PLUS            reduce using rule 51 (array_usage -> IDENTIFIER LBRACKET assignment RBRACKET .)
    MINUS           reduce using rule 51 (array_usage -> IDENTIFIER LBRACKET assignment RBRACKET .)
    RPAREN          reduce using rule 51 (array_usage -> IDENTIFIER LBRACKET assignment RBRACKET .)
    APOST           reduce using rule 51 (array_usage -> IDENTIFIER LBRACKET assignment RBRACKET .)
    RBRACKET        reduce using rule 51 (array_usage -> IDENTIFIER LBRACKET assignment RBRACKET .)
    INT             reduce using rule 51 (array_usage -> IDENTIFIER LBRACKET assignment RBRACKET .)
    FLOAT           reduce using rule 51 (array_usage -> IDENTIFIER LBRACKET assignment RBRACKET .)
    CHAR            reduce using rule 51 (array_usage -> IDENTIFIER LBRACKET assignment RBRACKET .)
    VOID            reduce using rule 51 (array_usage -> IDENTIFIER LBRACKET assignment RBRACKET .)
    IDENTIFIER      reduce using rule 51 (array_usage -> IDENTIFIER LBRACKET assignment RBRACKET .)
    POUND           reduce using rule 51 (array_usage -> IDENTIFIER LBRACKET assignment RBRACKET .)
    $end            reduce using rule 51 (array_usage -> IDENTIFIER LBRACKET assignment RBRACKET .)
    EQUALS          reduce using rule 51 (array_usage -> IDENTIFIER LBRACKET assignment RBRACKET .)
    LESS            reduce using rule 51 (array_usage -> IDENTIFIER LBRACKET assignment RBRACKET .)
    GREATER         reduce using rule 51 (array_usage -> IDENTIFIER LBRACKET assignment RBRACKET .)
    AND             reduce using rule 51 (array_usage -> IDENTIFIER LBRACKET assignment RBRACKET .)
    OR              reduce using rule 51 (array_usage -> IDENTIFIER LBRACKET assignment RBRACKET .)


state 91

    (85) macro_definition -> POUND DEFINE IDENTIFIER assignment .

    INT             reduce using rule 85 (macro_definition -> POUND DEFINE IDENTIFIER assignment .)
    FLOAT           reduce using rule 85 (macro_definition -> POUND DEFINE IDENTIFIER assignment .)
    CHAR            reduce using rule 85 (macro_definition -> POUND DEFINE IDENTIFIER assignment .)
    VOID            reduce using rule 85 (macro_definition -> POUND DEFINE IDENTIFIER assignment .)
    IDENTIFIER      reduce using rule 85 (macro_definition -> POUND DEFINE IDENTIFIER assignment .)
    POUND           reduce using rule 85 (macro_definition -> POUND DEFINE IDENTIFIER assignment .)
    $end            reduce using rule 85 (macro_definition -> POUND DEFINE IDENTIFIER assignment .)


state 92

    (86) file_inclusion -> POUND INCLUDE LESS HEADER . GREATER

    GREATER         shift and go to state 98


state 93

    (87) file_inclusion -> POUND INCLUDE QUOTE HEADER . QUOTE

    QUOTE           shift and go to state 99


state 94

    (57) argument -> type IDENTIFIER .

    COMMA           reduce using rule 57 (argument -> type IDENTIFIER .)
    RPAREN          reduce using rule 57 (argument -> type IDENTIFIER .)


state 95

    (52) function -> type IDENTIFIER LPAREN argument_list_option RPAREN . compound_statement
    (58) compound_statement -> . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 101

    compound_statement             shift and go to state 100

state 96

    (55) argument_list -> argument_list COMMA . argument
    (57) argument -> . type IDENTIFIER
    (47) type -> . INT
    (48) type -> . FLOAT
    (49) type -> . CHAR
    (50) type -> . VOID

    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    VOID            shift and go to state 13

    argument                       shift and go to state 102
    type                           shift and go to state 60

state 97

    (45) function_call -> IDENTIFIER LPAREN . RPAREN
    (46) function_call -> IDENTIFIER LPAREN . assignment RPAREN
    (14) assignment -> . IDENTIFIER ASSIGN assignment
    (15) assignment -> . IDENTIFIER ASSIGN function_call
    (16) assignment -> . IDENTIFIER ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . IDENTIFIER COMMA assignment
    (19) assignment -> . INTEGER COMMA assignment
    (20) assignment -> . IDENTIFIER PLUS assignment
    (21) assignment -> . IDENTIFIER MINUS assignment
    (22) assignment -> . IDENTIFIER TIMES assignment
    (23) assignment -> . IDENTIFIER DIVIDE assignment
    (24) assignment -> . IDENTIFIER MODULUS assignment
    (25) assignment -> . INTEGER PLUS assignment
    (26) assignment -> . INTEGER MINUS assignment
    (27) assignment -> . INTEGER TIMES assignment
    (28) assignment -> . INTEGER DIVIDE assignment
    (29) assignment -> . INTEGER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . INTEGER PLUS PLUS
    (34) assignment -> . IDENTIFIER PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . INTEGER MINUS MINUS
    (37) assignment -> . IDENTIFIER MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . BOOLEAN
    (40) assignment -> . FLOATINGPOINT
    (41) assignment -> . INTEGER
    (42) assignment -> . STRING
    (43) assignment -> . IDENTIFIER
    (44) assignment -> . LETTER
    (51) array_usage -> . IDENTIFIER LBRACKET assignment RBRACKET

    RPAREN          shift and go to state 103
    IDENTIFIER      shift and go to state 41
    INTEGER         shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    BOOLEAN         shift and go to state 24
    FLOATINGPOINT   shift and go to state 25
    STRING          shift and go to state 26
    LETTER          shift and go to state 27

    assignment                     shift and go to state 104
    array_usage                    shift and go to state 42

state 98

    (86) file_inclusion -> POUND INCLUDE LESS HEADER GREATER .

    INT             reduce using rule 86 (file_inclusion -> POUND INCLUDE LESS HEADER GREATER .)
    FLOAT           reduce using rule 86 (file_inclusion -> POUND INCLUDE LESS HEADER GREATER .)
    CHAR            reduce using rule 86 (file_inclusion -> POUND INCLUDE LESS HEADER GREATER .)
    VOID            reduce using rule 86 (file_inclusion -> POUND INCLUDE LESS HEADER GREATER .)
    IDENTIFIER      reduce using rule 86 (file_inclusion -> POUND INCLUDE LESS HEADER GREATER .)
    POUND           reduce using rule 86 (file_inclusion -> POUND INCLUDE LESS HEADER GREATER .)
    $end            reduce using rule 86 (file_inclusion -> POUND INCLUDE LESS HEADER GREATER .)


state 99

    (87) file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE .

    INT             reduce using rule 87 (file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE .)
    FLOAT           reduce using rule 87 (file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE .)
    CHAR            reduce using rule 87 (file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE .)
    VOID            reduce using rule 87 (file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE .)
    IDENTIFIER      reduce using rule 87 (file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE .)
    POUND           reduce using rule 87 (file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE .)
    $end            reduce using rule 87 (file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE .)


state 100

    (52) function -> type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement .

    INT             reduce using rule 52 (function -> type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement .)
    FLOAT           reduce using rule 52 (function -> type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement .)
    CHAR            reduce using rule 52 (function -> type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement .)
    VOID            reduce using rule 52 (function -> type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement .)
    IDENTIFIER      reduce using rule 52 (function -> type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement .)
    POUND           reduce using rule 52 (function -> type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement .)
    $end            reduce using rule 52 (function -> type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement .)


state 101

    (58) compound_statement -> LBRACE . statement_list RBRACE
    (59) statement_list -> . statement_list statement
    (60) statement_list -> . empty
    (88) empty -> .

    RBRACE          reduce using rule 88 (empty -> .)
    WHILE           reduce using rule 88 (empty -> .)
    DO              reduce using rule 88 (empty -> .)
    IF              reduce using rule 88 (empty -> .)
    RETURN          reduce using rule 88 (empty -> .)
    INT             reduce using rule 88 (empty -> .)
    FLOAT           reduce using rule 88 (empty -> .)
    CHAR            reduce using rule 88 (empty -> .)
    VOID            reduce using rule 88 (empty -> .)
    IDENTIFIER      reduce using rule 88 (empty -> .)
    INTEGER         reduce using rule 88 (empty -> .)
    APOST           reduce using rule 88 (empty -> .)
    LPAREN          reduce using rule 88 (empty -> .)
    MINUS           reduce using rule 88 (empty -> .)
    BOOLEAN         reduce using rule 88 (empty -> .)
    FLOATINGPOINT   reduce using rule 88 (empty -> .)
    STRING          reduce using rule 88 (empty -> .)
    LETTER          reduce using rule 88 (empty -> .)

    statement_list                 shift and go to state 105
    empty                          shift and go to state 106

state 102

    (55) argument_list -> argument_list COMMA argument .

    COMMA           reduce using rule 55 (argument_list -> argument_list COMMA argument .)
    RPAREN          reduce using rule 55 (argument_list -> argument_list COMMA argument .)


state 103

    (45) function_call -> IDENTIFIER LPAREN RPAREN .

    SEMICOLON       reduce using rule 45 (function_call -> IDENTIFIER LPAREN RPAREN .)
    RPAREN          reduce using rule 45 (function_call -> IDENTIFIER LPAREN RPAREN .)
    APOST           reduce using rule 45 (function_call -> IDENTIFIER LPAREN RPAREN .)
    RBRACKET        reduce using rule 45 (function_call -> IDENTIFIER LPAREN RPAREN .)
    INT             reduce using rule 45 (function_call -> IDENTIFIER LPAREN RPAREN .)
    FLOAT           reduce using rule 45 (function_call -> IDENTIFIER LPAREN RPAREN .)
    CHAR            reduce using rule 45 (function_call -> IDENTIFIER LPAREN RPAREN .)
    VOID            reduce using rule 45 (function_call -> IDENTIFIER LPAREN RPAREN .)
    IDENTIFIER      reduce using rule 45 (function_call -> IDENTIFIER LPAREN RPAREN .)
    POUND           reduce using rule 45 (function_call -> IDENTIFIER LPAREN RPAREN .)
    $end            reduce using rule 45 (function_call -> IDENTIFIER LPAREN RPAREN .)
    EQUALS          reduce using rule 45 (function_call -> IDENTIFIER LPAREN RPAREN .)
    LESS            reduce using rule 45 (function_call -> IDENTIFIER LPAREN RPAREN .)
    GREATER         reduce using rule 45 (function_call -> IDENTIFIER LPAREN RPAREN .)
    AND             reduce using rule 45 (function_call -> IDENTIFIER LPAREN RPAREN .)
    OR              reduce using rule 45 (function_call -> IDENTIFIER LPAREN RPAREN .)


state 104

    (46) function_call -> IDENTIFIER LPAREN assignment . RPAREN

    RPAREN          shift and go to state 107


state 105

    (58) compound_statement -> LBRACE statement_list . RBRACE
    (59) statement_list -> statement_list . statement
    (61) statement -> . iteration_statement
    (62) statement -> . declaration
    (63) statement -> . selection_statement
    (64) statement -> . return-statement
    (65) iteration_statement -> . WHILE LPAREN expression RPAREN compound_statement
    (66) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (67) iteration_statement -> . DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON
    (68) iteration_statement -> . DO statement WHILE LPAREN expression RPAREN SEMICOLON
    (9) declaration -> . type assignment SEMICOLON
    (10) declaration -> . assignment SEMICOLON
    (11) declaration -> . function_call SEMICOLON
    (12) declaration -> . array_usage SEMICOLON
    (13) declaration -> . type array_usage SEMICOLON
    (69) selection_statement -> . IF LPAREN expression RPAREN compound_statement
    (70) selection_statement -> . IF LPAREN expression RPAREN statement
    (71) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE compound_statement
    (72) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE statement
    (73) selection_statement -> . IF LPAREN expression RPAREN statement ELSE compound_statement
    (74) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (75) return-statement -> . RETURN SEMICOLON
    (76) return-statement -> . RETURN expression SEMICOLON
    (47) type -> . INT
    (48) type -> . FLOAT
    (49) type -> . CHAR
    (50) type -> . VOID
    (14) assignment -> . IDENTIFIER ASSIGN assignment
    (15) assignment -> . IDENTIFIER ASSIGN function_call
    (16) assignment -> . IDENTIFIER ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . IDENTIFIER COMMA assignment
    (19) assignment -> . INTEGER COMMA assignment
    (20) assignment -> . IDENTIFIER PLUS assignment
    (21) assignment -> . IDENTIFIER MINUS assignment
    (22) assignment -> . IDENTIFIER TIMES assignment
    (23) assignment -> . IDENTIFIER DIVIDE assignment
    (24) assignment -> . IDENTIFIER MODULUS assignment
    (25) assignment -> . INTEGER PLUS assignment
    (26) assignment -> . INTEGER MINUS assignment
    (27) assignment -> . INTEGER TIMES assignment
    (28) assignment -> . INTEGER DIVIDE assignment
    (29) assignment -> . INTEGER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . INTEGER PLUS PLUS
    (34) assignment -> . IDENTIFIER PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . INTEGER MINUS MINUS
    (37) assignment -> . IDENTIFIER MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . BOOLEAN
    (40) assignment -> . FLOATINGPOINT
    (41) assignment -> . INTEGER
    (42) assignment -> . STRING
    (43) assignment -> . IDENTIFIER
    (44) assignment -> . LETTER
    (45) function_call -> . IDENTIFIER LPAREN RPAREN
    (46) function_call -> . IDENTIFIER LPAREN assignment RPAREN
    (51) array_usage -> . IDENTIFIER LBRACKET assignment RBRACKET

    RBRACE          shift and go to state 108
    WHILE           shift and go to state 114
    DO              shift and go to state 115
    IF              shift and go to state 120
    RETURN          shift and go to state 121
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    VOID            shift and go to state 13
    IDENTIFIER      shift and go to state 65
    INTEGER         shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    BOOLEAN         shift and go to state 24
    FLOATINGPOINT   shift and go to state 25
    STRING          shift and go to state 26
    LETTER          shift and go to state 27

    statement                      shift and go to state 109
    iteration_statement            shift and go to state 110
    declaration                    shift and go to state 111
    selection_statement            shift and go to state 112
    return-statement               shift and go to state 113
    type                           shift and go to state 116
    assignment                     shift and go to state 117
    function_call                  shift and go to state 118
    array_usage                    shift and go to state 119

state 106

    (60) statement_list -> empty .

    RBRACE          reduce using rule 60 (statement_list -> empty .)
    WHILE           reduce using rule 60 (statement_list -> empty .)
    DO              reduce using rule 60 (statement_list -> empty .)
    IF              reduce using rule 60 (statement_list -> empty .)
    RETURN          reduce using rule 60 (statement_list -> empty .)
    INT             reduce using rule 60 (statement_list -> empty .)
    FLOAT           reduce using rule 60 (statement_list -> empty .)
    CHAR            reduce using rule 60 (statement_list -> empty .)
    VOID            reduce using rule 60 (statement_list -> empty .)
    IDENTIFIER      reduce using rule 60 (statement_list -> empty .)
    INTEGER         reduce using rule 60 (statement_list -> empty .)
    APOST           reduce using rule 60 (statement_list -> empty .)
    LPAREN          reduce using rule 60 (statement_list -> empty .)
    MINUS           reduce using rule 60 (statement_list -> empty .)
    BOOLEAN         reduce using rule 60 (statement_list -> empty .)
    FLOATINGPOINT   reduce using rule 60 (statement_list -> empty .)
    STRING          reduce using rule 60 (statement_list -> empty .)
    LETTER          reduce using rule 60 (statement_list -> empty .)


state 107

    (46) function_call -> IDENTIFIER LPAREN assignment RPAREN .

    SEMICOLON       reduce using rule 46 (function_call -> IDENTIFIER LPAREN assignment RPAREN .)
    RPAREN          reduce using rule 46 (function_call -> IDENTIFIER LPAREN assignment RPAREN .)
    APOST           reduce using rule 46 (function_call -> IDENTIFIER LPAREN assignment RPAREN .)
    RBRACKET        reduce using rule 46 (function_call -> IDENTIFIER LPAREN assignment RPAREN .)
    INT             reduce using rule 46 (function_call -> IDENTIFIER LPAREN assignment RPAREN .)
    FLOAT           reduce using rule 46 (function_call -> IDENTIFIER LPAREN assignment RPAREN .)
    CHAR            reduce using rule 46 (function_call -> IDENTIFIER LPAREN assignment RPAREN .)
    VOID            reduce using rule 46 (function_call -> IDENTIFIER LPAREN assignment RPAREN .)
    IDENTIFIER      reduce using rule 46 (function_call -> IDENTIFIER LPAREN assignment RPAREN .)
    POUND           reduce using rule 46 (function_call -> IDENTIFIER LPAREN assignment RPAREN .)
    $end            reduce using rule 46 (function_call -> IDENTIFIER LPAREN assignment RPAREN .)
    EQUALS          reduce using rule 46 (function_call -> IDENTIFIER LPAREN assignment RPAREN .)
    LESS            reduce using rule 46 (function_call -> IDENTIFIER LPAREN assignment RPAREN .)
    GREATER         reduce using rule 46 (function_call -> IDENTIFIER LPAREN assignment RPAREN .)
    AND             reduce using rule 46 (function_call -> IDENTIFIER LPAREN assignment RPAREN .)
    OR              reduce using rule 46 (function_call -> IDENTIFIER LPAREN assignment RPAREN .)


state 108

    (58) compound_statement -> LBRACE statement_list RBRACE .

    INT             reduce using rule 58 (compound_statement -> LBRACE statement_list RBRACE .)
    FLOAT           reduce using rule 58 (compound_statement -> LBRACE statement_list RBRACE .)
    CHAR            reduce using rule 58 (compound_statement -> LBRACE statement_list RBRACE .)
    VOID            reduce using rule 58 (compound_statement -> LBRACE statement_list RBRACE .)
    IDENTIFIER      reduce using rule 58 (compound_statement -> LBRACE statement_list RBRACE .)
    POUND           reduce using rule 58 (compound_statement -> LBRACE statement_list RBRACE .)
    $end            reduce using rule 58 (compound_statement -> LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 58 (compound_statement -> LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 58 (compound_statement -> LBRACE statement_list RBRACE .)
    DO              reduce using rule 58 (compound_statement -> LBRACE statement_list RBRACE .)
    IF              reduce using rule 58 (compound_statement -> LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 58 (compound_statement -> LBRACE statement_list RBRACE .)
    INTEGER         reduce using rule 58 (compound_statement -> LBRACE statement_list RBRACE .)
    APOST           reduce using rule 58 (compound_statement -> LBRACE statement_list RBRACE .)
    LPAREN          reduce using rule 58 (compound_statement -> LBRACE statement_list RBRACE .)
    MINUS           reduce using rule 58 (compound_statement -> LBRACE statement_list RBRACE .)
    BOOLEAN         reduce using rule 58 (compound_statement -> LBRACE statement_list RBRACE .)
    FLOATINGPOINT   reduce using rule 58 (compound_statement -> LBRACE statement_list RBRACE .)
    STRING          reduce using rule 58 (compound_statement -> LBRACE statement_list RBRACE .)
    LETTER          reduce using rule 58 (compound_statement -> LBRACE statement_list RBRACE .)
    ELSE            reduce using rule 58 (compound_statement -> LBRACE statement_list RBRACE .)


state 109

    (59) statement_list -> statement_list statement .

    RBRACE          reduce using rule 59 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 59 (statement_list -> statement_list statement .)
    DO              reduce using rule 59 (statement_list -> statement_list statement .)
    IF              reduce using rule 59 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 59 (statement_list -> statement_list statement .)
    INT             reduce using rule 59 (statement_list -> statement_list statement .)
    FLOAT           reduce using rule 59 (statement_list -> statement_list statement .)
    CHAR            reduce using rule 59 (statement_list -> statement_list statement .)
    VOID            reduce using rule 59 (statement_list -> statement_list statement .)
    IDENTIFIER      reduce using rule 59 (statement_list -> statement_list statement .)
    INTEGER         reduce using rule 59 (statement_list -> statement_list statement .)
    APOST           reduce using rule 59 (statement_list -> statement_list statement .)
    LPAREN          reduce using rule 59 (statement_list -> statement_list statement .)
    MINUS           reduce using rule 59 (statement_list -> statement_list statement .)
    BOOLEAN         reduce using rule 59 (statement_list -> statement_list statement .)
    FLOATINGPOINT   reduce using rule 59 (statement_list -> statement_list statement .)
    STRING          reduce using rule 59 (statement_list -> statement_list statement .)
    LETTER          reduce using rule 59 (statement_list -> statement_list statement .)


state 110

    (61) statement -> iteration_statement .

    RBRACE          reduce using rule 61 (statement -> iteration_statement .)
    WHILE           reduce using rule 61 (statement -> iteration_statement .)
    DO              reduce using rule 61 (statement -> iteration_statement .)
    IF              reduce using rule 61 (statement -> iteration_statement .)
    RETURN          reduce using rule 61 (statement -> iteration_statement .)
    INT             reduce using rule 61 (statement -> iteration_statement .)
    FLOAT           reduce using rule 61 (statement -> iteration_statement .)
    CHAR            reduce using rule 61 (statement -> iteration_statement .)
    VOID            reduce using rule 61 (statement -> iteration_statement .)
    IDENTIFIER      reduce using rule 61 (statement -> iteration_statement .)
    INTEGER         reduce using rule 61 (statement -> iteration_statement .)
    APOST           reduce using rule 61 (statement -> iteration_statement .)
    LPAREN          reduce using rule 61 (statement -> iteration_statement .)
    MINUS           reduce using rule 61 (statement -> iteration_statement .)
    BOOLEAN         reduce using rule 61 (statement -> iteration_statement .)
    FLOATINGPOINT   reduce using rule 61 (statement -> iteration_statement .)
    STRING          reduce using rule 61 (statement -> iteration_statement .)
    LETTER          reduce using rule 61 (statement -> iteration_statement .)
    ELSE            reduce using rule 61 (statement -> iteration_statement .)


state 111

    (62) statement -> declaration .

    RBRACE          reduce using rule 62 (statement -> declaration .)
    WHILE           reduce using rule 62 (statement -> declaration .)
    DO              reduce using rule 62 (statement -> declaration .)
    IF              reduce using rule 62 (statement -> declaration .)
    RETURN          reduce using rule 62 (statement -> declaration .)
    INT             reduce using rule 62 (statement -> declaration .)
    FLOAT           reduce using rule 62 (statement -> declaration .)
    CHAR            reduce using rule 62 (statement -> declaration .)
    VOID            reduce using rule 62 (statement -> declaration .)
    IDENTIFIER      reduce using rule 62 (statement -> declaration .)
    INTEGER         reduce using rule 62 (statement -> declaration .)
    APOST           reduce using rule 62 (statement -> declaration .)
    LPAREN          reduce using rule 62 (statement -> declaration .)
    MINUS           reduce using rule 62 (statement -> declaration .)
    BOOLEAN         reduce using rule 62 (statement -> declaration .)
    FLOATINGPOINT   reduce using rule 62 (statement -> declaration .)
    STRING          reduce using rule 62 (statement -> declaration .)
    LETTER          reduce using rule 62 (statement -> declaration .)
    ELSE            reduce using rule 62 (statement -> declaration .)


state 112

    (63) statement -> selection_statement .

    RBRACE          reduce using rule 63 (statement -> selection_statement .)
    WHILE           reduce using rule 63 (statement -> selection_statement .)
    DO              reduce using rule 63 (statement -> selection_statement .)
    IF              reduce using rule 63 (statement -> selection_statement .)
    RETURN          reduce using rule 63 (statement -> selection_statement .)
    INT             reduce using rule 63 (statement -> selection_statement .)
    FLOAT           reduce using rule 63 (statement -> selection_statement .)
    CHAR            reduce using rule 63 (statement -> selection_statement .)
    VOID            reduce using rule 63 (statement -> selection_statement .)
    IDENTIFIER      reduce using rule 63 (statement -> selection_statement .)
    INTEGER         reduce using rule 63 (statement -> selection_statement .)
    APOST           reduce using rule 63 (statement -> selection_statement .)
    LPAREN          reduce using rule 63 (statement -> selection_statement .)
    MINUS           reduce using rule 63 (statement -> selection_statement .)
    BOOLEAN         reduce using rule 63 (statement -> selection_statement .)
    FLOATINGPOINT   reduce using rule 63 (statement -> selection_statement .)
    STRING          reduce using rule 63 (statement -> selection_statement .)
    LETTER          reduce using rule 63 (statement -> selection_statement .)
    ELSE            reduce using rule 63 (statement -> selection_statement .)


state 113

    (64) statement -> return-statement .

    RBRACE          reduce using rule 64 (statement -> return-statement .)
    WHILE           reduce using rule 64 (statement -> return-statement .)
    DO              reduce using rule 64 (statement -> return-statement .)
    IF              reduce using rule 64 (statement -> return-statement .)
    RETURN          reduce using rule 64 (statement -> return-statement .)
    INT             reduce using rule 64 (statement -> return-statement .)
    FLOAT           reduce using rule 64 (statement -> return-statement .)
    CHAR            reduce using rule 64 (statement -> return-statement .)
    VOID            reduce using rule 64 (statement -> return-statement .)
    IDENTIFIER      reduce using rule 64 (statement -> return-statement .)
    INTEGER         reduce using rule 64 (statement -> return-statement .)
    APOST           reduce using rule 64 (statement -> return-statement .)
    LPAREN          reduce using rule 64 (statement -> return-statement .)
    MINUS           reduce using rule 64 (statement -> return-statement .)
    BOOLEAN         reduce using rule 64 (statement -> return-statement .)
    FLOATINGPOINT   reduce using rule 64 (statement -> return-statement .)
    STRING          reduce using rule 64 (statement -> return-statement .)
    LETTER          reduce using rule 64 (statement -> return-statement .)
    ELSE            reduce using rule 64 (statement -> return-statement .)


state 114

    (65) iteration_statement -> WHILE . LPAREN expression RPAREN compound_statement
    (66) iteration_statement -> WHILE . LPAREN expression RPAREN statement

    LPAREN          shift and go to state 122


state 115

    (67) iteration_statement -> DO . compound_statement WHILE LPAREN expression RPAREN SEMICOLON
    (68) iteration_statement -> DO . statement WHILE LPAREN expression RPAREN SEMICOLON
    (58) compound_statement -> . LBRACE statement_list RBRACE
    (61) statement -> . iteration_statement
    (62) statement -> . declaration
    (63) statement -> . selection_statement
    (64) statement -> . return-statement
    (65) iteration_statement -> . WHILE LPAREN expression RPAREN compound_statement
    (66) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (67) iteration_statement -> . DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON
    (68) iteration_statement -> . DO statement WHILE LPAREN expression RPAREN SEMICOLON
    (9) declaration -> . type assignment SEMICOLON
    (10) declaration -> . assignment SEMICOLON
    (11) declaration -> . function_call SEMICOLON
    (12) declaration -> . array_usage SEMICOLON
    (13) declaration -> . type array_usage SEMICOLON
    (69) selection_statement -> . IF LPAREN expression RPAREN compound_statement
    (70) selection_statement -> . IF LPAREN expression RPAREN statement
    (71) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE compound_statement
    (72) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE statement
    (73) selection_statement -> . IF LPAREN expression RPAREN statement ELSE compound_statement
    (74) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (75) return-statement -> . RETURN SEMICOLON
    (76) return-statement -> . RETURN expression SEMICOLON
    (47) type -> . INT
    (48) type -> . FLOAT
    (49) type -> . CHAR
    (50) type -> . VOID
    (14) assignment -> . IDENTIFIER ASSIGN assignment
    (15) assignment -> . IDENTIFIER ASSIGN function_call
    (16) assignment -> . IDENTIFIER ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . IDENTIFIER COMMA assignment
    (19) assignment -> . INTEGER COMMA assignment
    (20) assignment -> . IDENTIFIER PLUS assignment
    (21) assignment -> . IDENTIFIER MINUS assignment
    (22) assignment -> . IDENTIFIER TIMES assignment
    (23) assignment -> . IDENTIFIER DIVIDE assignment
    (24) assignment -> . IDENTIFIER MODULUS assignment
    (25) assignment -> . INTEGER PLUS assignment
    (26) assignment -> . INTEGER MINUS assignment
    (27) assignment -> . INTEGER TIMES assignment
    (28) assignment -> . INTEGER DIVIDE assignment
    (29) assignment -> . INTEGER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . INTEGER PLUS PLUS
    (34) assignment -> . IDENTIFIER PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . INTEGER MINUS MINUS
    (37) assignment -> . IDENTIFIER MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . BOOLEAN
    (40) assignment -> . FLOATINGPOINT
    (41) assignment -> . INTEGER
    (42) assignment -> . STRING
    (43) assignment -> . IDENTIFIER
    (44) assignment -> . LETTER
    (45) function_call -> . IDENTIFIER LPAREN RPAREN
    (46) function_call -> . IDENTIFIER LPAREN assignment RPAREN
    (51) array_usage -> . IDENTIFIER LBRACKET assignment RBRACKET

    LBRACE          shift and go to state 101
    WHILE           shift and go to state 114
    DO              shift and go to state 115
    IF              shift and go to state 120
    RETURN          shift and go to state 121
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    VOID            shift and go to state 13
    IDENTIFIER      shift and go to state 65
    INTEGER         shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    BOOLEAN         shift and go to state 24
    FLOATINGPOINT   shift and go to state 25
    STRING          shift and go to state 26
    LETTER          shift and go to state 27

    compound_statement             shift and go to state 123
    statement                      shift and go to state 124
    iteration_statement            shift and go to state 110
    declaration                    shift and go to state 111
    selection_statement            shift and go to state 112
    return-statement               shift and go to state 113
    type                           shift and go to state 116
    assignment                     shift and go to state 117
    function_call                  shift and go to state 118
    array_usage                    shift and go to state 119

state 116

    (9) declaration -> type . assignment SEMICOLON
    (13) declaration -> type . array_usage SEMICOLON
    (14) assignment -> . IDENTIFIER ASSIGN assignment
    (15) assignment -> . IDENTIFIER ASSIGN function_call
    (16) assignment -> . IDENTIFIER ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . IDENTIFIER COMMA assignment
    (19) assignment -> . INTEGER COMMA assignment
    (20) assignment -> . IDENTIFIER PLUS assignment
    (21) assignment -> . IDENTIFIER MINUS assignment
    (22) assignment -> . IDENTIFIER TIMES assignment
    (23) assignment -> . IDENTIFIER DIVIDE assignment
    (24) assignment -> . IDENTIFIER MODULUS assignment
    (25) assignment -> . INTEGER PLUS assignment
    (26) assignment -> . INTEGER MINUS assignment
    (27) assignment -> . INTEGER TIMES assignment
    (28) assignment -> . INTEGER DIVIDE assignment
    (29) assignment -> . INTEGER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . INTEGER PLUS PLUS
    (34) assignment -> . IDENTIFIER PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . INTEGER MINUS MINUS
    (37) assignment -> . IDENTIFIER MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . BOOLEAN
    (40) assignment -> . FLOATINGPOINT
    (41) assignment -> . INTEGER
    (42) assignment -> . STRING
    (43) assignment -> . IDENTIFIER
    (44) assignment -> . LETTER
    (51) array_usage -> . IDENTIFIER LBRACKET assignment RBRACKET

    IDENTIFIER      shift and go to state 41
    INTEGER         shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    BOOLEAN         shift and go to state 24
    FLOATINGPOINT   shift and go to state 25
    STRING          shift and go to state 26
    LETTER          shift and go to state 27

    assignment                     shift and go to state 125
    array_usage                    shift and go to state 126

state 117

    (10) declaration -> assignment . SEMICOLON

    SEMICOLON       shift and go to state 127


state 118

    (11) declaration -> function_call . SEMICOLON

    SEMICOLON       shift and go to state 128


state 119

    (12) declaration -> array_usage . SEMICOLON
    (17) assignment -> array_usage . ASSIGN assignment
    (35) assignment -> array_usage . PLUS PLUS
    (38) assignment -> array_usage . MINUS MINUS

    SEMICOLON       shift and go to state 129
    ASSIGN          shift and go to state 45
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47


state 120

    (69) selection_statement -> IF . LPAREN expression RPAREN compound_statement
    (70) selection_statement -> IF . LPAREN expression RPAREN statement
    (71) selection_statement -> IF . LPAREN expression RPAREN compound_statement ELSE compound_statement
    (72) selection_statement -> IF . LPAREN expression RPAREN compound_statement ELSE statement
    (73) selection_statement -> IF . LPAREN expression RPAREN statement ELSE compound_statement
    (74) selection_statement -> IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN          shift and go to state 130


state 121

    (75) return-statement -> RETURN . SEMICOLON
    (76) return-statement -> RETURN . expression SEMICOLON
    (77) expression -> . expression EQUALS expression
    (78) expression -> . expression LESS expression
    (79) expression -> . expression GREATER expression
    (80) expression -> . expression AND expression
    (81) expression -> . expression OR expression
    (82) expression -> . NOT expression
    (83) expression -> . assignment
    (84) expression -> . array_usage
    (14) assignment -> . IDENTIFIER ASSIGN assignment
    (15) assignment -> . IDENTIFIER ASSIGN function_call
    (16) assignment -> . IDENTIFIER ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . IDENTIFIER COMMA assignment
    (19) assignment -> . INTEGER COMMA assignment
    (20) assignment -> . IDENTIFIER PLUS assignment
    (21) assignment -> . IDENTIFIER MINUS assignment
    (22) assignment -> . IDENTIFIER TIMES assignment
    (23) assignment -> . IDENTIFIER DIVIDE assignment
    (24) assignment -> . IDENTIFIER MODULUS assignment
    (25) assignment -> . INTEGER PLUS assignment
    (26) assignment -> . INTEGER MINUS assignment
    (27) assignment -> . INTEGER TIMES assignment
    (28) assignment -> . INTEGER DIVIDE assignment
    (29) assignment -> . INTEGER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . INTEGER PLUS PLUS
    (34) assignment -> . IDENTIFIER PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . INTEGER MINUS MINUS
    (37) assignment -> . IDENTIFIER MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . BOOLEAN
    (40) assignment -> . FLOATINGPOINT
    (41) assignment -> . INTEGER
    (42) assignment -> . STRING
    (43) assignment -> . IDENTIFIER
    (44) assignment -> . LETTER
    (51) array_usage -> . IDENTIFIER LBRACKET assignment RBRACKET

    SEMICOLON       shift and go to state 131
    NOT             shift and go to state 133
    IDENTIFIER      shift and go to state 41
    INTEGER         shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    BOOLEAN         shift and go to state 24
    FLOATINGPOINT   shift and go to state 25
    STRING          shift and go to state 26
    LETTER          shift and go to state 27

    expression                     shift and go to state 132
    assignment                     shift and go to state 134
    array_usage                    shift and go to state 135

state 122

    (65) iteration_statement -> WHILE LPAREN . expression RPAREN compound_statement
    (66) iteration_statement -> WHILE LPAREN . expression RPAREN statement
    (77) expression -> . expression EQUALS expression
    (78) expression -> . expression LESS expression
    (79) expression -> . expression GREATER expression
    (80) expression -> . expression AND expression
    (81) expression -> . expression OR expression
    (82) expression -> . NOT expression
    (83) expression -> . assignment
    (84) expression -> . array_usage
    (14) assignment -> . IDENTIFIER ASSIGN assignment
    (15) assignment -> . IDENTIFIER ASSIGN function_call
    (16) assignment -> . IDENTIFIER ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . IDENTIFIER COMMA assignment
    (19) assignment -> . INTEGER COMMA assignment
    (20) assignment -> . IDENTIFIER PLUS assignment
    (21) assignment -> . IDENTIFIER MINUS assignment
    (22) assignment -> . IDENTIFIER TIMES assignment
    (23) assignment -> . IDENTIFIER DIVIDE assignment
    (24) assignment -> . IDENTIFIER MODULUS assignment
    (25) assignment -> . INTEGER PLUS assignment
    (26) assignment -> . INTEGER MINUS assignment
    (27) assignment -> . INTEGER TIMES assignment
    (28) assignment -> . INTEGER DIVIDE assignment
    (29) assignment -> . INTEGER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . INTEGER PLUS PLUS
    (34) assignment -> . IDENTIFIER PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . INTEGER MINUS MINUS
    (37) assignment -> . IDENTIFIER MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . BOOLEAN
    (40) assignment -> . FLOATINGPOINT
    (41) assignment -> . INTEGER
    (42) assignment -> . STRING
    (43) assignment -> . IDENTIFIER
    (44) assignment -> . LETTER
    (51) array_usage -> . IDENTIFIER LBRACKET assignment RBRACKET

    NOT             shift and go to state 133
    IDENTIFIER      shift and go to state 41
    INTEGER         shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    BOOLEAN         shift and go to state 24
    FLOATINGPOINT   shift and go to state 25
    STRING          shift and go to state 26
    LETTER          shift and go to state 27

    expression                     shift and go to state 136
    assignment                     shift and go to state 134
    array_usage                    shift and go to state 135

state 123

    (67) iteration_statement -> DO compound_statement . WHILE LPAREN expression RPAREN SEMICOLON

    WHILE           shift and go to state 137


state 124

    (68) iteration_statement -> DO statement . WHILE LPAREN expression RPAREN SEMICOLON

    WHILE           shift and go to state 138


state 125

    (9) declaration -> type assignment . SEMICOLON

    SEMICOLON       shift and go to state 139


state 126

    (13) declaration -> type array_usage . SEMICOLON
    (17) assignment -> array_usage . ASSIGN assignment
    (35) assignment -> array_usage . PLUS PLUS
    (38) assignment -> array_usage . MINUS MINUS

    SEMICOLON       shift and go to state 140
    ASSIGN          shift and go to state 45
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47


state 127

    (10) declaration -> assignment SEMICOLON .

    RBRACE          reduce using rule 10 (declaration -> assignment SEMICOLON .)
    WHILE           reduce using rule 10 (declaration -> assignment SEMICOLON .)
    DO              reduce using rule 10 (declaration -> assignment SEMICOLON .)
    IF              reduce using rule 10 (declaration -> assignment SEMICOLON .)
    RETURN          reduce using rule 10 (declaration -> assignment SEMICOLON .)
    INT             reduce using rule 10 (declaration -> assignment SEMICOLON .)
    FLOAT           reduce using rule 10 (declaration -> assignment SEMICOLON .)
    CHAR            reduce using rule 10 (declaration -> assignment SEMICOLON .)
    VOID            reduce using rule 10 (declaration -> assignment SEMICOLON .)
    IDENTIFIER      reduce using rule 10 (declaration -> assignment SEMICOLON .)
    INTEGER         reduce using rule 10 (declaration -> assignment SEMICOLON .)
    APOST           reduce using rule 10 (declaration -> assignment SEMICOLON .)
    LPAREN          reduce using rule 10 (declaration -> assignment SEMICOLON .)
    MINUS           reduce using rule 10 (declaration -> assignment SEMICOLON .)
    BOOLEAN         reduce using rule 10 (declaration -> assignment SEMICOLON .)
    FLOATINGPOINT   reduce using rule 10 (declaration -> assignment SEMICOLON .)
    STRING          reduce using rule 10 (declaration -> assignment SEMICOLON .)
    LETTER          reduce using rule 10 (declaration -> assignment SEMICOLON .)
    ELSE            reduce using rule 10 (declaration -> assignment SEMICOLON .)


state 128

    (11) declaration -> function_call SEMICOLON .

    RBRACE          reduce using rule 11 (declaration -> function_call SEMICOLON .)
    WHILE           reduce using rule 11 (declaration -> function_call SEMICOLON .)
    DO              reduce using rule 11 (declaration -> function_call SEMICOLON .)
    IF              reduce using rule 11 (declaration -> function_call SEMICOLON .)
    RETURN          reduce using rule 11 (declaration -> function_call SEMICOLON .)
    INT             reduce using rule 11 (declaration -> function_call SEMICOLON .)
    FLOAT           reduce using rule 11 (declaration -> function_call SEMICOLON .)
    CHAR            reduce using rule 11 (declaration -> function_call SEMICOLON .)
    VOID            reduce using rule 11 (declaration -> function_call SEMICOLON .)
    IDENTIFIER      reduce using rule 11 (declaration -> function_call SEMICOLON .)
    INTEGER         reduce using rule 11 (declaration -> function_call SEMICOLON .)
    APOST           reduce using rule 11 (declaration -> function_call SEMICOLON .)
    LPAREN          reduce using rule 11 (declaration -> function_call SEMICOLON .)
    MINUS           reduce using rule 11 (declaration -> function_call SEMICOLON .)
    BOOLEAN         reduce using rule 11 (declaration -> function_call SEMICOLON .)
    FLOATINGPOINT   reduce using rule 11 (declaration -> function_call SEMICOLON .)
    STRING          reduce using rule 11 (declaration -> function_call SEMICOLON .)
    LETTER          reduce using rule 11 (declaration -> function_call SEMICOLON .)
    ELSE            reduce using rule 11 (declaration -> function_call SEMICOLON .)


state 129

    (12) declaration -> array_usage SEMICOLON .

    RBRACE          reduce using rule 12 (declaration -> array_usage SEMICOLON .)
    WHILE           reduce using rule 12 (declaration -> array_usage SEMICOLON .)
    DO              reduce using rule 12 (declaration -> array_usage SEMICOLON .)
    IF              reduce using rule 12 (declaration -> array_usage SEMICOLON .)
    RETURN          reduce using rule 12 (declaration -> array_usage SEMICOLON .)
    INT             reduce using rule 12 (declaration -> array_usage SEMICOLON .)
    FLOAT           reduce using rule 12 (declaration -> array_usage SEMICOLON .)
    CHAR            reduce using rule 12 (declaration -> array_usage SEMICOLON .)
    VOID            reduce using rule 12 (declaration -> array_usage SEMICOLON .)
    IDENTIFIER      reduce using rule 12 (declaration -> array_usage SEMICOLON .)
    INTEGER         reduce using rule 12 (declaration -> array_usage SEMICOLON .)
    APOST           reduce using rule 12 (declaration -> array_usage SEMICOLON .)
    LPAREN          reduce using rule 12 (declaration -> array_usage SEMICOLON .)
    MINUS           reduce using rule 12 (declaration -> array_usage SEMICOLON .)
    BOOLEAN         reduce using rule 12 (declaration -> array_usage SEMICOLON .)
    FLOATINGPOINT   reduce using rule 12 (declaration -> array_usage SEMICOLON .)
    STRING          reduce using rule 12 (declaration -> array_usage SEMICOLON .)
    LETTER          reduce using rule 12 (declaration -> array_usage SEMICOLON .)
    ELSE            reduce using rule 12 (declaration -> array_usage SEMICOLON .)


state 130

    (69) selection_statement -> IF LPAREN . expression RPAREN compound_statement
    (70) selection_statement -> IF LPAREN . expression RPAREN statement
    (71) selection_statement -> IF LPAREN . expression RPAREN compound_statement ELSE compound_statement
    (72) selection_statement -> IF LPAREN . expression RPAREN compound_statement ELSE statement
    (73) selection_statement -> IF LPAREN . expression RPAREN statement ELSE compound_statement
    (74) selection_statement -> IF LPAREN . expression RPAREN statement ELSE statement
    (77) expression -> . expression EQUALS expression
    (78) expression -> . expression LESS expression
    (79) expression -> . expression GREATER expression
    (80) expression -> . expression AND expression
    (81) expression -> . expression OR expression
    (82) expression -> . NOT expression
    (83) expression -> . assignment
    (84) expression -> . array_usage
    (14) assignment -> . IDENTIFIER ASSIGN assignment
    (15) assignment -> . IDENTIFIER ASSIGN function_call
    (16) assignment -> . IDENTIFIER ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . IDENTIFIER COMMA assignment
    (19) assignment -> . INTEGER COMMA assignment
    (20) assignment -> . IDENTIFIER PLUS assignment
    (21) assignment -> . IDENTIFIER MINUS assignment
    (22) assignment -> . IDENTIFIER TIMES assignment
    (23) assignment -> . IDENTIFIER DIVIDE assignment
    (24) assignment -> . IDENTIFIER MODULUS assignment
    (25) assignment -> . INTEGER PLUS assignment
    (26) assignment -> . INTEGER MINUS assignment
    (27) assignment -> . INTEGER TIMES assignment
    (28) assignment -> . INTEGER DIVIDE assignment
    (29) assignment -> . INTEGER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . INTEGER PLUS PLUS
    (34) assignment -> . IDENTIFIER PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . INTEGER MINUS MINUS
    (37) assignment -> . IDENTIFIER MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . BOOLEAN
    (40) assignment -> . FLOATINGPOINT
    (41) assignment -> . INTEGER
    (42) assignment -> . STRING
    (43) assignment -> . IDENTIFIER
    (44) assignment -> . LETTER
    (51) array_usage -> . IDENTIFIER LBRACKET assignment RBRACKET

    NOT             shift and go to state 133
    IDENTIFIER      shift and go to state 41
    INTEGER         shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    BOOLEAN         shift and go to state 24
    FLOATINGPOINT   shift and go to state 25
    STRING          shift and go to state 26
    LETTER          shift and go to state 27

    expression                     shift and go to state 141
    assignment                     shift and go to state 134
    array_usage                    shift and go to state 135

state 131

    (75) return-statement -> RETURN SEMICOLON .

    RBRACE          reduce using rule 75 (return-statement -> RETURN SEMICOLON .)
    WHILE           reduce using rule 75 (return-statement -> RETURN SEMICOLON .)
    DO              reduce using rule 75 (return-statement -> RETURN SEMICOLON .)
    IF              reduce using rule 75 (return-statement -> RETURN SEMICOLON .)
    RETURN          reduce using rule 75 (return-statement -> RETURN SEMICOLON .)
    INT             reduce using rule 75 (return-statement -> RETURN SEMICOLON .)
    FLOAT           reduce using rule 75 (return-statement -> RETURN SEMICOLON .)
    CHAR            reduce using rule 75 (return-statement -> RETURN SEMICOLON .)
    VOID            reduce using rule 75 (return-statement -> RETURN SEMICOLON .)
    IDENTIFIER      reduce using rule 75 (return-statement -> RETURN SEMICOLON .)
    INTEGER         reduce using rule 75 (return-statement -> RETURN SEMICOLON .)
    APOST           reduce using rule 75 (return-statement -> RETURN SEMICOLON .)
    LPAREN          reduce using rule 75 (return-statement -> RETURN SEMICOLON .)
    MINUS           reduce using rule 75 (return-statement -> RETURN SEMICOLON .)
    BOOLEAN         reduce using rule 75 (return-statement -> RETURN SEMICOLON .)
    FLOATINGPOINT   reduce using rule 75 (return-statement -> RETURN SEMICOLON .)
    STRING          reduce using rule 75 (return-statement -> RETURN SEMICOLON .)
    LETTER          reduce using rule 75 (return-statement -> RETURN SEMICOLON .)
    ELSE            reduce using rule 75 (return-statement -> RETURN SEMICOLON .)


state 132

    (76) return-statement -> RETURN expression . SEMICOLON
    (77) expression -> expression . EQUALS expression
    (78) expression -> expression . LESS expression
    (79) expression -> expression . GREATER expression
    (80) expression -> expression . AND expression
    (81) expression -> expression . OR expression

    SEMICOLON       shift and go to state 142
    EQUALS          shift and go to state 143
    LESS            shift and go to state 144
    GREATER         shift and go to state 145
    AND             shift and go to state 146
    OR              shift and go to state 147


state 133

    (82) expression -> NOT . expression
    (77) expression -> . expression EQUALS expression
    (78) expression -> . expression LESS expression
    (79) expression -> . expression GREATER expression
    (80) expression -> . expression AND expression
    (81) expression -> . expression OR expression
    (82) expression -> . NOT expression
    (83) expression -> . assignment
    (84) expression -> . array_usage
    (14) assignment -> . IDENTIFIER ASSIGN assignment
    (15) assignment -> . IDENTIFIER ASSIGN function_call
    (16) assignment -> . IDENTIFIER ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . IDENTIFIER COMMA assignment
    (19) assignment -> . INTEGER COMMA assignment
    (20) assignment -> . IDENTIFIER PLUS assignment
    (21) assignment -> . IDENTIFIER MINUS assignment
    (22) assignment -> . IDENTIFIER TIMES assignment
    (23) assignment -> . IDENTIFIER DIVIDE assignment
    (24) assignment -> . IDENTIFIER MODULUS assignment
    (25) assignment -> . INTEGER PLUS assignment
    (26) assignment -> . INTEGER MINUS assignment
    (27) assignment -> . INTEGER TIMES assignment
    (28) assignment -> . INTEGER DIVIDE assignment
    (29) assignment -> . INTEGER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . INTEGER PLUS PLUS
    (34) assignment -> . IDENTIFIER PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . INTEGER MINUS MINUS
    (37) assignment -> . IDENTIFIER MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . BOOLEAN
    (40) assignment -> . FLOATINGPOINT
    (41) assignment -> . INTEGER
    (42) assignment -> . STRING
    (43) assignment -> . IDENTIFIER
    (44) assignment -> . LETTER
    (51) array_usage -> . IDENTIFIER LBRACKET assignment RBRACKET

    NOT             shift and go to state 133
    IDENTIFIER      shift and go to state 41
    INTEGER         shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    BOOLEAN         shift and go to state 24
    FLOATINGPOINT   shift and go to state 25
    STRING          shift and go to state 26
    LETTER          shift and go to state 27

    expression                     shift and go to state 148
    assignment                     shift and go to state 134
    array_usage                    shift and go to state 135

state 134

    (83) expression -> assignment .

    SEMICOLON       reduce using rule 83 (expression -> assignment .)
    EQUALS          reduce using rule 83 (expression -> assignment .)
    LESS            reduce using rule 83 (expression -> assignment .)
    GREATER         reduce using rule 83 (expression -> assignment .)
    AND             reduce using rule 83 (expression -> assignment .)
    OR              reduce using rule 83 (expression -> assignment .)
    RPAREN          reduce using rule 83 (expression -> assignment .)


state 135

    (84) expression -> array_usage .
    (17) assignment -> array_usage . ASSIGN assignment
    (35) assignment -> array_usage . PLUS PLUS
    (38) assignment -> array_usage . MINUS MINUS

    SEMICOLON       reduce using rule 84 (expression -> array_usage .)
    EQUALS          reduce using rule 84 (expression -> array_usage .)
    LESS            reduce using rule 84 (expression -> array_usage .)
    GREATER         reduce using rule 84 (expression -> array_usage .)
    AND             reduce using rule 84 (expression -> array_usage .)
    OR              reduce using rule 84 (expression -> array_usage .)
    RPAREN          reduce using rule 84 (expression -> array_usage .)
    ASSIGN          shift and go to state 45
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47


state 136

    (65) iteration_statement -> WHILE LPAREN expression . RPAREN compound_statement
    (66) iteration_statement -> WHILE LPAREN expression . RPAREN statement
    (77) expression -> expression . EQUALS expression
    (78) expression -> expression . LESS expression
    (79) expression -> expression . GREATER expression
    (80) expression -> expression . AND expression
    (81) expression -> expression . OR expression

    RPAREN          shift and go to state 149
    EQUALS          shift and go to state 143
    LESS            shift and go to state 144
    GREATER         shift and go to state 145
    AND             shift and go to state 146
    OR              shift and go to state 147


state 137

    (67) iteration_statement -> DO compound_statement WHILE . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 150


state 138

    (68) iteration_statement -> DO statement WHILE . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 151


state 139

    (9) declaration -> type assignment SEMICOLON .

    RBRACE          reduce using rule 9 (declaration -> type assignment SEMICOLON .)
    WHILE           reduce using rule 9 (declaration -> type assignment SEMICOLON .)
    DO              reduce using rule 9 (declaration -> type assignment SEMICOLON .)
    IF              reduce using rule 9 (declaration -> type assignment SEMICOLON .)
    RETURN          reduce using rule 9 (declaration -> type assignment SEMICOLON .)
    INT             reduce using rule 9 (declaration -> type assignment SEMICOLON .)
    FLOAT           reduce using rule 9 (declaration -> type assignment SEMICOLON .)
    CHAR            reduce using rule 9 (declaration -> type assignment SEMICOLON .)
    VOID            reduce using rule 9 (declaration -> type assignment SEMICOLON .)
    IDENTIFIER      reduce using rule 9 (declaration -> type assignment SEMICOLON .)
    INTEGER         reduce using rule 9 (declaration -> type assignment SEMICOLON .)
    APOST           reduce using rule 9 (declaration -> type assignment SEMICOLON .)
    LPAREN          reduce using rule 9 (declaration -> type assignment SEMICOLON .)
    MINUS           reduce using rule 9 (declaration -> type assignment SEMICOLON .)
    BOOLEAN         reduce using rule 9 (declaration -> type assignment SEMICOLON .)
    FLOATINGPOINT   reduce using rule 9 (declaration -> type assignment SEMICOLON .)
    STRING          reduce using rule 9 (declaration -> type assignment SEMICOLON .)
    LETTER          reduce using rule 9 (declaration -> type assignment SEMICOLON .)
    ELSE            reduce using rule 9 (declaration -> type assignment SEMICOLON .)


state 140

    (13) declaration -> type array_usage SEMICOLON .

    RBRACE          reduce using rule 13 (declaration -> type array_usage SEMICOLON .)
    WHILE           reduce using rule 13 (declaration -> type array_usage SEMICOLON .)
    DO              reduce using rule 13 (declaration -> type array_usage SEMICOLON .)
    IF              reduce using rule 13 (declaration -> type array_usage SEMICOLON .)
    RETURN          reduce using rule 13 (declaration -> type array_usage SEMICOLON .)
    INT             reduce using rule 13 (declaration -> type array_usage SEMICOLON .)
    FLOAT           reduce using rule 13 (declaration -> type array_usage SEMICOLON .)
    CHAR            reduce using rule 13 (declaration -> type array_usage SEMICOLON .)
    VOID            reduce using rule 13 (declaration -> type array_usage SEMICOLON .)
    IDENTIFIER      reduce using rule 13 (declaration -> type array_usage SEMICOLON .)
    INTEGER         reduce using rule 13 (declaration -> type array_usage SEMICOLON .)
    APOST           reduce using rule 13 (declaration -> type array_usage SEMICOLON .)
    LPAREN          reduce using rule 13 (declaration -> type array_usage SEMICOLON .)
    MINUS           reduce using rule 13 (declaration -> type array_usage SEMICOLON .)
    BOOLEAN         reduce using rule 13 (declaration -> type array_usage SEMICOLON .)
    FLOATINGPOINT   reduce using rule 13 (declaration -> type array_usage SEMICOLON .)
    STRING          reduce using rule 13 (declaration -> type array_usage SEMICOLON .)
    LETTER          reduce using rule 13 (declaration -> type array_usage SEMICOLON .)
    ELSE            reduce using rule 13 (declaration -> type array_usage SEMICOLON .)


state 141

    (69) selection_statement -> IF LPAREN expression . RPAREN compound_statement
    (70) selection_statement -> IF LPAREN expression . RPAREN statement
    (71) selection_statement -> IF LPAREN expression . RPAREN compound_statement ELSE compound_statement
    (72) selection_statement -> IF LPAREN expression . RPAREN compound_statement ELSE statement
    (73) selection_statement -> IF LPAREN expression . RPAREN statement ELSE compound_statement
    (74) selection_statement -> IF LPAREN expression . RPAREN statement ELSE statement
    (77) expression -> expression . EQUALS expression
    (78) expression -> expression . LESS expression
    (79) expression -> expression . GREATER expression
    (80) expression -> expression . AND expression
    (81) expression -> expression . OR expression

    RPAREN          shift and go to state 152
    EQUALS          shift and go to state 143
    LESS            shift and go to state 144
    GREATER         shift and go to state 145
    AND             shift and go to state 146
    OR              shift and go to state 147


state 142

    (76) return-statement -> RETURN expression SEMICOLON .

    RBRACE          reduce using rule 76 (return-statement -> RETURN expression SEMICOLON .)
    WHILE           reduce using rule 76 (return-statement -> RETURN expression SEMICOLON .)
    DO              reduce using rule 76 (return-statement -> RETURN expression SEMICOLON .)
    IF              reduce using rule 76 (return-statement -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 76 (return-statement -> RETURN expression SEMICOLON .)
    INT             reduce using rule 76 (return-statement -> RETURN expression SEMICOLON .)
    FLOAT           reduce using rule 76 (return-statement -> RETURN expression SEMICOLON .)
    CHAR            reduce using rule 76 (return-statement -> RETURN expression SEMICOLON .)
    VOID            reduce using rule 76 (return-statement -> RETURN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 76 (return-statement -> RETURN expression SEMICOLON .)
    INTEGER         reduce using rule 76 (return-statement -> RETURN expression SEMICOLON .)
    APOST           reduce using rule 76 (return-statement -> RETURN expression SEMICOLON .)
    LPAREN          reduce using rule 76 (return-statement -> RETURN expression SEMICOLON .)
    MINUS           reduce using rule 76 (return-statement -> RETURN expression SEMICOLON .)
    BOOLEAN         reduce using rule 76 (return-statement -> RETURN expression SEMICOLON .)
    FLOATINGPOINT   reduce using rule 76 (return-statement -> RETURN expression SEMICOLON .)
    STRING          reduce using rule 76 (return-statement -> RETURN expression SEMICOLON .)
    LETTER          reduce using rule 76 (return-statement -> RETURN expression SEMICOLON .)
    ELSE            reduce using rule 76 (return-statement -> RETURN expression SEMICOLON .)


state 143

    (77) expression -> expression EQUALS . expression
    (77) expression -> . expression EQUALS expression
    (78) expression -> . expression LESS expression
    (79) expression -> . expression GREATER expression
    (80) expression -> . expression AND expression
    (81) expression -> . expression OR expression
    (82) expression -> . NOT expression
    (83) expression -> . assignment
    (84) expression -> . array_usage
    (14) assignment -> . IDENTIFIER ASSIGN assignment
    (15) assignment -> . IDENTIFIER ASSIGN function_call
    (16) assignment -> . IDENTIFIER ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . IDENTIFIER COMMA assignment
    (19) assignment -> . INTEGER COMMA assignment
    (20) assignment -> . IDENTIFIER PLUS assignment
    (21) assignment -> . IDENTIFIER MINUS assignment
    (22) assignment -> . IDENTIFIER TIMES assignment
    (23) assignment -> . IDENTIFIER DIVIDE assignment
    (24) assignment -> . IDENTIFIER MODULUS assignment
    (25) assignment -> . INTEGER PLUS assignment
    (26) assignment -> . INTEGER MINUS assignment
    (27) assignment -> . INTEGER TIMES assignment
    (28) assignment -> . INTEGER DIVIDE assignment
    (29) assignment -> . INTEGER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . INTEGER PLUS PLUS
    (34) assignment -> . IDENTIFIER PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . INTEGER MINUS MINUS
    (37) assignment -> . IDENTIFIER MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . BOOLEAN
    (40) assignment -> . FLOATINGPOINT
    (41) assignment -> . INTEGER
    (42) assignment -> . STRING
    (43) assignment -> . IDENTIFIER
    (44) assignment -> . LETTER
    (51) array_usage -> . IDENTIFIER LBRACKET assignment RBRACKET

    NOT             shift and go to state 133
    IDENTIFIER      shift and go to state 41
    INTEGER         shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    BOOLEAN         shift and go to state 24
    FLOATINGPOINT   shift and go to state 25
    STRING          shift and go to state 26
    LETTER          shift and go to state 27

    expression                     shift and go to state 153
    assignment                     shift and go to state 134
    array_usage                    shift and go to state 135

state 144

    (78) expression -> expression LESS . expression
    (77) expression -> . expression EQUALS expression
    (78) expression -> . expression LESS expression
    (79) expression -> . expression GREATER expression
    (80) expression -> . expression AND expression
    (81) expression -> . expression OR expression
    (82) expression -> . NOT expression
    (83) expression -> . assignment
    (84) expression -> . array_usage
    (14) assignment -> . IDENTIFIER ASSIGN assignment
    (15) assignment -> . IDENTIFIER ASSIGN function_call
    (16) assignment -> . IDENTIFIER ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . IDENTIFIER COMMA assignment
    (19) assignment -> . INTEGER COMMA assignment
    (20) assignment -> . IDENTIFIER PLUS assignment
    (21) assignment -> . IDENTIFIER MINUS assignment
    (22) assignment -> . IDENTIFIER TIMES assignment
    (23) assignment -> . IDENTIFIER DIVIDE assignment
    (24) assignment -> . IDENTIFIER MODULUS assignment
    (25) assignment -> . INTEGER PLUS assignment
    (26) assignment -> . INTEGER MINUS assignment
    (27) assignment -> . INTEGER TIMES assignment
    (28) assignment -> . INTEGER DIVIDE assignment
    (29) assignment -> . INTEGER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . INTEGER PLUS PLUS
    (34) assignment -> . IDENTIFIER PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . INTEGER MINUS MINUS
    (37) assignment -> . IDENTIFIER MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . BOOLEAN
    (40) assignment -> . FLOATINGPOINT
    (41) assignment -> . INTEGER
    (42) assignment -> . STRING
    (43) assignment -> . IDENTIFIER
    (44) assignment -> . LETTER
    (51) array_usage -> . IDENTIFIER LBRACKET assignment RBRACKET

    NOT             shift and go to state 133
    IDENTIFIER      shift and go to state 41
    INTEGER         shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    BOOLEAN         shift and go to state 24
    FLOATINGPOINT   shift and go to state 25
    STRING          shift and go to state 26
    LETTER          shift and go to state 27

    expression                     shift and go to state 154
    assignment                     shift and go to state 134
    array_usage                    shift and go to state 135

state 145

    (79) expression -> expression GREATER . expression
    (77) expression -> . expression EQUALS expression
    (78) expression -> . expression LESS expression
    (79) expression -> . expression GREATER expression
    (80) expression -> . expression AND expression
    (81) expression -> . expression OR expression
    (82) expression -> . NOT expression
    (83) expression -> . assignment
    (84) expression -> . array_usage
    (14) assignment -> . IDENTIFIER ASSIGN assignment
    (15) assignment -> . IDENTIFIER ASSIGN function_call
    (16) assignment -> . IDENTIFIER ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . IDENTIFIER COMMA assignment
    (19) assignment -> . INTEGER COMMA assignment
    (20) assignment -> . IDENTIFIER PLUS assignment
    (21) assignment -> . IDENTIFIER MINUS assignment
    (22) assignment -> . IDENTIFIER TIMES assignment
    (23) assignment -> . IDENTIFIER DIVIDE assignment
    (24) assignment -> . IDENTIFIER MODULUS assignment
    (25) assignment -> . INTEGER PLUS assignment
    (26) assignment -> . INTEGER MINUS assignment
    (27) assignment -> . INTEGER TIMES assignment
    (28) assignment -> . INTEGER DIVIDE assignment
    (29) assignment -> . INTEGER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . INTEGER PLUS PLUS
    (34) assignment -> . IDENTIFIER PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . INTEGER MINUS MINUS
    (37) assignment -> . IDENTIFIER MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . BOOLEAN
    (40) assignment -> . FLOATINGPOINT
    (41) assignment -> . INTEGER
    (42) assignment -> . STRING
    (43) assignment -> . IDENTIFIER
    (44) assignment -> . LETTER
    (51) array_usage -> . IDENTIFIER LBRACKET assignment RBRACKET

    NOT             shift and go to state 133
    IDENTIFIER      shift and go to state 41
    INTEGER         shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    BOOLEAN         shift and go to state 24
    FLOATINGPOINT   shift and go to state 25
    STRING          shift and go to state 26
    LETTER          shift and go to state 27

    expression                     shift and go to state 155
    assignment                     shift and go to state 134
    array_usage                    shift and go to state 135

state 146

    (80) expression -> expression AND . expression
    (77) expression -> . expression EQUALS expression
    (78) expression -> . expression LESS expression
    (79) expression -> . expression GREATER expression
    (80) expression -> . expression AND expression
    (81) expression -> . expression OR expression
    (82) expression -> . NOT expression
    (83) expression -> . assignment
    (84) expression -> . array_usage
    (14) assignment -> . IDENTIFIER ASSIGN assignment
    (15) assignment -> . IDENTIFIER ASSIGN function_call
    (16) assignment -> . IDENTIFIER ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . IDENTIFIER COMMA assignment
    (19) assignment -> . INTEGER COMMA assignment
    (20) assignment -> . IDENTIFIER PLUS assignment
    (21) assignment -> . IDENTIFIER MINUS assignment
    (22) assignment -> . IDENTIFIER TIMES assignment
    (23) assignment -> . IDENTIFIER DIVIDE assignment
    (24) assignment -> . IDENTIFIER MODULUS assignment
    (25) assignment -> . INTEGER PLUS assignment
    (26) assignment -> . INTEGER MINUS assignment
    (27) assignment -> . INTEGER TIMES assignment
    (28) assignment -> . INTEGER DIVIDE assignment
    (29) assignment -> . INTEGER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . INTEGER PLUS PLUS
    (34) assignment -> . IDENTIFIER PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . INTEGER MINUS MINUS
    (37) assignment -> . IDENTIFIER MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . BOOLEAN
    (40) assignment -> . FLOATINGPOINT
    (41) assignment -> . INTEGER
    (42) assignment -> . STRING
    (43) assignment -> . IDENTIFIER
    (44) assignment -> . LETTER
    (51) array_usage -> . IDENTIFIER LBRACKET assignment RBRACKET

    NOT             shift and go to state 133
    IDENTIFIER      shift and go to state 41
    INTEGER         shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    BOOLEAN         shift and go to state 24
    FLOATINGPOINT   shift and go to state 25
    STRING          shift and go to state 26
    LETTER          shift and go to state 27

    expression                     shift and go to state 156
    assignment                     shift and go to state 134
    array_usage                    shift and go to state 135

state 147

    (81) expression -> expression OR . expression
    (77) expression -> . expression EQUALS expression
    (78) expression -> . expression LESS expression
    (79) expression -> . expression GREATER expression
    (80) expression -> . expression AND expression
    (81) expression -> . expression OR expression
    (82) expression -> . NOT expression
    (83) expression -> . assignment
    (84) expression -> . array_usage
    (14) assignment -> . IDENTIFIER ASSIGN assignment
    (15) assignment -> . IDENTIFIER ASSIGN function_call
    (16) assignment -> . IDENTIFIER ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . IDENTIFIER COMMA assignment
    (19) assignment -> . INTEGER COMMA assignment
    (20) assignment -> . IDENTIFIER PLUS assignment
    (21) assignment -> . IDENTIFIER MINUS assignment
    (22) assignment -> . IDENTIFIER TIMES assignment
    (23) assignment -> . IDENTIFIER DIVIDE assignment
    (24) assignment -> . IDENTIFIER MODULUS assignment
    (25) assignment -> . INTEGER PLUS assignment
    (26) assignment -> . INTEGER MINUS assignment
    (27) assignment -> . INTEGER TIMES assignment
    (28) assignment -> . INTEGER DIVIDE assignment
    (29) assignment -> . INTEGER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . INTEGER PLUS PLUS
    (34) assignment -> . IDENTIFIER PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . INTEGER MINUS MINUS
    (37) assignment -> . IDENTIFIER MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . BOOLEAN
    (40) assignment -> . FLOATINGPOINT
    (41) assignment -> . INTEGER
    (42) assignment -> . STRING
    (43) assignment -> . IDENTIFIER
    (44) assignment -> . LETTER
    (51) array_usage -> . IDENTIFIER LBRACKET assignment RBRACKET

    NOT             shift and go to state 133
    IDENTIFIER      shift and go to state 41
    INTEGER         shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    BOOLEAN         shift and go to state 24
    FLOATINGPOINT   shift and go to state 25
    STRING          shift and go to state 26
    LETTER          shift and go to state 27

    expression                     shift and go to state 157
    assignment                     shift and go to state 134
    array_usage                    shift and go to state 135

state 148

    (82) expression -> NOT expression .
    (77) expression -> expression . EQUALS expression
    (78) expression -> expression . LESS expression
    (79) expression -> expression . GREATER expression
    (80) expression -> expression . AND expression
    (81) expression -> expression . OR expression

  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 82 (expression -> NOT expression .)
    RPAREN          reduce using rule 82 (expression -> NOT expression .)
    EQUALS          shift and go to state 143
    LESS            shift and go to state 144
    GREATER         shift and go to state 145
    AND             shift and go to state 146
    OR              shift and go to state 147

  ! EQUALS          [ reduce using rule 82 (expression -> NOT expression .) ]
  ! LESS            [ reduce using rule 82 (expression -> NOT expression .) ]
  ! GREATER         [ reduce using rule 82 (expression -> NOT expression .) ]
  ! AND             [ reduce using rule 82 (expression -> NOT expression .) ]
  ! OR              [ reduce using rule 82 (expression -> NOT expression .) ]


state 149

    (65) iteration_statement -> WHILE LPAREN expression RPAREN . compound_statement
    (66) iteration_statement -> WHILE LPAREN expression RPAREN . statement
    (58) compound_statement -> . LBRACE statement_list RBRACE
    (61) statement -> . iteration_statement
    (62) statement -> . declaration
    (63) statement -> . selection_statement
    (64) statement -> . return-statement
    (65) iteration_statement -> . WHILE LPAREN expression RPAREN compound_statement
    (66) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (67) iteration_statement -> . DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON
    (68) iteration_statement -> . DO statement WHILE LPAREN expression RPAREN SEMICOLON
    (9) declaration -> . type assignment SEMICOLON
    (10) declaration -> . assignment SEMICOLON
    (11) declaration -> . function_call SEMICOLON
    (12) declaration -> . array_usage SEMICOLON
    (13) declaration -> . type array_usage SEMICOLON
    (69) selection_statement -> . IF LPAREN expression RPAREN compound_statement
    (70) selection_statement -> . IF LPAREN expression RPAREN statement
    (71) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE compound_statement
    (72) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE statement
    (73) selection_statement -> . IF LPAREN expression RPAREN statement ELSE compound_statement
    (74) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (75) return-statement -> . RETURN SEMICOLON
    (76) return-statement -> . RETURN expression SEMICOLON
    (47) type -> . INT
    (48) type -> . FLOAT
    (49) type -> . CHAR
    (50) type -> . VOID
    (14) assignment -> . IDENTIFIER ASSIGN assignment
    (15) assignment -> . IDENTIFIER ASSIGN function_call
    (16) assignment -> . IDENTIFIER ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . IDENTIFIER COMMA assignment
    (19) assignment -> . INTEGER COMMA assignment
    (20) assignment -> . IDENTIFIER PLUS assignment
    (21) assignment -> . IDENTIFIER MINUS assignment
    (22) assignment -> . IDENTIFIER TIMES assignment
    (23) assignment -> . IDENTIFIER DIVIDE assignment
    (24) assignment -> . IDENTIFIER MODULUS assignment
    (25) assignment -> . INTEGER PLUS assignment
    (26) assignment -> . INTEGER MINUS assignment
    (27) assignment -> . INTEGER TIMES assignment
    (28) assignment -> . INTEGER DIVIDE assignment
    (29) assignment -> . INTEGER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . INTEGER PLUS PLUS
    (34) assignment -> . IDENTIFIER PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . INTEGER MINUS MINUS
    (37) assignment -> . IDENTIFIER MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . BOOLEAN
    (40) assignment -> . FLOATINGPOINT
    (41) assignment -> . INTEGER
    (42) assignment -> . STRING
    (43) assignment -> . IDENTIFIER
    (44) assignment -> . LETTER
    (45) function_call -> . IDENTIFIER LPAREN RPAREN
    (46) function_call -> . IDENTIFIER LPAREN assignment RPAREN
    (51) array_usage -> . IDENTIFIER LBRACKET assignment RBRACKET

    LBRACE          shift and go to state 101
    WHILE           shift and go to state 114
    DO              shift and go to state 115
    IF              shift and go to state 120
    RETURN          shift and go to state 121
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    VOID            shift and go to state 13
    IDENTIFIER      shift and go to state 65
    INTEGER         shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    BOOLEAN         shift and go to state 24
    FLOATINGPOINT   shift and go to state 25
    STRING          shift and go to state 26
    LETTER          shift and go to state 27

    compound_statement             shift and go to state 158
    statement                      shift and go to state 159
    iteration_statement            shift and go to state 110
    declaration                    shift and go to state 111
    selection_statement            shift and go to state 112
    return-statement               shift and go to state 113
    type                           shift and go to state 116
    assignment                     shift and go to state 117
    function_call                  shift and go to state 118
    array_usage                    shift and go to state 119

state 150

    (67) iteration_statement -> DO compound_statement WHILE LPAREN . expression RPAREN SEMICOLON
    (77) expression -> . expression EQUALS expression
    (78) expression -> . expression LESS expression
    (79) expression -> . expression GREATER expression
    (80) expression -> . expression AND expression
    (81) expression -> . expression OR expression
    (82) expression -> . NOT expression
    (83) expression -> . assignment
    (84) expression -> . array_usage
    (14) assignment -> . IDENTIFIER ASSIGN assignment
    (15) assignment -> . IDENTIFIER ASSIGN function_call
    (16) assignment -> . IDENTIFIER ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . IDENTIFIER COMMA assignment
    (19) assignment -> . INTEGER COMMA assignment
    (20) assignment -> . IDENTIFIER PLUS assignment
    (21) assignment -> . IDENTIFIER MINUS assignment
    (22) assignment -> . IDENTIFIER TIMES assignment
    (23) assignment -> . IDENTIFIER DIVIDE assignment
    (24) assignment -> . IDENTIFIER MODULUS assignment
    (25) assignment -> . INTEGER PLUS assignment
    (26) assignment -> . INTEGER MINUS assignment
    (27) assignment -> . INTEGER TIMES assignment
    (28) assignment -> . INTEGER DIVIDE assignment
    (29) assignment -> . INTEGER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . INTEGER PLUS PLUS
    (34) assignment -> . IDENTIFIER PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . INTEGER MINUS MINUS
    (37) assignment -> . IDENTIFIER MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . BOOLEAN
    (40) assignment -> . FLOATINGPOINT
    (41) assignment -> . INTEGER
    (42) assignment -> . STRING
    (43) assignment -> . IDENTIFIER
    (44) assignment -> . LETTER
    (51) array_usage -> . IDENTIFIER LBRACKET assignment RBRACKET

    NOT             shift and go to state 133
    IDENTIFIER      shift and go to state 41
    INTEGER         shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    BOOLEAN         shift and go to state 24
    FLOATINGPOINT   shift and go to state 25
    STRING          shift and go to state 26
    LETTER          shift and go to state 27

    expression                     shift and go to state 160
    assignment                     shift and go to state 134
    array_usage                    shift and go to state 135

state 151

    (68) iteration_statement -> DO statement WHILE LPAREN . expression RPAREN SEMICOLON
    (77) expression -> . expression EQUALS expression
    (78) expression -> . expression LESS expression
    (79) expression -> . expression GREATER expression
    (80) expression -> . expression AND expression
    (81) expression -> . expression OR expression
    (82) expression -> . NOT expression
    (83) expression -> . assignment
    (84) expression -> . array_usage
    (14) assignment -> . IDENTIFIER ASSIGN assignment
    (15) assignment -> . IDENTIFIER ASSIGN function_call
    (16) assignment -> . IDENTIFIER ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . IDENTIFIER COMMA assignment
    (19) assignment -> . INTEGER COMMA assignment
    (20) assignment -> . IDENTIFIER PLUS assignment
    (21) assignment -> . IDENTIFIER MINUS assignment
    (22) assignment -> . IDENTIFIER TIMES assignment
    (23) assignment -> . IDENTIFIER DIVIDE assignment
    (24) assignment -> . IDENTIFIER MODULUS assignment
    (25) assignment -> . INTEGER PLUS assignment
    (26) assignment -> . INTEGER MINUS assignment
    (27) assignment -> . INTEGER TIMES assignment
    (28) assignment -> . INTEGER DIVIDE assignment
    (29) assignment -> . INTEGER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . INTEGER PLUS PLUS
    (34) assignment -> . IDENTIFIER PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . INTEGER MINUS MINUS
    (37) assignment -> . IDENTIFIER MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . BOOLEAN
    (40) assignment -> . FLOATINGPOINT
    (41) assignment -> . INTEGER
    (42) assignment -> . STRING
    (43) assignment -> . IDENTIFIER
    (44) assignment -> . LETTER
    (51) array_usage -> . IDENTIFIER LBRACKET assignment RBRACKET

    NOT             shift and go to state 133
    IDENTIFIER      shift and go to state 41
    INTEGER         shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    BOOLEAN         shift and go to state 24
    FLOATINGPOINT   shift and go to state 25
    STRING          shift and go to state 26
    LETTER          shift and go to state 27

    expression                     shift and go to state 161
    assignment                     shift and go to state 134
    array_usage                    shift and go to state 135

state 152

    (69) selection_statement -> IF LPAREN expression RPAREN . compound_statement
    (70) selection_statement -> IF LPAREN expression RPAREN . statement
    (71) selection_statement -> IF LPAREN expression RPAREN . compound_statement ELSE compound_statement
    (72) selection_statement -> IF LPAREN expression RPAREN . compound_statement ELSE statement
    (73) selection_statement -> IF LPAREN expression RPAREN . statement ELSE compound_statement
    (74) selection_statement -> IF LPAREN expression RPAREN . statement ELSE statement
    (58) compound_statement -> . LBRACE statement_list RBRACE
    (61) statement -> . iteration_statement
    (62) statement -> . declaration
    (63) statement -> . selection_statement
    (64) statement -> . return-statement
    (65) iteration_statement -> . WHILE LPAREN expression RPAREN compound_statement
    (66) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (67) iteration_statement -> . DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON
    (68) iteration_statement -> . DO statement WHILE LPAREN expression RPAREN SEMICOLON
    (9) declaration -> . type assignment SEMICOLON
    (10) declaration -> . assignment SEMICOLON
    (11) declaration -> . function_call SEMICOLON
    (12) declaration -> . array_usage SEMICOLON
    (13) declaration -> . type array_usage SEMICOLON
    (69) selection_statement -> . IF LPAREN expression RPAREN compound_statement
    (70) selection_statement -> . IF LPAREN expression RPAREN statement
    (71) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE compound_statement
    (72) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE statement
    (73) selection_statement -> . IF LPAREN expression RPAREN statement ELSE compound_statement
    (74) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (75) return-statement -> . RETURN SEMICOLON
    (76) return-statement -> . RETURN expression SEMICOLON
    (47) type -> . INT
    (48) type -> . FLOAT
    (49) type -> . CHAR
    (50) type -> . VOID
    (14) assignment -> . IDENTIFIER ASSIGN assignment
    (15) assignment -> . IDENTIFIER ASSIGN function_call
    (16) assignment -> . IDENTIFIER ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . IDENTIFIER COMMA assignment
    (19) assignment -> . INTEGER COMMA assignment
    (20) assignment -> . IDENTIFIER PLUS assignment
    (21) assignment -> . IDENTIFIER MINUS assignment
    (22) assignment -> . IDENTIFIER TIMES assignment
    (23) assignment -> . IDENTIFIER DIVIDE assignment
    (24) assignment -> . IDENTIFIER MODULUS assignment
    (25) assignment -> . INTEGER PLUS assignment
    (26) assignment -> . INTEGER MINUS assignment
    (27) assignment -> . INTEGER TIMES assignment
    (28) assignment -> . INTEGER DIVIDE assignment
    (29) assignment -> . INTEGER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . INTEGER PLUS PLUS
    (34) assignment -> . IDENTIFIER PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . INTEGER MINUS MINUS
    (37) assignment -> . IDENTIFIER MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . BOOLEAN
    (40) assignment -> . FLOATINGPOINT
    (41) assignment -> . INTEGER
    (42) assignment -> . STRING
    (43) assignment -> . IDENTIFIER
    (44) assignment -> . LETTER
    (45) function_call -> . IDENTIFIER LPAREN RPAREN
    (46) function_call -> . IDENTIFIER LPAREN assignment RPAREN
    (51) array_usage -> . IDENTIFIER LBRACKET assignment RBRACKET

    LBRACE          shift and go to state 101
    WHILE           shift and go to state 114
    DO              shift and go to state 115
    IF              shift and go to state 120
    RETURN          shift and go to state 121
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    VOID            shift and go to state 13
    IDENTIFIER      shift and go to state 65
    INTEGER         shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    BOOLEAN         shift and go to state 24
    FLOATINGPOINT   shift and go to state 25
    STRING          shift and go to state 26
    LETTER          shift and go to state 27

    compound_statement             shift and go to state 162
    statement                      shift and go to state 163
    iteration_statement            shift and go to state 110
    declaration                    shift and go to state 111
    selection_statement            shift and go to state 112
    return-statement               shift and go to state 113
    type                           shift and go to state 116
    assignment                     shift and go to state 117
    function_call                  shift and go to state 118
    array_usage                    shift and go to state 119

state 153

    (77) expression -> expression EQUALS expression .
    (77) expression -> expression . EQUALS expression
    (78) expression -> expression . LESS expression
    (79) expression -> expression . GREATER expression
    (80) expression -> expression . AND expression
    (81) expression -> expression . OR expression

    SEMICOLON       reduce using rule 77 (expression -> expression EQUALS expression .)
    EQUALS          reduce using rule 77 (expression -> expression EQUALS expression .)
    LESS            reduce using rule 77 (expression -> expression EQUALS expression .)
    GREATER         reduce using rule 77 (expression -> expression EQUALS expression .)
    AND             reduce using rule 77 (expression -> expression EQUALS expression .)
    OR              reduce using rule 77 (expression -> expression EQUALS expression .)
    RPAREN          reduce using rule 77 (expression -> expression EQUALS expression .)

  ! EQUALS          [ shift and go to state 143 ]
  ! LESS            [ shift and go to state 144 ]
  ! GREATER         [ shift and go to state 145 ]
  ! AND             [ shift and go to state 146 ]
  ! OR              [ shift and go to state 147 ]


state 154

    (78) expression -> expression LESS expression .
    (77) expression -> expression . EQUALS expression
    (78) expression -> expression . LESS expression
    (79) expression -> expression . GREATER expression
    (80) expression -> expression . AND expression
    (81) expression -> expression . OR expression

    SEMICOLON       reduce using rule 78 (expression -> expression LESS expression .)
    EQUALS          reduce using rule 78 (expression -> expression LESS expression .)
    LESS            reduce using rule 78 (expression -> expression LESS expression .)
    GREATER         reduce using rule 78 (expression -> expression LESS expression .)
    AND             reduce using rule 78 (expression -> expression LESS expression .)
    OR              reduce using rule 78 (expression -> expression LESS expression .)
    RPAREN          reduce using rule 78 (expression -> expression LESS expression .)

  ! EQUALS          [ shift and go to state 143 ]
  ! LESS            [ shift and go to state 144 ]
  ! GREATER         [ shift and go to state 145 ]
  ! AND             [ shift and go to state 146 ]
  ! OR              [ shift and go to state 147 ]


state 155

    (79) expression -> expression GREATER expression .
    (77) expression -> expression . EQUALS expression
    (78) expression -> expression . LESS expression
    (79) expression -> expression . GREATER expression
    (80) expression -> expression . AND expression
    (81) expression -> expression . OR expression

    SEMICOLON       reduce using rule 79 (expression -> expression GREATER expression .)
    EQUALS          reduce using rule 79 (expression -> expression GREATER expression .)
    LESS            reduce using rule 79 (expression -> expression GREATER expression .)
    GREATER         reduce using rule 79 (expression -> expression GREATER expression .)
    AND             reduce using rule 79 (expression -> expression GREATER expression .)
    OR              reduce using rule 79 (expression -> expression GREATER expression .)
    RPAREN          reduce using rule 79 (expression -> expression GREATER expression .)

  ! EQUALS          [ shift and go to state 143 ]
  ! LESS            [ shift and go to state 144 ]
  ! GREATER         [ shift and go to state 145 ]
  ! AND             [ shift and go to state 146 ]
  ! OR              [ shift and go to state 147 ]


state 156

    (80) expression -> expression AND expression .
    (77) expression -> expression . EQUALS expression
    (78) expression -> expression . LESS expression
    (79) expression -> expression . GREATER expression
    (80) expression -> expression . AND expression
    (81) expression -> expression . OR expression

    SEMICOLON       reduce using rule 80 (expression -> expression AND expression .)
    AND             reduce using rule 80 (expression -> expression AND expression .)
    OR              reduce using rule 80 (expression -> expression AND expression .)
    RPAREN          reduce using rule 80 (expression -> expression AND expression .)
    EQUALS          shift and go to state 143
    LESS            shift and go to state 144
    GREATER         shift and go to state 145

  ! EQUALS          [ reduce using rule 80 (expression -> expression AND expression .) ]
  ! LESS            [ reduce using rule 80 (expression -> expression AND expression .) ]
  ! GREATER         [ reduce using rule 80 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 146 ]
  ! OR              [ shift and go to state 147 ]


state 157

    (81) expression -> expression OR expression .
    (77) expression -> expression . EQUALS expression
    (78) expression -> expression . LESS expression
    (79) expression -> expression . GREATER expression
    (80) expression -> expression . AND expression
    (81) expression -> expression . OR expression

    SEMICOLON       reduce using rule 81 (expression -> expression OR expression .)
    AND             reduce using rule 81 (expression -> expression OR expression .)
    OR              reduce using rule 81 (expression -> expression OR expression .)
    RPAREN          reduce using rule 81 (expression -> expression OR expression .)
    EQUALS          shift and go to state 143
    LESS            shift and go to state 144
    GREATER         shift and go to state 145

  ! EQUALS          [ reduce using rule 81 (expression -> expression OR expression .) ]
  ! LESS            [ reduce using rule 81 (expression -> expression OR expression .) ]
  ! GREATER         [ reduce using rule 81 (expression -> expression OR expression .) ]
  ! AND             [ shift and go to state 146 ]
  ! OR              [ shift and go to state 147 ]


state 158

    (65) iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .

    RBRACE          reduce using rule 65 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    WHILE           reduce using rule 65 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    DO              reduce using rule 65 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    IF              reduce using rule 65 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    RETURN          reduce using rule 65 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    INT             reduce using rule 65 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    FLOAT           reduce using rule 65 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    CHAR            reduce using rule 65 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    VOID            reduce using rule 65 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    IDENTIFIER      reduce using rule 65 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    INTEGER         reduce using rule 65 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    APOST           reduce using rule 65 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    LPAREN          reduce using rule 65 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    MINUS           reduce using rule 65 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    BOOLEAN         reduce using rule 65 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    FLOATINGPOINT   reduce using rule 65 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    STRING          reduce using rule 65 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    LETTER          reduce using rule 65 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    ELSE            reduce using rule 65 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)


state 159

    (66) iteration_statement -> WHILE LPAREN expression RPAREN statement .

    RBRACE          reduce using rule 66 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 66 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    DO              reduce using rule 66 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    IF              reduce using rule 66 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 66 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    INT             reduce using rule 66 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    FLOAT           reduce using rule 66 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    CHAR            reduce using rule 66 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    VOID            reduce using rule 66 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    IDENTIFIER      reduce using rule 66 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    INTEGER         reduce using rule 66 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    APOST           reduce using rule 66 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 66 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    MINUS           reduce using rule 66 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    BOOLEAN         reduce using rule 66 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    FLOATINGPOINT   reduce using rule 66 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    STRING          reduce using rule 66 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    LETTER          reduce using rule 66 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    ELSE            reduce using rule 66 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)


state 160

    (67) iteration_statement -> DO compound_statement WHILE LPAREN expression . RPAREN SEMICOLON
    (77) expression -> expression . EQUALS expression
    (78) expression -> expression . LESS expression
    (79) expression -> expression . GREATER expression
    (80) expression -> expression . AND expression
    (81) expression -> expression . OR expression

    RPAREN          shift and go to state 164
    EQUALS          shift and go to state 143
    LESS            shift and go to state 144
    GREATER         shift and go to state 145
    AND             shift and go to state 146
    OR              shift and go to state 147


state 161

    (68) iteration_statement -> DO statement WHILE LPAREN expression . RPAREN SEMICOLON
    (77) expression -> expression . EQUALS expression
    (78) expression -> expression . LESS expression
    (79) expression -> expression . GREATER expression
    (80) expression -> expression . AND expression
    (81) expression -> expression . OR expression

    RPAREN          shift and go to state 165
    EQUALS          shift and go to state 143
    LESS            shift and go to state 144
    GREATER         shift and go to state 145
    AND             shift and go to state 146
    OR              shift and go to state 147


state 162

    (69) selection_statement -> IF LPAREN expression RPAREN compound_statement .
    (71) selection_statement -> IF LPAREN expression RPAREN compound_statement . ELSE compound_statement
    (72) selection_statement -> IF LPAREN expression RPAREN compound_statement . ELSE statement

  ! shift/reduce conflict for ELSE resolved as shift
    RBRACE          reduce using rule 69 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    WHILE           reduce using rule 69 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    DO              reduce using rule 69 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    IF              reduce using rule 69 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    RETURN          reduce using rule 69 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    INT             reduce using rule 69 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    FLOAT           reduce using rule 69 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    CHAR            reduce using rule 69 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    VOID            reduce using rule 69 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    IDENTIFIER      reduce using rule 69 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    INTEGER         reduce using rule 69 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    APOST           reduce using rule 69 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    LPAREN          reduce using rule 69 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    MINUS           reduce using rule 69 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    BOOLEAN         reduce using rule 69 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    FLOATINGPOINT   reduce using rule 69 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    STRING          reduce using rule 69 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    LETTER          reduce using rule 69 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    ELSE            shift and go to state 166

  ! ELSE            [ reduce using rule 69 (selection_statement -> IF LPAREN expression RPAREN compound_statement .) ]


state 163

    (70) selection_statement -> IF LPAREN expression RPAREN statement .
    (73) selection_statement -> IF LPAREN expression RPAREN statement . ELSE compound_statement
    (74) selection_statement -> IF LPAREN expression RPAREN statement . ELSE statement

  ! shift/reduce conflict for ELSE resolved as shift
    RBRACE          reduce using rule 70 (selection_statement -> IF LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 70 (selection_statement -> IF LPAREN expression RPAREN statement .)
    DO              reduce using rule 70 (selection_statement -> IF LPAREN expression RPAREN statement .)
    IF              reduce using rule 70 (selection_statement -> IF LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 70 (selection_statement -> IF LPAREN expression RPAREN statement .)
    INT             reduce using rule 70 (selection_statement -> IF LPAREN expression RPAREN statement .)
    FLOAT           reduce using rule 70 (selection_statement -> IF LPAREN expression RPAREN statement .)
    CHAR            reduce using rule 70 (selection_statement -> IF LPAREN expression RPAREN statement .)
    VOID            reduce using rule 70 (selection_statement -> IF LPAREN expression RPAREN statement .)
    IDENTIFIER      reduce using rule 70 (selection_statement -> IF LPAREN expression RPAREN statement .)
    INTEGER         reduce using rule 70 (selection_statement -> IF LPAREN expression RPAREN statement .)
    APOST           reduce using rule 70 (selection_statement -> IF LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 70 (selection_statement -> IF LPAREN expression RPAREN statement .)
    MINUS           reduce using rule 70 (selection_statement -> IF LPAREN expression RPAREN statement .)
    BOOLEAN         reduce using rule 70 (selection_statement -> IF LPAREN expression RPAREN statement .)
    FLOATINGPOINT   reduce using rule 70 (selection_statement -> IF LPAREN expression RPAREN statement .)
    STRING          reduce using rule 70 (selection_statement -> IF LPAREN expression RPAREN statement .)
    LETTER          reduce using rule 70 (selection_statement -> IF LPAREN expression RPAREN statement .)
    ELSE            shift and go to state 167

  ! ELSE            [ reduce using rule 70 (selection_statement -> IF LPAREN expression RPAREN statement .) ]


state 164

    (67) iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 168


state 165

    (68) iteration_statement -> DO statement WHILE LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 169


state 166

    (71) selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE . compound_statement
    (72) selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE . statement
    (58) compound_statement -> . LBRACE statement_list RBRACE
    (61) statement -> . iteration_statement
    (62) statement -> . declaration
    (63) statement -> . selection_statement
    (64) statement -> . return-statement
    (65) iteration_statement -> . WHILE LPAREN expression RPAREN compound_statement
    (66) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (67) iteration_statement -> . DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON
    (68) iteration_statement -> . DO statement WHILE LPAREN expression RPAREN SEMICOLON
    (9) declaration -> . type assignment SEMICOLON
    (10) declaration -> . assignment SEMICOLON
    (11) declaration -> . function_call SEMICOLON
    (12) declaration -> . array_usage SEMICOLON
    (13) declaration -> . type array_usage SEMICOLON
    (69) selection_statement -> . IF LPAREN expression RPAREN compound_statement
    (70) selection_statement -> . IF LPAREN expression RPAREN statement
    (71) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE compound_statement
    (72) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE statement
    (73) selection_statement -> . IF LPAREN expression RPAREN statement ELSE compound_statement
    (74) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (75) return-statement -> . RETURN SEMICOLON
    (76) return-statement -> . RETURN expression SEMICOLON
    (47) type -> . INT
    (48) type -> . FLOAT
    (49) type -> . CHAR
    (50) type -> . VOID
    (14) assignment -> . IDENTIFIER ASSIGN assignment
    (15) assignment -> . IDENTIFIER ASSIGN function_call
    (16) assignment -> . IDENTIFIER ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . IDENTIFIER COMMA assignment
    (19) assignment -> . INTEGER COMMA assignment
    (20) assignment -> . IDENTIFIER PLUS assignment
    (21) assignment -> . IDENTIFIER MINUS assignment
    (22) assignment -> . IDENTIFIER TIMES assignment
    (23) assignment -> . IDENTIFIER DIVIDE assignment
    (24) assignment -> . IDENTIFIER MODULUS assignment
    (25) assignment -> . INTEGER PLUS assignment
    (26) assignment -> . INTEGER MINUS assignment
    (27) assignment -> . INTEGER TIMES assignment
    (28) assignment -> . INTEGER DIVIDE assignment
    (29) assignment -> . INTEGER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . INTEGER PLUS PLUS
    (34) assignment -> . IDENTIFIER PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . INTEGER MINUS MINUS
    (37) assignment -> . IDENTIFIER MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . BOOLEAN
    (40) assignment -> . FLOATINGPOINT
    (41) assignment -> . INTEGER
    (42) assignment -> . STRING
    (43) assignment -> . IDENTIFIER
    (44) assignment -> . LETTER
    (45) function_call -> . IDENTIFIER LPAREN RPAREN
    (46) function_call -> . IDENTIFIER LPAREN assignment RPAREN
    (51) array_usage -> . IDENTIFIER LBRACKET assignment RBRACKET

    LBRACE          shift and go to state 101
    WHILE           shift and go to state 114
    DO              shift and go to state 115
    IF              shift and go to state 120
    RETURN          shift and go to state 121
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    VOID            shift and go to state 13
    IDENTIFIER      shift and go to state 65
    INTEGER         shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    BOOLEAN         shift and go to state 24
    FLOATINGPOINT   shift and go to state 25
    STRING          shift and go to state 26
    LETTER          shift and go to state 27

    compound_statement             shift and go to state 170
    statement                      shift and go to state 171
    iteration_statement            shift and go to state 110
    declaration                    shift and go to state 111
    selection_statement            shift and go to state 112
    return-statement               shift and go to state 113
    type                           shift and go to state 116
    assignment                     shift and go to state 117
    function_call                  shift and go to state 118
    array_usage                    shift and go to state 119

state 167

    (73) selection_statement -> IF LPAREN expression RPAREN statement ELSE . compound_statement
    (74) selection_statement -> IF LPAREN expression RPAREN statement ELSE . statement
    (58) compound_statement -> . LBRACE statement_list RBRACE
    (61) statement -> . iteration_statement
    (62) statement -> . declaration
    (63) statement -> . selection_statement
    (64) statement -> . return-statement
    (65) iteration_statement -> . WHILE LPAREN expression RPAREN compound_statement
    (66) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (67) iteration_statement -> . DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON
    (68) iteration_statement -> . DO statement WHILE LPAREN expression RPAREN SEMICOLON
    (9) declaration -> . type assignment SEMICOLON
    (10) declaration -> . assignment SEMICOLON
    (11) declaration -> . function_call SEMICOLON
    (12) declaration -> . array_usage SEMICOLON
    (13) declaration -> . type array_usage SEMICOLON
    (69) selection_statement -> . IF LPAREN expression RPAREN compound_statement
    (70) selection_statement -> . IF LPAREN expression RPAREN statement
    (71) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE compound_statement
    (72) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE statement
    (73) selection_statement -> . IF LPAREN expression RPAREN statement ELSE compound_statement
    (74) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (75) return-statement -> . RETURN SEMICOLON
    (76) return-statement -> . RETURN expression SEMICOLON
    (47) type -> . INT
    (48) type -> . FLOAT
    (49) type -> . CHAR
    (50) type -> . VOID
    (14) assignment -> . IDENTIFIER ASSIGN assignment
    (15) assignment -> . IDENTIFIER ASSIGN function_call
    (16) assignment -> . IDENTIFIER ASSIGN array_usage
    (17) assignment -> . array_usage ASSIGN assignment
    (18) assignment -> . IDENTIFIER COMMA assignment
    (19) assignment -> . INTEGER COMMA assignment
    (20) assignment -> . IDENTIFIER PLUS assignment
    (21) assignment -> . IDENTIFIER MINUS assignment
    (22) assignment -> . IDENTIFIER TIMES assignment
    (23) assignment -> . IDENTIFIER DIVIDE assignment
    (24) assignment -> . IDENTIFIER MODULUS assignment
    (25) assignment -> . INTEGER PLUS assignment
    (26) assignment -> . INTEGER MINUS assignment
    (27) assignment -> . INTEGER TIMES assignment
    (28) assignment -> . INTEGER DIVIDE assignment
    (29) assignment -> . INTEGER MODULUS assignment
    (30) assignment -> . APOST assignment APOST
    (31) assignment -> . LPAREN assignment RPAREN
    (32) assignment -> . MINUS assignment
    (33) assignment -> . INTEGER PLUS PLUS
    (34) assignment -> . IDENTIFIER PLUS PLUS
    (35) assignment -> . array_usage PLUS PLUS
    (36) assignment -> . INTEGER MINUS MINUS
    (37) assignment -> . IDENTIFIER MINUS MINUS
    (38) assignment -> . array_usage MINUS MINUS
    (39) assignment -> . BOOLEAN
    (40) assignment -> . FLOATINGPOINT
    (41) assignment -> . INTEGER
    (42) assignment -> . STRING
    (43) assignment -> . IDENTIFIER
    (44) assignment -> . LETTER
    (45) function_call -> . IDENTIFIER LPAREN RPAREN
    (46) function_call -> . IDENTIFIER LPAREN assignment RPAREN
    (51) array_usage -> . IDENTIFIER LBRACKET assignment RBRACKET

    LBRACE          shift and go to state 101
    WHILE           shift and go to state 114
    DO              shift and go to state 115
    IF              shift and go to state 120
    RETURN          shift and go to state 121
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    VOID            shift and go to state 13
    IDENTIFIER      shift and go to state 65
    INTEGER         shift and go to state 21
    APOST           shift and go to state 23
    LPAREN          shift and go to state 18
    MINUS           shift and go to state 22
    BOOLEAN         shift and go to state 24
    FLOATINGPOINT   shift and go to state 25
    STRING          shift and go to state 26
    LETTER          shift and go to state 27

    statement                      shift and go to state 172
    compound_statement             shift and go to state 173
    iteration_statement            shift and go to state 110
    declaration                    shift and go to state 111
    selection_statement            shift and go to state 112
    return-statement               shift and go to state 113
    type                           shift and go to state 116
    assignment                     shift and go to state 117
    function_call                  shift and go to state 118
    array_usage                    shift and go to state 119

state 168

    (67) iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .

    RBRACE          reduce using rule 67 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 67 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    DO              reduce using rule 67 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 67 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 67 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    INT             reduce using rule 67 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    FLOAT           reduce using rule 67 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    CHAR            reduce using rule 67 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    VOID            reduce using rule 67 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 67 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    INTEGER         reduce using rule 67 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    APOST           reduce using rule 67 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    LPAREN          reduce using rule 67 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    MINUS           reduce using rule 67 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 67 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    FLOATINGPOINT   reduce using rule 67 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    STRING          reduce using rule 67 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    LETTER          reduce using rule 67 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    ELSE            reduce using rule 67 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)


state 169

    (68) iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .

    RBRACE          reduce using rule 68 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 68 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    DO              reduce using rule 68 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 68 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 68 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    INT             reduce using rule 68 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    FLOAT           reduce using rule 68 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    CHAR            reduce using rule 68 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    VOID            reduce using rule 68 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 68 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    INTEGER         reduce using rule 68 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    APOST           reduce using rule 68 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    LPAREN          reduce using rule 68 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    MINUS           reduce using rule 68 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 68 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    FLOATINGPOINT   reduce using rule 68 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    STRING          reduce using rule 68 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    LETTER          reduce using rule 68 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    ELSE            reduce using rule 68 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)


state 170

    (71) selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .

    RBRACE          reduce using rule 71 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    WHILE           reduce using rule 71 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    DO              reduce using rule 71 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    IF              reduce using rule 71 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    RETURN          reduce using rule 71 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    INT             reduce using rule 71 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    FLOAT           reduce using rule 71 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    CHAR            reduce using rule 71 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    VOID            reduce using rule 71 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    IDENTIFIER      reduce using rule 71 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    INTEGER         reduce using rule 71 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    APOST           reduce using rule 71 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    LPAREN          reduce using rule 71 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    MINUS           reduce using rule 71 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    BOOLEAN         reduce using rule 71 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    FLOATINGPOINT   reduce using rule 71 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    STRING          reduce using rule 71 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    LETTER          reduce using rule 71 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    ELSE            reduce using rule 71 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)


state 171

    (72) selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .

    RBRACE          reduce using rule 72 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    WHILE           reduce using rule 72 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    DO              reduce using rule 72 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    IF              reduce using rule 72 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    RETURN          reduce using rule 72 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    INT             reduce using rule 72 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    FLOAT           reduce using rule 72 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    CHAR            reduce using rule 72 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    VOID            reduce using rule 72 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    IDENTIFIER      reduce using rule 72 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    INTEGER         reduce using rule 72 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    APOST           reduce using rule 72 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    LPAREN          reduce using rule 72 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    MINUS           reduce using rule 72 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    BOOLEAN         reduce using rule 72 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    FLOATINGPOINT   reduce using rule 72 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    STRING          reduce using rule 72 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    LETTER          reduce using rule 72 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    ELSE            reduce using rule 72 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)


state 172

    (74) selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .

    RBRACE          reduce using rule 74 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    WHILE           reduce using rule 74 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    DO              reduce using rule 74 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    IF              reduce using rule 74 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    RETURN          reduce using rule 74 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    INT             reduce using rule 74 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    FLOAT           reduce using rule 74 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    CHAR            reduce using rule 74 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    VOID            reduce using rule 74 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    IDENTIFIER      reduce using rule 74 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    INTEGER         reduce using rule 74 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    APOST           reduce using rule 74 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    LPAREN          reduce using rule 74 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    MINUS           reduce using rule 74 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    BOOLEAN         reduce using rule 74 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    FLOATINGPOINT   reduce using rule 74 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    STRING          reduce using rule 74 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    LETTER          reduce using rule 74 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    ELSE            reduce using rule 74 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)


state 173

    (73) selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .

    RBRACE          reduce using rule 73 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    WHILE           reduce using rule 73 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    DO              reduce using rule 73 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    IF              reduce using rule 73 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    RETURN          reduce using rule 73 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    INT             reduce using rule 73 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    FLOAT           reduce using rule 73 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    CHAR            reduce using rule 73 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    VOID            reduce using rule 73 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    IDENTIFIER      reduce using rule 73 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    INTEGER         reduce using rule 73 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    APOST           reduce using rule 73 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    LPAREN          reduce using rule 73 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    MINUS           reduce using rule 73 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    BOOLEAN         reduce using rule 73 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    FLOATINGPOINT   reduce using rule 73 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    STRING          reduce using rule 73 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    LETTER          reduce using rule 73 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    ELSE            reduce using rule 73 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for EQUALS in state 148 resolved as shift
WARNING: shift/reduce conflict for LESS in state 148 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 148 resolved as shift
WARNING: shift/reduce conflict for AND in state 148 resolved as shift
WARNING: shift/reduce conflict for OR in state 148 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 162 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 163 resolved as shift
