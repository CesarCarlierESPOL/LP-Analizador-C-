Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    APOST
    COMMENT
    COMMENTBLOCK
    EOF

Grammar

Rule 0     S' -> program
Rule 1     program -> function
Rule 2     program -> function program
Rule 3     program -> external-declaration program
Rule 4     program -> external-declaration
Rule 5     program -> expression
Rule 6     external-declaration -> type assignment SEMICOLON
Rule 7     external-declaration -> array_usage SEMICOLON
Rule 8     external-declaration -> type array_usage SEMICOLON
Rule 9     external-declaration -> macro_definition
Rule 10    external-declaration -> file_inclusion
Rule 11    external-declaration -> namespace_statement
Rule 12    external-declaration -> struct
Rule 13    declaration -> type IDENTIFIER SEMICOLON
Rule 14    declaration -> type IDENTIFIER identifiers SEMICOLON
Rule 15    declaration -> type assignment SEMICOLON
Rule 16    declaration -> assignment SEMICOLON
Rule 17    declaration -> function_call SEMICOLON
Rule 18    declaration -> array_usage SEMICOLON
Rule 19    declaration -> type array_usage SEMICOLON
Rule 20    declaration -> struct
Rule 21    assignment -> IDENTIFIER EQUALS expression
Rule 22    assignment -> IDENTIFIER PLUS EQUALS expression
Rule 23    assignment -> IDENTIFIER MINUS EQUALS expression
Rule 24    identifiers -> COMMA IDENTIFIER
Rule 25    identifiers -> COMMA assignment
Rule 26    identifiers -> COMMA IDENTIFIER identifiers
Rule 27    function_call -> IDENTIFIER LPAREN RPAREN
Rule 28    function_call -> IDENTIFIER LPAREN expression RPAREN
Rule 29    function_call -> IDENTIFIER LPAREN elements RPAREN
Rule 30    elements -> COMMA expression
Rule 31    elements -> COMMA expression elements
Rule 32    number -> INTEGER
Rule 33    number -> FLOATINGPOINT
Rule 34    array_usage -> IDENTIFIER LBRACKET expression RBRACKET
Rule 35    array_usage -> IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE
Rule 36    function -> type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement
Rule 37    argument_list_option -> argument_list
Rule 38    argument_list_option -> empty
Rule 39    argument_list -> argument_list COMMA argument
Rule 40    argument_list -> argument
Rule 41    argument -> type IDENTIFIER
Rule 42    compound_statement -> LBRACE statement_list RBRACE
Rule 43    statement_list -> statement_list statement
Rule 44    statement_list -> empty
Rule 45    statement -> iteration_statement
Rule 46    statement -> declaration
Rule 47    statement -> selection_statement
Rule 48    statement -> return_statement
Rule 49    statement -> cout_statement
Rule 50    statement -> cin_statement
Rule 51    struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE
Rule 52    struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE IDENTIFIER SEMICOLON
Rule 53    declaration_list -> declaration declaration_list
Rule 54    declaration_list -> empty
Rule 55    namespace_statement -> USING NAMESPACE IDENTIFIER SEMICOLON
Rule 56    cin_statement -> CIN GREATER GREATER IDENTIFIER SEMICOLON
Rule 57    cout_statement -> COUT LESS LESS expression SEMICOLON
Rule 58    cout_statement -> COUT LESS LESS expression LESS LESS expression SEMICOLON
Rule 59    comparators -> LESS
Rule 60    comparators -> GREATER
Rule 61    comparators -> GREATER EQUALS
Rule 62    comparators -> LESS EQUALS
Rule 63    iteration_statement -> WHILE LPAREN expression RPAREN compound_statement
Rule 64    iteration_statement -> WHILE LPAREN expression RPAREN statement
Rule 65    iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON
Rule 66    iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON
Rule 67    iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN compound_statement
Rule 68    iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN statement
Rule 69    iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN compound_statement
Rule 70    iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN statement
Rule 71    selection_statement -> IF LPAREN expression RPAREN compound_statement
Rule 72    selection_statement -> IF LPAREN expression RPAREN statement
Rule 73    selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement
Rule 74    selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement
Rule 75    selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement
Rule 76    selection_statement -> IF LPAREN expression RPAREN statement ELSE statement
Rule 77    return_statement -> RETURN SEMICOLON
Rule 78    return_statement -> RETURN expression SEMICOLON
Rule 79    conditional_expression -> expression ISEQUAL expression
Rule 80    conditional_expression -> expression NOT EQUALS expression
Rule 81    conditional_expression -> expression LESS expression
Rule 82    conditional_expression -> expression LESS EQUALS expression
Rule 83    conditional_expression -> expression GREATER expression
Rule 84    conditional_expression -> expression GREATER EQUALS expression
Rule 85    conditional_expression -> expression AND expression
Rule 86    conditional_expression -> expression OR expression
Rule 87    conditional_expression -> NOT expression
Rule 88    expression -> BOOLEAN
Rule 89    expression -> number
Rule 90    expression -> STRING
Rule 91    expression -> IDENTIFIER
Rule 92    expression -> LETTER
Rule 93    expression -> assignment
Rule 94    expression -> array_usage
Rule 95    expression -> function_call
Rule 96    expression -> math_expression
Rule 97    expression -> conditional_expression
Rule 98    type -> BOOL
Rule 99    type -> INT
Rule 100   type -> FLOAT
Rule 101   type -> CHAR
Rule 102   type -> VOID
Rule 103   math_expression -> expression PLUS expression
Rule 104   math_expression -> expression MINUS expression
Rule 105   math_expression -> expression TIMES expression
Rule 106   math_expression -> expression DIVIDE expression
Rule 107   math_expression -> expression MODULUS expression
Rule 108   math_expression -> expression PLUS PLUS
Rule 109   math_expression -> expression MINUS MINUS
Rule 110   math_expression -> PLUS PLUS expression
Rule 111   math_expression -> MINUS MINUS expression
Rule 112   macro_definition -> POUND DEFINE IDENTIFIER assignment
Rule 113   file_inclusion -> POUND INCLUDE LESS HEADER GREATER
Rule 114   file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE
Rule 115   file_inclusion -> POUND INCLUDE LESS IDENTIFIER GREATER
Rule 116   file_inclusion -> POUND INCLUDE QUOTE IDENTIFIER QUOTE
Rule 117   empty -> <empty>

Terminals, with rules where they appear

AND                  : 85
APOST                : 
BOOL                 : 98
BOOLEAN              : 88
CHAR                 : 101
CIN                  : 56
COMMA                : 24 25 26 30 31 39
COMMENT              : 
COMMENTBLOCK         : 
COUT                 : 57 58
DEFINE               : 112
DIVIDE               : 106
DO                   : 65 66
ELSE                 : 73 74 75 76
EOF                  : 
EQUALS               : 21 22 23 61 62 67 67 68 68 69 70 80 82 84
FLOAT                : 100
FLOATINGPOINT        : 33
FOR                  : 67 68 69 70
GREATER              : 56 56 60 61 83 84 113 115
HEADER               : 113 114
IDENTIFIER           : 13 14 21 22 23 24 26 27 28 29 34 35 36 41 51 52 52 55 56 67 67 68 68 69 69 70 70 91 112 115 116
IF                   : 71 72 73 74 75 76
INCLUDE              : 113 114 115 116
INT                  : 99
INTEGER              : 32
ISEQUAL              : 79
LBRACE               : 35 42 51 52
LBRACKET             : 34 35
LESS                 : 57 57 58 58 58 58 59 62 81 82 113 115
LETTER               : 92
LPAREN               : 27 28 29 36 63 64 65 66 67 68 69 70 71 72 73 74 75 76
MINUS                : 23 104 109 109 111 111
MODULUS              : 107
NAMESPACE            : 55
NOT                  : 80 87
OR                   : 86
PLUS                 : 22 67 68 103 108 108 110 110
POUND                : 112 113 114 115 116
QUOTE                : 114 114 116 116
RBRACE               : 35 42 51 52
RBRACKET             : 34 35
RETURN               : 77 78
RPAREN               : 27 28 29 36 63 64 65 66 67 68 69 70 71 72 73 74 75 76
SEMICOLON            : 6 7 8 13 14 15 16 17 18 19 52 55 56 57 58 65 66 67 67 68 68 69 69 70 70 77 78
STRING               : 90
STRUCT               : 51 52
TIMES                : 105
USING                : 55
VOID                 : 102
WHILE                : 63 64 65 66
error                : 

Nonterminals, with rules where they appear

argument             : 39 40
argument_list        : 37 39
argument_list_option : 36
array_usage          : 7 8 18 19 94
assignment           : 6 15 16 25 93 112
cin_statement        : 50
comparators          : 67 68 69 70
compound_statement   : 36 63 65 67 69 71 73 73 74 75
conditional_expression : 97
cout_statement       : 49
declaration          : 46 53
declaration_list     : 51 52 53
elements             : 29 31 35
empty                : 38 44 54
expression           : 5 21 22 23 28 30 31 34 35 57 58 58 63 64 65 66 67 67 67 67 68 68 68 68 69 70 71 72 73 74 75 76 78 79 79 80 80 81 81 82 82 83 83 84 84 85 85 86 86 87 103 103 104 104 105 105 106 106 107 107 108 109 110 111
external-declaration : 3 4
file_inclusion       : 10
function             : 1 2
function_call        : 17 95
identifiers          : 14 26
iteration_statement  : 45
macro_definition     : 9
math_expression      : 69 70 96
namespace_statement  : 11
number               : 67 68 69 70 89
program              : 2 3 0
return_statement     : 48
selection_statement  : 47
statement            : 43 64 66 68 70 72 74 75 76 76
statement_list       : 42 43
struct               : 12 20
type                 : 6 8 13 14 15 19 36 41 67 68 69 70

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . function
    (2) program -> . function program
    (3) program -> . external-declaration program
    (4) program -> . external-declaration
    (5) program -> . expression
    (36) function -> . type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement
    (6) external-declaration -> . type assignment SEMICOLON
    (7) external-declaration -> . array_usage SEMICOLON
    (8) external-declaration -> . type array_usage SEMICOLON
    (9) external-declaration -> . macro_definition
    (10) external-declaration -> . file_inclusion
    (11) external-declaration -> . namespace_statement
    (12) external-declaration -> . struct
    (88) expression -> . BOOLEAN
    (89) expression -> . number
    (90) expression -> . STRING
    (91) expression -> . IDENTIFIER
    (92) expression -> . LETTER
    (93) expression -> . assignment
    (94) expression -> . array_usage
    (95) expression -> . function_call
    (96) expression -> . math_expression
    (97) expression -> . conditional_expression
    (98) type -> . BOOL
    (99) type -> . INT
    (100) type -> . FLOAT
    (101) type -> . CHAR
    (102) type -> . VOID
    (34) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (35) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE
    (112) macro_definition -> . POUND DEFINE IDENTIFIER assignment
    (113) file_inclusion -> . POUND INCLUDE LESS HEADER GREATER
    (114) file_inclusion -> . POUND INCLUDE QUOTE HEADER QUOTE
    (115) file_inclusion -> . POUND INCLUDE LESS IDENTIFIER GREATER
    (116) file_inclusion -> . POUND INCLUDE QUOTE IDENTIFIER QUOTE
    (55) namespace_statement -> . USING NAMESPACE IDENTIFIER SEMICOLON
    (51) struct -> . STRUCT IDENTIFIER LBRACE declaration_list RBRACE
    (52) struct -> . STRUCT IDENTIFIER LBRACE declaration_list RBRACE IDENTIFIER SEMICOLON
    (32) number -> . INTEGER
    (33) number -> . FLOATINGPOINT
    (21) assignment -> . IDENTIFIER EQUALS expression
    (22) assignment -> . IDENTIFIER PLUS EQUALS expression
    (23) assignment -> . IDENTIFIER MINUS EQUALS expression
    (27) function_call -> . IDENTIFIER LPAREN RPAREN
    (28) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (29) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (103) math_expression -> . expression PLUS expression
    (104) math_expression -> . expression MINUS expression
    (105) math_expression -> . expression TIMES expression
    (106) math_expression -> . expression DIVIDE expression
    (107) math_expression -> . expression MODULUS expression
    (108) math_expression -> . expression PLUS PLUS
    (109) math_expression -> . expression MINUS MINUS
    (110) math_expression -> . PLUS PLUS expression
    (111) math_expression -> . MINUS MINUS expression
    (79) conditional_expression -> . expression ISEQUAL expression
    (80) conditional_expression -> . expression NOT EQUALS expression
    (81) conditional_expression -> . expression LESS expression
    (82) conditional_expression -> . expression LESS EQUALS expression
    (83) conditional_expression -> . expression GREATER expression
    (84) conditional_expression -> . expression GREATER EQUALS expression
    (85) conditional_expression -> . expression AND expression
    (86) conditional_expression -> . expression OR expression
    (87) conditional_expression -> . NOT expression

    BOOLEAN         shift and go to state 13
    STRING          shift and go to state 15
    IDENTIFIER      shift and go to state 6
    LETTER          shift and go to state 16
    BOOL            shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    CHAR            shift and go to state 23
    VOID            shift and go to state 24
    POUND           shift and go to state 25
    USING           shift and go to state 26
    STRUCT          shift and go to state 27
    INTEGER         shift and go to state 28
    FLOATINGPOINT   shift and go to state 29
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    NOT             shift and go to state 32

    program                        shift and go to state 1
    function                       shift and go to state 2
    external-declaration           shift and go to state 3
    expression                     shift and go to state 4
    type                           shift and go to state 5
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 8
    macro_definition               shift and go to state 9
    file_inclusion                 shift and go to state 10
    namespace_statement            shift and go to state 11
    struct                         shift and go to state 12
    number                         shift and go to state 14
    function_call                  shift and go to state 17
    math_expression                shift and go to state 18
    conditional_expression         shift and go to state 19

state 1

    (0) S' -> program .



state 2

    (1) program -> function .
    (2) program -> function . program
    (1) program -> . function
    (2) program -> . function program
    (3) program -> . external-declaration program
    (4) program -> . external-declaration
    (5) program -> . expression
    (36) function -> . type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement
    (6) external-declaration -> . type assignment SEMICOLON
    (7) external-declaration -> . array_usage SEMICOLON
    (8) external-declaration -> . type array_usage SEMICOLON
    (9) external-declaration -> . macro_definition
    (10) external-declaration -> . file_inclusion
    (11) external-declaration -> . namespace_statement
    (12) external-declaration -> . struct
    (88) expression -> . BOOLEAN
    (89) expression -> . number
    (90) expression -> . STRING
    (91) expression -> . IDENTIFIER
    (92) expression -> . LETTER
    (93) expression -> . assignment
    (94) expression -> . array_usage
    (95) expression -> . function_call
    (96) expression -> . math_expression
    (97) expression -> . conditional_expression
    (98) type -> . BOOL
    (99) type -> . INT
    (100) type -> . FLOAT
    (101) type -> . CHAR
    (102) type -> . VOID
    (34) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (35) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE
    (112) macro_definition -> . POUND DEFINE IDENTIFIER assignment
    (113) file_inclusion -> . POUND INCLUDE LESS HEADER GREATER
    (114) file_inclusion -> . POUND INCLUDE QUOTE HEADER QUOTE
    (115) file_inclusion -> . POUND INCLUDE LESS IDENTIFIER GREATER
    (116) file_inclusion -> . POUND INCLUDE QUOTE IDENTIFIER QUOTE
    (55) namespace_statement -> . USING NAMESPACE IDENTIFIER SEMICOLON
    (51) struct -> . STRUCT IDENTIFIER LBRACE declaration_list RBRACE
    (52) struct -> . STRUCT IDENTIFIER LBRACE declaration_list RBRACE IDENTIFIER SEMICOLON
    (32) number -> . INTEGER
    (33) number -> . FLOATINGPOINT
    (21) assignment -> . IDENTIFIER EQUALS expression
    (22) assignment -> . IDENTIFIER PLUS EQUALS expression
    (23) assignment -> . IDENTIFIER MINUS EQUALS expression
    (27) function_call -> . IDENTIFIER LPAREN RPAREN
    (28) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (29) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (103) math_expression -> . expression PLUS expression
    (104) math_expression -> . expression MINUS expression
    (105) math_expression -> . expression TIMES expression
    (106) math_expression -> . expression DIVIDE expression
    (107) math_expression -> . expression MODULUS expression
    (108) math_expression -> . expression PLUS PLUS
    (109) math_expression -> . expression MINUS MINUS
    (110) math_expression -> . PLUS PLUS expression
    (111) math_expression -> . MINUS MINUS expression
    (79) conditional_expression -> . expression ISEQUAL expression
    (80) conditional_expression -> . expression NOT EQUALS expression
    (81) conditional_expression -> . expression LESS expression
    (82) conditional_expression -> . expression LESS EQUALS expression
    (83) conditional_expression -> . expression GREATER expression
    (84) conditional_expression -> . expression GREATER EQUALS expression
    (85) conditional_expression -> . expression AND expression
    (86) conditional_expression -> . expression OR expression
    (87) conditional_expression -> . NOT expression

    $end            reduce using rule 1 (program -> function .)
    BOOLEAN         shift and go to state 13
    STRING          shift and go to state 15
    IDENTIFIER      shift and go to state 6
    LETTER          shift and go to state 16
    BOOL            shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    CHAR            shift and go to state 23
    VOID            shift and go to state 24
    POUND           shift and go to state 25
    USING           shift and go to state 26
    STRUCT          shift and go to state 27
    INTEGER         shift and go to state 28
    FLOATINGPOINT   shift and go to state 29
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    NOT             shift and go to state 32

    function                       shift and go to state 2
    program                        shift and go to state 33
    external-declaration           shift and go to state 3
    expression                     shift and go to state 4
    type                           shift and go to state 5
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 8
    macro_definition               shift and go to state 9
    file_inclusion                 shift and go to state 10
    namespace_statement            shift and go to state 11
    struct                         shift and go to state 12
    number                         shift and go to state 14
    function_call                  shift and go to state 17
    math_expression                shift and go to state 18
    conditional_expression         shift and go to state 19

state 3

    (3) program -> external-declaration . program
    (4) program -> external-declaration .
    (1) program -> . function
    (2) program -> . function program
    (3) program -> . external-declaration program
    (4) program -> . external-declaration
    (5) program -> . expression
    (36) function -> . type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement
    (6) external-declaration -> . type assignment SEMICOLON
    (7) external-declaration -> . array_usage SEMICOLON
    (8) external-declaration -> . type array_usage SEMICOLON
    (9) external-declaration -> . macro_definition
    (10) external-declaration -> . file_inclusion
    (11) external-declaration -> . namespace_statement
    (12) external-declaration -> . struct
    (88) expression -> . BOOLEAN
    (89) expression -> . number
    (90) expression -> . STRING
    (91) expression -> . IDENTIFIER
    (92) expression -> . LETTER
    (93) expression -> . assignment
    (94) expression -> . array_usage
    (95) expression -> . function_call
    (96) expression -> . math_expression
    (97) expression -> . conditional_expression
    (98) type -> . BOOL
    (99) type -> . INT
    (100) type -> . FLOAT
    (101) type -> . CHAR
    (102) type -> . VOID
    (34) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (35) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE
    (112) macro_definition -> . POUND DEFINE IDENTIFIER assignment
    (113) file_inclusion -> . POUND INCLUDE LESS HEADER GREATER
    (114) file_inclusion -> . POUND INCLUDE QUOTE HEADER QUOTE
    (115) file_inclusion -> . POUND INCLUDE LESS IDENTIFIER GREATER
    (116) file_inclusion -> . POUND INCLUDE QUOTE IDENTIFIER QUOTE
    (55) namespace_statement -> . USING NAMESPACE IDENTIFIER SEMICOLON
    (51) struct -> . STRUCT IDENTIFIER LBRACE declaration_list RBRACE
    (52) struct -> . STRUCT IDENTIFIER LBRACE declaration_list RBRACE IDENTIFIER SEMICOLON
    (32) number -> . INTEGER
    (33) number -> . FLOATINGPOINT
    (21) assignment -> . IDENTIFIER EQUALS expression
    (22) assignment -> . IDENTIFIER PLUS EQUALS expression
    (23) assignment -> . IDENTIFIER MINUS EQUALS expression
    (27) function_call -> . IDENTIFIER LPAREN RPAREN
    (28) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (29) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (103) math_expression -> . expression PLUS expression
    (104) math_expression -> . expression MINUS expression
    (105) math_expression -> . expression TIMES expression
    (106) math_expression -> . expression DIVIDE expression
    (107) math_expression -> . expression MODULUS expression
    (108) math_expression -> . expression PLUS PLUS
    (109) math_expression -> . expression MINUS MINUS
    (110) math_expression -> . PLUS PLUS expression
    (111) math_expression -> . MINUS MINUS expression
    (79) conditional_expression -> . expression ISEQUAL expression
    (80) conditional_expression -> . expression NOT EQUALS expression
    (81) conditional_expression -> . expression LESS expression
    (82) conditional_expression -> . expression LESS EQUALS expression
    (83) conditional_expression -> . expression GREATER expression
    (84) conditional_expression -> . expression GREATER EQUALS expression
    (85) conditional_expression -> . expression AND expression
    (86) conditional_expression -> . expression OR expression
    (87) conditional_expression -> . NOT expression

    $end            reduce using rule 4 (program -> external-declaration .)
    BOOLEAN         shift and go to state 13
    STRING          shift and go to state 15
    IDENTIFIER      shift and go to state 6
    LETTER          shift and go to state 16
    BOOL            shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    CHAR            shift and go to state 23
    VOID            shift and go to state 24
    POUND           shift and go to state 25
    USING           shift and go to state 26
    STRUCT          shift and go to state 27
    INTEGER         shift and go to state 28
    FLOATINGPOINT   shift and go to state 29
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    NOT             shift and go to state 32

    external-declaration           shift and go to state 3
    program                        shift and go to state 34
    function                       shift and go to state 2
    expression                     shift and go to state 4
    type                           shift and go to state 5
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 8
    macro_definition               shift and go to state 9
    file_inclusion                 shift and go to state 10
    namespace_statement            shift and go to state 11
    struct                         shift and go to state 12
    number                         shift and go to state 14
    function_call                  shift and go to state 17
    math_expression                shift and go to state 18
    conditional_expression         shift and go to state 19

state 4

    (5) program -> expression .
    (103) math_expression -> expression . PLUS expression
    (104) math_expression -> expression . MINUS expression
    (105) math_expression -> expression . TIMES expression
    (106) math_expression -> expression . DIVIDE expression
    (107) math_expression -> expression . MODULUS expression
    (108) math_expression -> expression . PLUS PLUS
    (109) math_expression -> expression . MINUS MINUS
    (79) conditional_expression -> expression . ISEQUAL expression
    (80) conditional_expression -> expression . NOT EQUALS expression
    (81) conditional_expression -> expression . LESS expression
    (82) conditional_expression -> expression . LESS EQUALS expression
    (83) conditional_expression -> expression . GREATER expression
    (84) conditional_expression -> expression . GREATER EQUALS expression
    (85) conditional_expression -> expression . AND expression
    (86) conditional_expression -> expression . OR expression

    $end            reduce using rule 5 (program -> expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULUS         shift and go to state 39
    ISEQUAL         shift and go to state 40
    NOT             shift and go to state 41
    LESS            shift and go to state 42
    GREATER         shift and go to state 43
    AND             shift and go to state 44
    OR              shift and go to state 45


state 5

    (36) function -> type . IDENTIFIER LPAREN argument_list_option RPAREN compound_statement
    (6) external-declaration -> type . assignment SEMICOLON
    (8) external-declaration -> type . array_usage SEMICOLON
    (21) assignment -> . IDENTIFIER EQUALS expression
    (22) assignment -> . IDENTIFIER PLUS EQUALS expression
    (23) assignment -> . IDENTIFIER MINUS EQUALS expression
    (34) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (35) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE

    IDENTIFIER      shift and go to state 46

    assignment                     shift and go to state 47
    array_usage                    shift and go to state 48

state 6

    (91) expression -> IDENTIFIER .
    (34) array_usage -> IDENTIFIER . LBRACKET expression RBRACKET
    (35) array_usage -> IDENTIFIER . LBRACKET expression RBRACKET LBRACE elements RBRACE
    (21) assignment -> IDENTIFIER . EQUALS expression
    (22) assignment -> IDENTIFIER . PLUS EQUALS expression
    (23) assignment -> IDENTIFIER . MINUS EQUALS expression
    (27) function_call -> IDENTIFIER . LPAREN RPAREN
    (28) function_call -> IDENTIFIER . LPAREN expression RPAREN
    (29) function_call -> IDENTIFIER . LPAREN elements RPAREN

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    TIMES           reduce using rule 91 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 91 (expression -> IDENTIFIER .)
    MODULUS         reduce using rule 91 (expression -> IDENTIFIER .)
    ISEQUAL         reduce using rule 91 (expression -> IDENTIFIER .)
    NOT             reduce using rule 91 (expression -> IDENTIFIER .)
    LESS            reduce using rule 91 (expression -> IDENTIFIER .)
    GREATER         reduce using rule 91 (expression -> IDENTIFIER .)
    AND             reduce using rule 91 (expression -> IDENTIFIER .)
    OR              reduce using rule 91 (expression -> IDENTIFIER .)
    $end            reduce using rule 91 (expression -> IDENTIFIER .)
    LBRACKET        shift and go to state 49
    EQUALS          shift and go to state 50
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    LPAREN          shift and go to state 53

  ! PLUS            [ reduce using rule 91 (expression -> IDENTIFIER .) ]
  ! MINUS           [ reduce using rule 91 (expression -> IDENTIFIER .) ]


state 7

    (93) expression -> assignment .

    PLUS            reduce using rule 93 (expression -> assignment .)
    MINUS           reduce using rule 93 (expression -> assignment .)
    TIMES           reduce using rule 93 (expression -> assignment .)
    DIVIDE          reduce using rule 93 (expression -> assignment .)
    MODULUS         reduce using rule 93 (expression -> assignment .)
    ISEQUAL         reduce using rule 93 (expression -> assignment .)
    NOT             reduce using rule 93 (expression -> assignment .)
    LESS            reduce using rule 93 (expression -> assignment .)
    GREATER         reduce using rule 93 (expression -> assignment .)
    AND             reduce using rule 93 (expression -> assignment .)
    OR              reduce using rule 93 (expression -> assignment .)
    $end            reduce using rule 93 (expression -> assignment .)
    RBRACKET        reduce using rule 93 (expression -> assignment .)
    SEMICOLON       reduce using rule 93 (expression -> assignment .)
    RPAREN          reduce using rule 93 (expression -> assignment .)
    COMMA           reduce using rule 93 (expression -> assignment .)
    RBRACE          reduce using rule 93 (expression -> assignment .)
    BOOLEAN         reduce using rule 93 (expression -> assignment .)
    STRING          reduce using rule 93 (expression -> assignment .)
    IDENTIFIER      reduce using rule 93 (expression -> assignment .)
    LETTER          reduce using rule 93 (expression -> assignment .)
    BOOL            reduce using rule 93 (expression -> assignment .)
    INT             reduce using rule 93 (expression -> assignment .)
    FLOAT           reduce using rule 93 (expression -> assignment .)
    CHAR            reduce using rule 93 (expression -> assignment .)
    VOID            reduce using rule 93 (expression -> assignment .)
    POUND           reduce using rule 93 (expression -> assignment .)
    USING           reduce using rule 93 (expression -> assignment .)
    STRUCT          reduce using rule 93 (expression -> assignment .)
    INTEGER         reduce using rule 93 (expression -> assignment .)
    FLOATINGPOINT   reduce using rule 93 (expression -> assignment .)
    EQUALS          reduce using rule 93 (expression -> assignment .)


state 8

    (7) external-declaration -> array_usage . SEMICOLON
    (94) expression -> array_usage .

    SEMICOLON       shift and go to state 54
    PLUS            reduce using rule 94 (expression -> array_usage .)
    MINUS           reduce using rule 94 (expression -> array_usage .)
    TIMES           reduce using rule 94 (expression -> array_usage .)
    DIVIDE          reduce using rule 94 (expression -> array_usage .)
    MODULUS         reduce using rule 94 (expression -> array_usage .)
    ISEQUAL         reduce using rule 94 (expression -> array_usage .)
    NOT             reduce using rule 94 (expression -> array_usage .)
    LESS            reduce using rule 94 (expression -> array_usage .)
    GREATER         reduce using rule 94 (expression -> array_usage .)
    AND             reduce using rule 94 (expression -> array_usage .)
    OR              reduce using rule 94 (expression -> array_usage .)
    $end            reduce using rule 94 (expression -> array_usage .)


state 9

    (9) external-declaration -> macro_definition .

    BOOLEAN         reduce using rule 9 (external-declaration -> macro_definition .)
    STRING          reduce using rule 9 (external-declaration -> macro_definition .)
    IDENTIFIER      reduce using rule 9 (external-declaration -> macro_definition .)
    LETTER          reduce using rule 9 (external-declaration -> macro_definition .)
    BOOL            reduce using rule 9 (external-declaration -> macro_definition .)
    INT             reduce using rule 9 (external-declaration -> macro_definition .)
    FLOAT           reduce using rule 9 (external-declaration -> macro_definition .)
    CHAR            reduce using rule 9 (external-declaration -> macro_definition .)
    VOID            reduce using rule 9 (external-declaration -> macro_definition .)
    POUND           reduce using rule 9 (external-declaration -> macro_definition .)
    USING           reduce using rule 9 (external-declaration -> macro_definition .)
    STRUCT          reduce using rule 9 (external-declaration -> macro_definition .)
    INTEGER         reduce using rule 9 (external-declaration -> macro_definition .)
    FLOATINGPOINT   reduce using rule 9 (external-declaration -> macro_definition .)
    PLUS            reduce using rule 9 (external-declaration -> macro_definition .)
    MINUS           reduce using rule 9 (external-declaration -> macro_definition .)
    NOT             reduce using rule 9 (external-declaration -> macro_definition .)
    $end            reduce using rule 9 (external-declaration -> macro_definition .)


state 10

    (10) external-declaration -> file_inclusion .

    BOOLEAN         reduce using rule 10 (external-declaration -> file_inclusion .)
    STRING          reduce using rule 10 (external-declaration -> file_inclusion .)
    IDENTIFIER      reduce using rule 10 (external-declaration -> file_inclusion .)
    LETTER          reduce using rule 10 (external-declaration -> file_inclusion .)
    BOOL            reduce using rule 10 (external-declaration -> file_inclusion .)
    INT             reduce using rule 10 (external-declaration -> file_inclusion .)
    FLOAT           reduce using rule 10 (external-declaration -> file_inclusion .)
    CHAR            reduce using rule 10 (external-declaration -> file_inclusion .)
    VOID            reduce using rule 10 (external-declaration -> file_inclusion .)
    POUND           reduce using rule 10 (external-declaration -> file_inclusion .)
    USING           reduce using rule 10 (external-declaration -> file_inclusion .)
    STRUCT          reduce using rule 10 (external-declaration -> file_inclusion .)
    INTEGER         reduce using rule 10 (external-declaration -> file_inclusion .)
    FLOATINGPOINT   reduce using rule 10 (external-declaration -> file_inclusion .)
    PLUS            reduce using rule 10 (external-declaration -> file_inclusion .)
    MINUS           reduce using rule 10 (external-declaration -> file_inclusion .)
    NOT             reduce using rule 10 (external-declaration -> file_inclusion .)
    $end            reduce using rule 10 (external-declaration -> file_inclusion .)


state 11

    (11) external-declaration -> namespace_statement .

    BOOLEAN         reduce using rule 11 (external-declaration -> namespace_statement .)
    STRING          reduce using rule 11 (external-declaration -> namespace_statement .)
    IDENTIFIER      reduce using rule 11 (external-declaration -> namespace_statement .)
    LETTER          reduce using rule 11 (external-declaration -> namespace_statement .)
    BOOL            reduce using rule 11 (external-declaration -> namespace_statement .)
    INT             reduce using rule 11 (external-declaration -> namespace_statement .)
    FLOAT           reduce using rule 11 (external-declaration -> namespace_statement .)
    CHAR            reduce using rule 11 (external-declaration -> namespace_statement .)
    VOID            reduce using rule 11 (external-declaration -> namespace_statement .)
    POUND           reduce using rule 11 (external-declaration -> namespace_statement .)
    USING           reduce using rule 11 (external-declaration -> namespace_statement .)
    STRUCT          reduce using rule 11 (external-declaration -> namespace_statement .)
    INTEGER         reduce using rule 11 (external-declaration -> namespace_statement .)
    FLOATINGPOINT   reduce using rule 11 (external-declaration -> namespace_statement .)
    PLUS            reduce using rule 11 (external-declaration -> namespace_statement .)
    MINUS           reduce using rule 11 (external-declaration -> namespace_statement .)
    NOT             reduce using rule 11 (external-declaration -> namespace_statement .)
    $end            reduce using rule 11 (external-declaration -> namespace_statement .)


state 12

    (12) external-declaration -> struct .

    BOOLEAN         reduce using rule 12 (external-declaration -> struct .)
    STRING          reduce using rule 12 (external-declaration -> struct .)
    IDENTIFIER      reduce using rule 12 (external-declaration -> struct .)
    LETTER          reduce using rule 12 (external-declaration -> struct .)
    BOOL            reduce using rule 12 (external-declaration -> struct .)
    INT             reduce using rule 12 (external-declaration -> struct .)
    FLOAT           reduce using rule 12 (external-declaration -> struct .)
    CHAR            reduce using rule 12 (external-declaration -> struct .)
    VOID            reduce using rule 12 (external-declaration -> struct .)
    POUND           reduce using rule 12 (external-declaration -> struct .)
    USING           reduce using rule 12 (external-declaration -> struct .)
    STRUCT          reduce using rule 12 (external-declaration -> struct .)
    INTEGER         reduce using rule 12 (external-declaration -> struct .)
    FLOATINGPOINT   reduce using rule 12 (external-declaration -> struct .)
    PLUS            reduce using rule 12 (external-declaration -> struct .)
    MINUS           reduce using rule 12 (external-declaration -> struct .)
    NOT             reduce using rule 12 (external-declaration -> struct .)
    $end            reduce using rule 12 (external-declaration -> struct .)


state 13

    (88) expression -> BOOLEAN .

    PLUS            reduce using rule 88 (expression -> BOOLEAN .)
    MINUS           reduce using rule 88 (expression -> BOOLEAN .)
    TIMES           reduce using rule 88 (expression -> BOOLEAN .)
    DIVIDE          reduce using rule 88 (expression -> BOOLEAN .)
    MODULUS         reduce using rule 88 (expression -> BOOLEAN .)
    ISEQUAL         reduce using rule 88 (expression -> BOOLEAN .)
    NOT             reduce using rule 88 (expression -> BOOLEAN .)
    LESS            reduce using rule 88 (expression -> BOOLEAN .)
    GREATER         reduce using rule 88 (expression -> BOOLEAN .)
    AND             reduce using rule 88 (expression -> BOOLEAN .)
    OR              reduce using rule 88 (expression -> BOOLEAN .)
    $end            reduce using rule 88 (expression -> BOOLEAN .)
    RBRACKET        reduce using rule 88 (expression -> BOOLEAN .)
    SEMICOLON       reduce using rule 88 (expression -> BOOLEAN .)
    RPAREN          reduce using rule 88 (expression -> BOOLEAN .)
    COMMA           reduce using rule 88 (expression -> BOOLEAN .)
    RBRACE          reduce using rule 88 (expression -> BOOLEAN .)
    BOOLEAN         reduce using rule 88 (expression -> BOOLEAN .)
    STRING          reduce using rule 88 (expression -> BOOLEAN .)
    IDENTIFIER      reduce using rule 88 (expression -> BOOLEAN .)
    LETTER          reduce using rule 88 (expression -> BOOLEAN .)
    BOOL            reduce using rule 88 (expression -> BOOLEAN .)
    INT             reduce using rule 88 (expression -> BOOLEAN .)
    FLOAT           reduce using rule 88 (expression -> BOOLEAN .)
    CHAR            reduce using rule 88 (expression -> BOOLEAN .)
    VOID            reduce using rule 88 (expression -> BOOLEAN .)
    POUND           reduce using rule 88 (expression -> BOOLEAN .)
    USING           reduce using rule 88 (expression -> BOOLEAN .)
    STRUCT          reduce using rule 88 (expression -> BOOLEAN .)
    INTEGER         reduce using rule 88 (expression -> BOOLEAN .)
    FLOATINGPOINT   reduce using rule 88 (expression -> BOOLEAN .)
    EQUALS          reduce using rule 88 (expression -> BOOLEAN .)


state 14

    (89) expression -> number .

    PLUS            reduce using rule 89 (expression -> number .)
    MINUS           reduce using rule 89 (expression -> number .)
    TIMES           reduce using rule 89 (expression -> number .)
    DIVIDE          reduce using rule 89 (expression -> number .)
    MODULUS         reduce using rule 89 (expression -> number .)
    ISEQUAL         reduce using rule 89 (expression -> number .)
    NOT             reduce using rule 89 (expression -> number .)
    LESS            reduce using rule 89 (expression -> number .)
    GREATER         reduce using rule 89 (expression -> number .)
    AND             reduce using rule 89 (expression -> number .)
    OR              reduce using rule 89 (expression -> number .)
    $end            reduce using rule 89 (expression -> number .)
    RBRACKET        reduce using rule 89 (expression -> number .)
    SEMICOLON       reduce using rule 89 (expression -> number .)
    RPAREN          reduce using rule 89 (expression -> number .)
    COMMA           reduce using rule 89 (expression -> number .)
    RBRACE          reduce using rule 89 (expression -> number .)
    BOOLEAN         reduce using rule 89 (expression -> number .)
    STRING          reduce using rule 89 (expression -> number .)
    IDENTIFIER      reduce using rule 89 (expression -> number .)
    LETTER          reduce using rule 89 (expression -> number .)
    BOOL            reduce using rule 89 (expression -> number .)
    INT             reduce using rule 89 (expression -> number .)
    FLOAT           reduce using rule 89 (expression -> number .)
    CHAR            reduce using rule 89 (expression -> number .)
    VOID            reduce using rule 89 (expression -> number .)
    POUND           reduce using rule 89 (expression -> number .)
    USING           reduce using rule 89 (expression -> number .)
    STRUCT          reduce using rule 89 (expression -> number .)
    INTEGER         reduce using rule 89 (expression -> number .)
    FLOATINGPOINT   reduce using rule 89 (expression -> number .)
    EQUALS          reduce using rule 89 (expression -> number .)


state 15

    (90) expression -> STRING .

    PLUS            reduce using rule 90 (expression -> STRING .)
    MINUS           reduce using rule 90 (expression -> STRING .)
    TIMES           reduce using rule 90 (expression -> STRING .)
    DIVIDE          reduce using rule 90 (expression -> STRING .)
    MODULUS         reduce using rule 90 (expression -> STRING .)
    ISEQUAL         reduce using rule 90 (expression -> STRING .)
    NOT             reduce using rule 90 (expression -> STRING .)
    LESS            reduce using rule 90 (expression -> STRING .)
    GREATER         reduce using rule 90 (expression -> STRING .)
    AND             reduce using rule 90 (expression -> STRING .)
    OR              reduce using rule 90 (expression -> STRING .)
    $end            reduce using rule 90 (expression -> STRING .)
    RBRACKET        reduce using rule 90 (expression -> STRING .)
    SEMICOLON       reduce using rule 90 (expression -> STRING .)
    RPAREN          reduce using rule 90 (expression -> STRING .)
    COMMA           reduce using rule 90 (expression -> STRING .)
    RBRACE          reduce using rule 90 (expression -> STRING .)
    BOOLEAN         reduce using rule 90 (expression -> STRING .)
    STRING          reduce using rule 90 (expression -> STRING .)
    IDENTIFIER      reduce using rule 90 (expression -> STRING .)
    LETTER          reduce using rule 90 (expression -> STRING .)
    BOOL            reduce using rule 90 (expression -> STRING .)
    INT             reduce using rule 90 (expression -> STRING .)
    FLOAT           reduce using rule 90 (expression -> STRING .)
    CHAR            reduce using rule 90 (expression -> STRING .)
    VOID            reduce using rule 90 (expression -> STRING .)
    POUND           reduce using rule 90 (expression -> STRING .)
    USING           reduce using rule 90 (expression -> STRING .)
    STRUCT          reduce using rule 90 (expression -> STRING .)
    INTEGER         reduce using rule 90 (expression -> STRING .)
    FLOATINGPOINT   reduce using rule 90 (expression -> STRING .)
    EQUALS          reduce using rule 90 (expression -> STRING .)


state 16

    (92) expression -> LETTER .

    PLUS            reduce using rule 92 (expression -> LETTER .)
    MINUS           reduce using rule 92 (expression -> LETTER .)
    TIMES           reduce using rule 92 (expression -> LETTER .)
    DIVIDE          reduce using rule 92 (expression -> LETTER .)
    MODULUS         reduce using rule 92 (expression -> LETTER .)
    ISEQUAL         reduce using rule 92 (expression -> LETTER .)
    NOT             reduce using rule 92 (expression -> LETTER .)
    LESS            reduce using rule 92 (expression -> LETTER .)
    GREATER         reduce using rule 92 (expression -> LETTER .)
    AND             reduce using rule 92 (expression -> LETTER .)
    OR              reduce using rule 92 (expression -> LETTER .)
    $end            reduce using rule 92 (expression -> LETTER .)
    RBRACKET        reduce using rule 92 (expression -> LETTER .)
    SEMICOLON       reduce using rule 92 (expression -> LETTER .)
    RPAREN          reduce using rule 92 (expression -> LETTER .)
    COMMA           reduce using rule 92 (expression -> LETTER .)
    RBRACE          reduce using rule 92 (expression -> LETTER .)
    BOOLEAN         reduce using rule 92 (expression -> LETTER .)
    STRING          reduce using rule 92 (expression -> LETTER .)
    IDENTIFIER      reduce using rule 92 (expression -> LETTER .)
    LETTER          reduce using rule 92 (expression -> LETTER .)
    BOOL            reduce using rule 92 (expression -> LETTER .)
    INT             reduce using rule 92 (expression -> LETTER .)
    FLOAT           reduce using rule 92 (expression -> LETTER .)
    CHAR            reduce using rule 92 (expression -> LETTER .)
    VOID            reduce using rule 92 (expression -> LETTER .)
    POUND           reduce using rule 92 (expression -> LETTER .)
    USING           reduce using rule 92 (expression -> LETTER .)
    STRUCT          reduce using rule 92 (expression -> LETTER .)
    INTEGER         reduce using rule 92 (expression -> LETTER .)
    FLOATINGPOINT   reduce using rule 92 (expression -> LETTER .)
    EQUALS          reduce using rule 92 (expression -> LETTER .)


state 17

    (95) expression -> function_call .

    PLUS            reduce using rule 95 (expression -> function_call .)
    MINUS           reduce using rule 95 (expression -> function_call .)
    TIMES           reduce using rule 95 (expression -> function_call .)
    DIVIDE          reduce using rule 95 (expression -> function_call .)
    MODULUS         reduce using rule 95 (expression -> function_call .)
    ISEQUAL         reduce using rule 95 (expression -> function_call .)
    NOT             reduce using rule 95 (expression -> function_call .)
    LESS            reduce using rule 95 (expression -> function_call .)
    GREATER         reduce using rule 95 (expression -> function_call .)
    AND             reduce using rule 95 (expression -> function_call .)
    OR              reduce using rule 95 (expression -> function_call .)
    $end            reduce using rule 95 (expression -> function_call .)
    RBRACKET        reduce using rule 95 (expression -> function_call .)
    SEMICOLON       reduce using rule 95 (expression -> function_call .)
    RPAREN          reduce using rule 95 (expression -> function_call .)
    COMMA           reduce using rule 95 (expression -> function_call .)
    RBRACE          reduce using rule 95 (expression -> function_call .)
    BOOLEAN         reduce using rule 95 (expression -> function_call .)
    STRING          reduce using rule 95 (expression -> function_call .)
    IDENTIFIER      reduce using rule 95 (expression -> function_call .)
    LETTER          reduce using rule 95 (expression -> function_call .)
    BOOL            reduce using rule 95 (expression -> function_call .)
    INT             reduce using rule 95 (expression -> function_call .)
    FLOAT           reduce using rule 95 (expression -> function_call .)
    CHAR            reduce using rule 95 (expression -> function_call .)
    VOID            reduce using rule 95 (expression -> function_call .)
    POUND           reduce using rule 95 (expression -> function_call .)
    USING           reduce using rule 95 (expression -> function_call .)
    STRUCT          reduce using rule 95 (expression -> function_call .)
    INTEGER         reduce using rule 95 (expression -> function_call .)
    FLOATINGPOINT   reduce using rule 95 (expression -> function_call .)
    EQUALS          reduce using rule 95 (expression -> function_call .)


state 18

    (96) expression -> math_expression .

    PLUS            reduce using rule 96 (expression -> math_expression .)
    MINUS           reduce using rule 96 (expression -> math_expression .)
    TIMES           reduce using rule 96 (expression -> math_expression .)
    DIVIDE          reduce using rule 96 (expression -> math_expression .)
    MODULUS         reduce using rule 96 (expression -> math_expression .)
    ISEQUAL         reduce using rule 96 (expression -> math_expression .)
    NOT             reduce using rule 96 (expression -> math_expression .)
    LESS            reduce using rule 96 (expression -> math_expression .)
    GREATER         reduce using rule 96 (expression -> math_expression .)
    AND             reduce using rule 96 (expression -> math_expression .)
    OR              reduce using rule 96 (expression -> math_expression .)
    $end            reduce using rule 96 (expression -> math_expression .)
    RBRACKET        reduce using rule 96 (expression -> math_expression .)
    SEMICOLON       reduce using rule 96 (expression -> math_expression .)
    RPAREN          reduce using rule 96 (expression -> math_expression .)
    COMMA           reduce using rule 96 (expression -> math_expression .)
    RBRACE          reduce using rule 96 (expression -> math_expression .)
    BOOLEAN         reduce using rule 96 (expression -> math_expression .)
    STRING          reduce using rule 96 (expression -> math_expression .)
    IDENTIFIER      reduce using rule 96 (expression -> math_expression .)
    LETTER          reduce using rule 96 (expression -> math_expression .)
    BOOL            reduce using rule 96 (expression -> math_expression .)
    INT             reduce using rule 96 (expression -> math_expression .)
    FLOAT           reduce using rule 96 (expression -> math_expression .)
    CHAR            reduce using rule 96 (expression -> math_expression .)
    VOID            reduce using rule 96 (expression -> math_expression .)
    POUND           reduce using rule 96 (expression -> math_expression .)
    USING           reduce using rule 96 (expression -> math_expression .)
    STRUCT          reduce using rule 96 (expression -> math_expression .)
    INTEGER         reduce using rule 96 (expression -> math_expression .)
    FLOATINGPOINT   reduce using rule 96 (expression -> math_expression .)
    EQUALS          reduce using rule 96 (expression -> math_expression .)


state 19

    (97) expression -> conditional_expression .

    PLUS            reduce using rule 97 (expression -> conditional_expression .)
    MINUS           reduce using rule 97 (expression -> conditional_expression .)
    TIMES           reduce using rule 97 (expression -> conditional_expression .)
    DIVIDE          reduce using rule 97 (expression -> conditional_expression .)
    MODULUS         reduce using rule 97 (expression -> conditional_expression .)
    ISEQUAL         reduce using rule 97 (expression -> conditional_expression .)
    NOT             reduce using rule 97 (expression -> conditional_expression .)
    LESS            reduce using rule 97 (expression -> conditional_expression .)
    GREATER         reduce using rule 97 (expression -> conditional_expression .)
    AND             reduce using rule 97 (expression -> conditional_expression .)
    OR              reduce using rule 97 (expression -> conditional_expression .)
    $end            reduce using rule 97 (expression -> conditional_expression .)
    RBRACKET        reduce using rule 97 (expression -> conditional_expression .)
    SEMICOLON       reduce using rule 97 (expression -> conditional_expression .)
    RPAREN          reduce using rule 97 (expression -> conditional_expression .)
    COMMA           reduce using rule 97 (expression -> conditional_expression .)
    RBRACE          reduce using rule 97 (expression -> conditional_expression .)
    BOOLEAN         reduce using rule 97 (expression -> conditional_expression .)
    STRING          reduce using rule 97 (expression -> conditional_expression .)
    IDENTIFIER      reduce using rule 97 (expression -> conditional_expression .)
    LETTER          reduce using rule 97 (expression -> conditional_expression .)
    BOOL            reduce using rule 97 (expression -> conditional_expression .)
    INT             reduce using rule 97 (expression -> conditional_expression .)
    FLOAT           reduce using rule 97 (expression -> conditional_expression .)
    CHAR            reduce using rule 97 (expression -> conditional_expression .)
    VOID            reduce using rule 97 (expression -> conditional_expression .)
    POUND           reduce using rule 97 (expression -> conditional_expression .)
    USING           reduce using rule 97 (expression -> conditional_expression .)
    STRUCT          reduce using rule 97 (expression -> conditional_expression .)
    INTEGER         reduce using rule 97 (expression -> conditional_expression .)
    FLOATINGPOINT   reduce using rule 97 (expression -> conditional_expression .)
    EQUALS          reduce using rule 97 (expression -> conditional_expression .)


state 20

    (98) type -> BOOL .

    IDENTIFIER      reduce using rule 98 (type -> BOOL .)


state 21

    (99) type -> INT .

    IDENTIFIER      reduce using rule 99 (type -> INT .)


state 22

    (100) type -> FLOAT .

    IDENTIFIER      reduce using rule 100 (type -> FLOAT .)


state 23

    (101) type -> CHAR .

    IDENTIFIER      reduce using rule 101 (type -> CHAR .)


state 24

    (102) type -> VOID .

    IDENTIFIER      reduce using rule 102 (type -> VOID .)


state 25

    (112) macro_definition -> POUND . DEFINE IDENTIFIER assignment
    (113) file_inclusion -> POUND . INCLUDE LESS HEADER GREATER
    (114) file_inclusion -> POUND . INCLUDE QUOTE HEADER QUOTE
    (115) file_inclusion -> POUND . INCLUDE LESS IDENTIFIER GREATER
    (116) file_inclusion -> POUND . INCLUDE QUOTE IDENTIFIER QUOTE

    DEFINE          shift and go to state 55
    INCLUDE         shift and go to state 56


state 26

    (55) namespace_statement -> USING . NAMESPACE IDENTIFIER SEMICOLON

    NAMESPACE       shift and go to state 57


state 27

    (51) struct -> STRUCT . IDENTIFIER LBRACE declaration_list RBRACE
    (52) struct -> STRUCT . IDENTIFIER LBRACE declaration_list RBRACE IDENTIFIER SEMICOLON

    IDENTIFIER      shift and go to state 58


state 28

    (32) number -> INTEGER .

    PLUS            reduce using rule 32 (number -> INTEGER .)
    MINUS           reduce using rule 32 (number -> INTEGER .)
    TIMES           reduce using rule 32 (number -> INTEGER .)
    DIVIDE          reduce using rule 32 (number -> INTEGER .)
    MODULUS         reduce using rule 32 (number -> INTEGER .)
    ISEQUAL         reduce using rule 32 (number -> INTEGER .)
    NOT             reduce using rule 32 (number -> INTEGER .)
    LESS            reduce using rule 32 (number -> INTEGER .)
    GREATER         reduce using rule 32 (number -> INTEGER .)
    AND             reduce using rule 32 (number -> INTEGER .)
    OR              reduce using rule 32 (number -> INTEGER .)
    $end            reduce using rule 32 (number -> INTEGER .)
    RBRACKET        reduce using rule 32 (number -> INTEGER .)
    SEMICOLON       reduce using rule 32 (number -> INTEGER .)
    RPAREN          reduce using rule 32 (number -> INTEGER .)
    COMMA           reduce using rule 32 (number -> INTEGER .)
    RBRACE          reduce using rule 32 (number -> INTEGER .)
    BOOLEAN         reduce using rule 32 (number -> INTEGER .)
    STRING          reduce using rule 32 (number -> INTEGER .)
    IDENTIFIER      reduce using rule 32 (number -> INTEGER .)
    LETTER          reduce using rule 32 (number -> INTEGER .)
    BOOL            reduce using rule 32 (number -> INTEGER .)
    INT             reduce using rule 32 (number -> INTEGER .)
    FLOAT           reduce using rule 32 (number -> INTEGER .)
    CHAR            reduce using rule 32 (number -> INTEGER .)
    VOID            reduce using rule 32 (number -> INTEGER .)
    POUND           reduce using rule 32 (number -> INTEGER .)
    USING           reduce using rule 32 (number -> INTEGER .)
    STRUCT          reduce using rule 32 (number -> INTEGER .)
    INTEGER         reduce using rule 32 (number -> INTEGER .)
    FLOATINGPOINT   reduce using rule 32 (number -> INTEGER .)
    EQUALS          reduce using rule 32 (number -> INTEGER .)


state 29

    (33) number -> FLOATINGPOINT .

    PLUS            reduce using rule 33 (number -> FLOATINGPOINT .)
    MINUS           reduce using rule 33 (number -> FLOATINGPOINT .)
    TIMES           reduce using rule 33 (number -> FLOATINGPOINT .)
    DIVIDE          reduce using rule 33 (number -> FLOATINGPOINT .)
    MODULUS         reduce using rule 33 (number -> FLOATINGPOINT .)
    ISEQUAL         reduce using rule 33 (number -> FLOATINGPOINT .)
    NOT             reduce using rule 33 (number -> FLOATINGPOINT .)
    LESS            reduce using rule 33 (number -> FLOATINGPOINT .)
    GREATER         reduce using rule 33 (number -> FLOATINGPOINT .)
    AND             reduce using rule 33 (number -> FLOATINGPOINT .)
    OR              reduce using rule 33 (number -> FLOATINGPOINT .)
    $end            reduce using rule 33 (number -> FLOATINGPOINT .)
    RBRACKET        reduce using rule 33 (number -> FLOATINGPOINT .)
    SEMICOLON       reduce using rule 33 (number -> FLOATINGPOINT .)
    RPAREN          reduce using rule 33 (number -> FLOATINGPOINT .)
    COMMA           reduce using rule 33 (number -> FLOATINGPOINT .)
    RBRACE          reduce using rule 33 (number -> FLOATINGPOINT .)
    BOOLEAN         reduce using rule 33 (number -> FLOATINGPOINT .)
    STRING          reduce using rule 33 (number -> FLOATINGPOINT .)
    IDENTIFIER      reduce using rule 33 (number -> FLOATINGPOINT .)
    LETTER          reduce using rule 33 (number -> FLOATINGPOINT .)
    BOOL            reduce using rule 33 (number -> FLOATINGPOINT .)
    INT             reduce using rule 33 (number -> FLOATINGPOINT .)
    FLOAT           reduce using rule 33 (number -> FLOATINGPOINT .)
    CHAR            reduce using rule 33 (number -> FLOATINGPOINT .)
    VOID            reduce using rule 33 (number -> FLOATINGPOINT .)
    POUND           reduce using rule 33 (number -> FLOATINGPOINT .)
    USING           reduce using rule 33 (number -> FLOATINGPOINT .)
    STRUCT          reduce using rule 33 (number -> FLOATINGPOINT .)
    INTEGER         reduce using rule 33 (number -> FLOATINGPOINT .)
    FLOATINGPOINT   reduce using rule 33 (number -> FLOATINGPOINT .)
    EQUALS          reduce using rule 33 (number -> FLOATINGPOINT .)


state 30

    (110) math_expression -> PLUS . PLUS expression

    PLUS            shift and go to state 59


state 31

    (111) math_expression -> MINUS . MINUS expression

    MINUS           shift and go to state 60


state 32

    (87) conditional_expression -> NOT . expression
    (88) expression -> . BOOLEAN
    (89) expression -> . number
    (90) expression -> . STRING
    (91) expression -> . IDENTIFIER
    (92) expression -> . LETTER
    (93) expression -> . assignment
    (94) expression -> . array_usage
    (95) expression -> . function_call
    (96) expression -> . math_expression
    (97) expression -> . conditional_expression
    (32) number -> . INTEGER
    (33) number -> . FLOATINGPOINT
    (21) assignment -> . IDENTIFIER EQUALS expression
    (22) assignment -> . IDENTIFIER PLUS EQUALS expression
    (23) assignment -> . IDENTIFIER MINUS EQUALS expression
    (34) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (35) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN RPAREN
    (28) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (29) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (103) math_expression -> . expression PLUS expression
    (104) math_expression -> . expression MINUS expression
    (105) math_expression -> . expression TIMES expression
    (106) math_expression -> . expression DIVIDE expression
    (107) math_expression -> . expression MODULUS expression
    (108) math_expression -> . expression PLUS PLUS
    (109) math_expression -> . expression MINUS MINUS
    (110) math_expression -> . PLUS PLUS expression
    (111) math_expression -> . MINUS MINUS expression
    (79) conditional_expression -> . expression ISEQUAL expression
    (80) conditional_expression -> . expression NOT EQUALS expression
    (81) conditional_expression -> . expression LESS expression
    (82) conditional_expression -> . expression LESS EQUALS expression
    (83) conditional_expression -> . expression GREATER expression
    (84) conditional_expression -> . expression GREATER EQUALS expression
    (85) conditional_expression -> . expression AND expression
    (86) conditional_expression -> . expression OR expression
    (87) conditional_expression -> . NOT expression

    BOOLEAN         shift and go to state 13
    STRING          shift and go to state 15
    IDENTIFIER      shift and go to state 62
    LETTER          shift and go to state 16
    INTEGER         shift and go to state 28
    FLOATINGPOINT   shift and go to state 29
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    NOT             shift and go to state 32

    expression                     shift and go to state 61
    number                         shift and go to state 14
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 63
    function_call                  shift and go to state 17
    math_expression                shift and go to state 18
    conditional_expression         shift and go to state 19

state 33

    (2) program -> function program .

    $end            reduce using rule 2 (program -> function program .)


state 34

    (3) program -> external-declaration program .

    $end            reduce using rule 3 (program -> external-declaration program .)


state 35

    (103) math_expression -> expression PLUS . expression
    (108) math_expression -> expression PLUS . PLUS
    (88) expression -> . BOOLEAN
    (89) expression -> . number
    (90) expression -> . STRING
    (91) expression -> . IDENTIFIER
    (92) expression -> . LETTER
    (93) expression -> . assignment
    (94) expression -> . array_usage
    (95) expression -> . function_call
    (96) expression -> . math_expression
    (97) expression -> . conditional_expression
    (32) number -> . INTEGER
    (33) number -> . FLOATINGPOINT
    (21) assignment -> . IDENTIFIER EQUALS expression
    (22) assignment -> . IDENTIFIER PLUS EQUALS expression
    (23) assignment -> . IDENTIFIER MINUS EQUALS expression
    (34) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (35) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN RPAREN
    (28) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (29) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (103) math_expression -> . expression PLUS expression
    (104) math_expression -> . expression MINUS expression
    (105) math_expression -> . expression TIMES expression
    (106) math_expression -> . expression DIVIDE expression
    (107) math_expression -> . expression MODULUS expression
    (108) math_expression -> . expression PLUS PLUS
    (109) math_expression -> . expression MINUS MINUS
    (110) math_expression -> . PLUS PLUS expression
    (111) math_expression -> . MINUS MINUS expression
    (79) conditional_expression -> . expression ISEQUAL expression
    (80) conditional_expression -> . expression NOT EQUALS expression
    (81) conditional_expression -> . expression LESS expression
    (82) conditional_expression -> . expression LESS EQUALS expression
    (83) conditional_expression -> . expression GREATER expression
    (84) conditional_expression -> . expression GREATER EQUALS expression
    (85) conditional_expression -> . expression AND expression
    (86) conditional_expression -> . expression OR expression
    (87) conditional_expression -> . NOT expression

    PLUS            shift and go to state 65
    BOOLEAN         shift and go to state 13
    STRING          shift and go to state 15
    IDENTIFIER      shift and go to state 62
    LETTER          shift and go to state 16
    INTEGER         shift and go to state 28
    FLOATINGPOINT   shift and go to state 29
    MINUS           shift and go to state 31
    NOT             shift and go to state 32

    expression                     shift and go to state 64
    number                         shift and go to state 14
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 63
    function_call                  shift and go to state 17
    math_expression                shift and go to state 18
    conditional_expression         shift and go to state 19

state 36

    (104) math_expression -> expression MINUS . expression
    (109) math_expression -> expression MINUS . MINUS
    (88) expression -> . BOOLEAN
    (89) expression -> . number
    (90) expression -> . STRING
    (91) expression -> . IDENTIFIER
    (92) expression -> . LETTER
    (93) expression -> . assignment
    (94) expression -> . array_usage
    (95) expression -> . function_call
    (96) expression -> . math_expression
    (97) expression -> . conditional_expression
    (32) number -> . INTEGER
    (33) number -> . FLOATINGPOINT
    (21) assignment -> . IDENTIFIER EQUALS expression
    (22) assignment -> . IDENTIFIER PLUS EQUALS expression
    (23) assignment -> . IDENTIFIER MINUS EQUALS expression
    (34) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (35) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN RPAREN
    (28) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (29) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (103) math_expression -> . expression PLUS expression
    (104) math_expression -> . expression MINUS expression
    (105) math_expression -> . expression TIMES expression
    (106) math_expression -> . expression DIVIDE expression
    (107) math_expression -> . expression MODULUS expression
    (108) math_expression -> . expression PLUS PLUS
    (109) math_expression -> . expression MINUS MINUS
    (110) math_expression -> . PLUS PLUS expression
    (111) math_expression -> . MINUS MINUS expression
    (79) conditional_expression -> . expression ISEQUAL expression
    (80) conditional_expression -> . expression NOT EQUALS expression
    (81) conditional_expression -> . expression LESS expression
    (82) conditional_expression -> . expression LESS EQUALS expression
    (83) conditional_expression -> . expression GREATER expression
    (84) conditional_expression -> . expression GREATER EQUALS expression
    (85) conditional_expression -> . expression AND expression
    (86) conditional_expression -> . expression OR expression
    (87) conditional_expression -> . NOT expression

    MINUS           shift and go to state 67
    BOOLEAN         shift and go to state 13
    STRING          shift and go to state 15
    IDENTIFIER      shift and go to state 62
    LETTER          shift and go to state 16
    INTEGER         shift and go to state 28
    FLOATINGPOINT   shift and go to state 29
    PLUS            shift and go to state 30
    NOT             shift and go to state 32

    expression                     shift and go to state 66
    number                         shift and go to state 14
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 63
    function_call                  shift and go to state 17
    math_expression                shift and go to state 18
    conditional_expression         shift and go to state 19

state 37

    (105) math_expression -> expression TIMES . expression
    (88) expression -> . BOOLEAN
    (89) expression -> . number
    (90) expression -> . STRING
    (91) expression -> . IDENTIFIER
    (92) expression -> . LETTER
    (93) expression -> . assignment
    (94) expression -> . array_usage
    (95) expression -> . function_call
    (96) expression -> . math_expression
    (97) expression -> . conditional_expression
    (32) number -> . INTEGER
    (33) number -> . FLOATINGPOINT
    (21) assignment -> . IDENTIFIER EQUALS expression
    (22) assignment -> . IDENTIFIER PLUS EQUALS expression
    (23) assignment -> . IDENTIFIER MINUS EQUALS expression
    (34) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (35) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN RPAREN
    (28) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (29) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (103) math_expression -> . expression PLUS expression
    (104) math_expression -> . expression MINUS expression
    (105) math_expression -> . expression TIMES expression
    (106) math_expression -> . expression DIVIDE expression
    (107) math_expression -> . expression MODULUS expression
    (108) math_expression -> . expression PLUS PLUS
    (109) math_expression -> . expression MINUS MINUS
    (110) math_expression -> . PLUS PLUS expression
    (111) math_expression -> . MINUS MINUS expression
    (79) conditional_expression -> . expression ISEQUAL expression
    (80) conditional_expression -> . expression NOT EQUALS expression
    (81) conditional_expression -> . expression LESS expression
    (82) conditional_expression -> . expression LESS EQUALS expression
    (83) conditional_expression -> . expression GREATER expression
    (84) conditional_expression -> . expression GREATER EQUALS expression
    (85) conditional_expression -> . expression AND expression
    (86) conditional_expression -> . expression OR expression
    (87) conditional_expression -> . NOT expression

    BOOLEAN         shift and go to state 13
    STRING          shift and go to state 15
    IDENTIFIER      shift and go to state 62
    LETTER          shift and go to state 16
    INTEGER         shift and go to state 28
    FLOATINGPOINT   shift and go to state 29
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    NOT             shift and go to state 32

    expression                     shift and go to state 68
    number                         shift and go to state 14
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 63
    function_call                  shift and go to state 17
    math_expression                shift and go to state 18
    conditional_expression         shift and go to state 19

state 38

    (106) math_expression -> expression DIVIDE . expression
    (88) expression -> . BOOLEAN
    (89) expression -> . number
    (90) expression -> . STRING
    (91) expression -> . IDENTIFIER
    (92) expression -> . LETTER
    (93) expression -> . assignment
    (94) expression -> . array_usage
    (95) expression -> . function_call
    (96) expression -> . math_expression
    (97) expression -> . conditional_expression
    (32) number -> . INTEGER
    (33) number -> . FLOATINGPOINT
    (21) assignment -> . IDENTIFIER EQUALS expression
    (22) assignment -> . IDENTIFIER PLUS EQUALS expression
    (23) assignment -> . IDENTIFIER MINUS EQUALS expression
    (34) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (35) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN RPAREN
    (28) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (29) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (103) math_expression -> . expression PLUS expression
    (104) math_expression -> . expression MINUS expression
    (105) math_expression -> . expression TIMES expression
    (106) math_expression -> . expression DIVIDE expression
    (107) math_expression -> . expression MODULUS expression
    (108) math_expression -> . expression PLUS PLUS
    (109) math_expression -> . expression MINUS MINUS
    (110) math_expression -> . PLUS PLUS expression
    (111) math_expression -> . MINUS MINUS expression
    (79) conditional_expression -> . expression ISEQUAL expression
    (80) conditional_expression -> . expression NOT EQUALS expression
    (81) conditional_expression -> . expression LESS expression
    (82) conditional_expression -> . expression LESS EQUALS expression
    (83) conditional_expression -> . expression GREATER expression
    (84) conditional_expression -> . expression GREATER EQUALS expression
    (85) conditional_expression -> . expression AND expression
    (86) conditional_expression -> . expression OR expression
    (87) conditional_expression -> . NOT expression

    BOOLEAN         shift and go to state 13
    STRING          shift and go to state 15
    IDENTIFIER      shift and go to state 62
    LETTER          shift and go to state 16
    INTEGER         shift and go to state 28
    FLOATINGPOINT   shift and go to state 29
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    NOT             shift and go to state 32

    expression                     shift and go to state 69
    number                         shift and go to state 14
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 63
    function_call                  shift and go to state 17
    math_expression                shift and go to state 18
    conditional_expression         shift and go to state 19

state 39

    (107) math_expression -> expression MODULUS . expression
    (88) expression -> . BOOLEAN
    (89) expression -> . number
    (90) expression -> . STRING
    (91) expression -> . IDENTIFIER
    (92) expression -> . LETTER
    (93) expression -> . assignment
    (94) expression -> . array_usage
    (95) expression -> . function_call
    (96) expression -> . math_expression
    (97) expression -> . conditional_expression
    (32) number -> . INTEGER
    (33) number -> . FLOATINGPOINT
    (21) assignment -> . IDENTIFIER EQUALS expression
    (22) assignment -> . IDENTIFIER PLUS EQUALS expression
    (23) assignment -> . IDENTIFIER MINUS EQUALS expression
    (34) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (35) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN RPAREN
    (28) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (29) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (103) math_expression -> . expression PLUS expression
    (104) math_expression -> . expression MINUS expression
    (105) math_expression -> . expression TIMES expression
    (106) math_expression -> . expression DIVIDE expression
    (107) math_expression -> . expression MODULUS expression
    (108) math_expression -> . expression PLUS PLUS
    (109) math_expression -> . expression MINUS MINUS
    (110) math_expression -> . PLUS PLUS expression
    (111) math_expression -> . MINUS MINUS expression
    (79) conditional_expression -> . expression ISEQUAL expression
    (80) conditional_expression -> . expression NOT EQUALS expression
    (81) conditional_expression -> . expression LESS expression
    (82) conditional_expression -> . expression LESS EQUALS expression
    (83) conditional_expression -> . expression GREATER expression
    (84) conditional_expression -> . expression GREATER EQUALS expression
    (85) conditional_expression -> . expression AND expression
    (86) conditional_expression -> . expression OR expression
    (87) conditional_expression -> . NOT expression

    BOOLEAN         shift and go to state 13
    STRING          shift and go to state 15
    IDENTIFIER      shift and go to state 62
    LETTER          shift and go to state 16
    INTEGER         shift and go to state 28
    FLOATINGPOINT   shift and go to state 29
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    NOT             shift and go to state 32

    expression                     shift and go to state 70
    number                         shift and go to state 14
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 63
    function_call                  shift and go to state 17
    math_expression                shift and go to state 18
    conditional_expression         shift and go to state 19

state 40

    (79) conditional_expression -> expression ISEQUAL . expression
    (88) expression -> . BOOLEAN
    (89) expression -> . number
    (90) expression -> . STRING
    (91) expression -> . IDENTIFIER
    (92) expression -> . LETTER
    (93) expression -> . assignment
    (94) expression -> . array_usage
    (95) expression -> . function_call
    (96) expression -> . math_expression
    (97) expression -> . conditional_expression
    (32) number -> . INTEGER
    (33) number -> . FLOATINGPOINT
    (21) assignment -> . IDENTIFIER EQUALS expression
    (22) assignment -> . IDENTIFIER PLUS EQUALS expression
    (23) assignment -> . IDENTIFIER MINUS EQUALS expression
    (34) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (35) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN RPAREN
    (28) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (29) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (103) math_expression -> . expression PLUS expression
    (104) math_expression -> . expression MINUS expression
    (105) math_expression -> . expression TIMES expression
    (106) math_expression -> . expression DIVIDE expression
    (107) math_expression -> . expression MODULUS expression
    (108) math_expression -> . expression PLUS PLUS
    (109) math_expression -> . expression MINUS MINUS
    (110) math_expression -> . PLUS PLUS expression
    (111) math_expression -> . MINUS MINUS expression
    (79) conditional_expression -> . expression ISEQUAL expression
    (80) conditional_expression -> . expression NOT EQUALS expression
    (81) conditional_expression -> . expression LESS expression
    (82) conditional_expression -> . expression LESS EQUALS expression
    (83) conditional_expression -> . expression GREATER expression
    (84) conditional_expression -> . expression GREATER EQUALS expression
    (85) conditional_expression -> . expression AND expression
    (86) conditional_expression -> . expression OR expression
    (87) conditional_expression -> . NOT expression

    BOOLEAN         shift and go to state 13
    STRING          shift and go to state 15
    IDENTIFIER      shift and go to state 62
    LETTER          shift and go to state 16
    INTEGER         shift and go to state 28
    FLOATINGPOINT   shift and go to state 29
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    NOT             shift and go to state 32

    expression                     shift and go to state 71
    number                         shift and go to state 14
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 63
    function_call                  shift and go to state 17
    math_expression                shift and go to state 18
    conditional_expression         shift and go to state 19

state 41

    (80) conditional_expression -> expression NOT . EQUALS expression

    EQUALS          shift and go to state 72


state 42

    (81) conditional_expression -> expression LESS . expression
    (82) conditional_expression -> expression LESS . EQUALS expression
    (88) expression -> . BOOLEAN
    (89) expression -> . number
    (90) expression -> . STRING
    (91) expression -> . IDENTIFIER
    (92) expression -> . LETTER
    (93) expression -> . assignment
    (94) expression -> . array_usage
    (95) expression -> . function_call
    (96) expression -> . math_expression
    (97) expression -> . conditional_expression
    (32) number -> . INTEGER
    (33) number -> . FLOATINGPOINT
    (21) assignment -> . IDENTIFIER EQUALS expression
    (22) assignment -> . IDENTIFIER PLUS EQUALS expression
    (23) assignment -> . IDENTIFIER MINUS EQUALS expression
    (34) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (35) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN RPAREN
    (28) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (29) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (103) math_expression -> . expression PLUS expression
    (104) math_expression -> . expression MINUS expression
    (105) math_expression -> . expression TIMES expression
    (106) math_expression -> . expression DIVIDE expression
    (107) math_expression -> . expression MODULUS expression
    (108) math_expression -> . expression PLUS PLUS
    (109) math_expression -> . expression MINUS MINUS
    (110) math_expression -> . PLUS PLUS expression
    (111) math_expression -> . MINUS MINUS expression
    (79) conditional_expression -> . expression ISEQUAL expression
    (80) conditional_expression -> . expression NOT EQUALS expression
    (81) conditional_expression -> . expression LESS expression
    (82) conditional_expression -> . expression LESS EQUALS expression
    (83) conditional_expression -> . expression GREATER expression
    (84) conditional_expression -> . expression GREATER EQUALS expression
    (85) conditional_expression -> . expression AND expression
    (86) conditional_expression -> . expression OR expression
    (87) conditional_expression -> . NOT expression

    EQUALS          shift and go to state 74
    BOOLEAN         shift and go to state 13
    STRING          shift and go to state 15
    IDENTIFIER      shift and go to state 62
    LETTER          shift and go to state 16
    INTEGER         shift and go to state 28
    FLOATINGPOINT   shift and go to state 29
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    NOT             shift and go to state 32

    expression                     shift and go to state 73
    number                         shift and go to state 14
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 63
    function_call                  shift and go to state 17
    math_expression                shift and go to state 18
    conditional_expression         shift and go to state 19

state 43

    (83) conditional_expression -> expression GREATER . expression
    (84) conditional_expression -> expression GREATER . EQUALS expression
    (88) expression -> . BOOLEAN
    (89) expression -> . number
    (90) expression -> . STRING
    (91) expression -> . IDENTIFIER
    (92) expression -> . LETTER
    (93) expression -> . assignment
    (94) expression -> . array_usage
    (95) expression -> . function_call
    (96) expression -> . math_expression
    (97) expression -> . conditional_expression
    (32) number -> . INTEGER
    (33) number -> . FLOATINGPOINT
    (21) assignment -> . IDENTIFIER EQUALS expression
    (22) assignment -> . IDENTIFIER PLUS EQUALS expression
    (23) assignment -> . IDENTIFIER MINUS EQUALS expression
    (34) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (35) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN RPAREN
    (28) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (29) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (103) math_expression -> . expression PLUS expression
    (104) math_expression -> . expression MINUS expression
    (105) math_expression -> . expression TIMES expression
    (106) math_expression -> . expression DIVIDE expression
    (107) math_expression -> . expression MODULUS expression
    (108) math_expression -> . expression PLUS PLUS
    (109) math_expression -> . expression MINUS MINUS
    (110) math_expression -> . PLUS PLUS expression
    (111) math_expression -> . MINUS MINUS expression
    (79) conditional_expression -> . expression ISEQUAL expression
    (80) conditional_expression -> . expression NOT EQUALS expression
    (81) conditional_expression -> . expression LESS expression
    (82) conditional_expression -> . expression LESS EQUALS expression
    (83) conditional_expression -> . expression GREATER expression
    (84) conditional_expression -> . expression GREATER EQUALS expression
    (85) conditional_expression -> . expression AND expression
    (86) conditional_expression -> . expression OR expression
    (87) conditional_expression -> . NOT expression

    EQUALS          shift and go to state 76
    BOOLEAN         shift and go to state 13
    STRING          shift and go to state 15
    IDENTIFIER      shift and go to state 62
    LETTER          shift and go to state 16
    INTEGER         shift and go to state 28
    FLOATINGPOINT   shift and go to state 29
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    NOT             shift and go to state 32

    expression                     shift and go to state 75
    number                         shift and go to state 14
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 63
    function_call                  shift and go to state 17
    math_expression                shift and go to state 18
    conditional_expression         shift and go to state 19

state 44

    (85) conditional_expression -> expression AND . expression
    (88) expression -> . BOOLEAN
    (89) expression -> . number
    (90) expression -> . STRING
    (91) expression -> . IDENTIFIER
    (92) expression -> . LETTER
    (93) expression -> . assignment
    (94) expression -> . array_usage
    (95) expression -> . function_call
    (96) expression -> . math_expression
    (97) expression -> . conditional_expression
    (32) number -> . INTEGER
    (33) number -> . FLOATINGPOINT
    (21) assignment -> . IDENTIFIER EQUALS expression
    (22) assignment -> . IDENTIFIER PLUS EQUALS expression
    (23) assignment -> . IDENTIFIER MINUS EQUALS expression
    (34) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (35) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN RPAREN
    (28) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (29) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (103) math_expression -> . expression PLUS expression
    (104) math_expression -> . expression MINUS expression
    (105) math_expression -> . expression TIMES expression
    (106) math_expression -> . expression DIVIDE expression
    (107) math_expression -> . expression MODULUS expression
    (108) math_expression -> . expression PLUS PLUS
    (109) math_expression -> . expression MINUS MINUS
    (110) math_expression -> . PLUS PLUS expression
    (111) math_expression -> . MINUS MINUS expression
    (79) conditional_expression -> . expression ISEQUAL expression
    (80) conditional_expression -> . expression NOT EQUALS expression
    (81) conditional_expression -> . expression LESS expression
    (82) conditional_expression -> . expression LESS EQUALS expression
    (83) conditional_expression -> . expression GREATER expression
    (84) conditional_expression -> . expression GREATER EQUALS expression
    (85) conditional_expression -> . expression AND expression
    (86) conditional_expression -> . expression OR expression
    (87) conditional_expression -> . NOT expression

    BOOLEAN         shift and go to state 13
    STRING          shift and go to state 15
    IDENTIFIER      shift and go to state 62
    LETTER          shift and go to state 16
    INTEGER         shift and go to state 28
    FLOATINGPOINT   shift and go to state 29
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    NOT             shift and go to state 32

    expression                     shift and go to state 77
    number                         shift and go to state 14
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 63
    function_call                  shift and go to state 17
    math_expression                shift and go to state 18
    conditional_expression         shift and go to state 19

state 45

    (86) conditional_expression -> expression OR . expression
    (88) expression -> . BOOLEAN
    (89) expression -> . number
    (90) expression -> . STRING
    (91) expression -> . IDENTIFIER
    (92) expression -> . LETTER
    (93) expression -> . assignment
    (94) expression -> . array_usage
    (95) expression -> . function_call
    (96) expression -> . math_expression
    (97) expression -> . conditional_expression
    (32) number -> . INTEGER
    (33) number -> . FLOATINGPOINT
    (21) assignment -> . IDENTIFIER EQUALS expression
    (22) assignment -> . IDENTIFIER PLUS EQUALS expression
    (23) assignment -> . IDENTIFIER MINUS EQUALS expression
    (34) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (35) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN RPAREN
    (28) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (29) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (103) math_expression -> . expression PLUS expression
    (104) math_expression -> . expression MINUS expression
    (105) math_expression -> . expression TIMES expression
    (106) math_expression -> . expression DIVIDE expression
    (107) math_expression -> . expression MODULUS expression
    (108) math_expression -> . expression PLUS PLUS
    (109) math_expression -> . expression MINUS MINUS
    (110) math_expression -> . PLUS PLUS expression
    (111) math_expression -> . MINUS MINUS expression
    (79) conditional_expression -> . expression ISEQUAL expression
    (80) conditional_expression -> . expression NOT EQUALS expression
    (81) conditional_expression -> . expression LESS expression
    (82) conditional_expression -> . expression LESS EQUALS expression
    (83) conditional_expression -> . expression GREATER expression
    (84) conditional_expression -> . expression GREATER EQUALS expression
    (85) conditional_expression -> . expression AND expression
    (86) conditional_expression -> . expression OR expression
    (87) conditional_expression -> . NOT expression

    BOOLEAN         shift and go to state 13
    STRING          shift and go to state 15
    IDENTIFIER      shift and go to state 62
    LETTER          shift and go to state 16
    INTEGER         shift and go to state 28
    FLOATINGPOINT   shift and go to state 29
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    NOT             shift and go to state 32

    expression                     shift and go to state 78
    number                         shift and go to state 14
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 63
    function_call                  shift and go to state 17
    math_expression                shift and go to state 18
    conditional_expression         shift and go to state 19

state 46

    (36) function -> type IDENTIFIER . LPAREN argument_list_option RPAREN compound_statement
    (21) assignment -> IDENTIFIER . EQUALS expression
    (22) assignment -> IDENTIFIER . PLUS EQUALS expression
    (23) assignment -> IDENTIFIER . MINUS EQUALS expression
    (34) array_usage -> IDENTIFIER . LBRACKET expression RBRACKET
    (35) array_usage -> IDENTIFIER . LBRACKET expression RBRACKET LBRACE elements RBRACE

    LPAREN          shift and go to state 79
    EQUALS          shift and go to state 50
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    LBRACKET        shift and go to state 49


state 47

    (6) external-declaration -> type assignment . SEMICOLON

    SEMICOLON       shift and go to state 80


state 48

    (8) external-declaration -> type array_usage . SEMICOLON

    SEMICOLON       shift and go to state 81


state 49

    (34) array_usage -> IDENTIFIER LBRACKET . expression RBRACKET
    (35) array_usage -> IDENTIFIER LBRACKET . expression RBRACKET LBRACE elements RBRACE
    (88) expression -> . BOOLEAN
    (89) expression -> . number
    (90) expression -> . STRING
    (91) expression -> . IDENTIFIER
    (92) expression -> . LETTER
    (93) expression -> . assignment
    (94) expression -> . array_usage
    (95) expression -> . function_call
    (96) expression -> . math_expression
    (97) expression -> . conditional_expression
    (32) number -> . INTEGER
    (33) number -> . FLOATINGPOINT
    (21) assignment -> . IDENTIFIER EQUALS expression
    (22) assignment -> . IDENTIFIER PLUS EQUALS expression
    (23) assignment -> . IDENTIFIER MINUS EQUALS expression
    (34) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (35) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN RPAREN
    (28) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (29) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (103) math_expression -> . expression PLUS expression
    (104) math_expression -> . expression MINUS expression
    (105) math_expression -> . expression TIMES expression
    (106) math_expression -> . expression DIVIDE expression
    (107) math_expression -> . expression MODULUS expression
    (108) math_expression -> . expression PLUS PLUS
    (109) math_expression -> . expression MINUS MINUS
    (110) math_expression -> . PLUS PLUS expression
    (111) math_expression -> . MINUS MINUS expression
    (79) conditional_expression -> . expression ISEQUAL expression
    (80) conditional_expression -> . expression NOT EQUALS expression
    (81) conditional_expression -> . expression LESS expression
    (82) conditional_expression -> . expression LESS EQUALS expression
    (83) conditional_expression -> . expression GREATER expression
    (84) conditional_expression -> . expression GREATER EQUALS expression
    (85) conditional_expression -> . expression AND expression
    (86) conditional_expression -> . expression OR expression
    (87) conditional_expression -> . NOT expression

    BOOLEAN         shift and go to state 13
    STRING          shift and go to state 15
    IDENTIFIER      shift and go to state 62
    LETTER          shift and go to state 16
    INTEGER         shift and go to state 28
    FLOATINGPOINT   shift and go to state 29
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    NOT             shift and go to state 32

    expression                     shift and go to state 82
    number                         shift and go to state 14
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 63
    function_call                  shift and go to state 17
    math_expression                shift and go to state 18
    conditional_expression         shift and go to state 19

state 50

    (21) assignment -> IDENTIFIER EQUALS . expression
    (88) expression -> . BOOLEAN
    (89) expression -> . number
    (90) expression -> . STRING
    (91) expression -> . IDENTIFIER
    (92) expression -> . LETTER
    (93) expression -> . assignment
    (94) expression -> . array_usage
    (95) expression -> . function_call
    (96) expression -> . math_expression
    (97) expression -> . conditional_expression
    (32) number -> . INTEGER
    (33) number -> . FLOATINGPOINT
    (21) assignment -> . IDENTIFIER EQUALS expression
    (22) assignment -> . IDENTIFIER PLUS EQUALS expression
    (23) assignment -> . IDENTIFIER MINUS EQUALS expression
    (34) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (35) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN RPAREN
    (28) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (29) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (103) math_expression -> . expression PLUS expression
    (104) math_expression -> . expression MINUS expression
    (105) math_expression -> . expression TIMES expression
    (106) math_expression -> . expression DIVIDE expression
    (107) math_expression -> . expression MODULUS expression
    (108) math_expression -> . expression PLUS PLUS
    (109) math_expression -> . expression MINUS MINUS
    (110) math_expression -> . PLUS PLUS expression
    (111) math_expression -> . MINUS MINUS expression
    (79) conditional_expression -> . expression ISEQUAL expression
    (80) conditional_expression -> . expression NOT EQUALS expression
    (81) conditional_expression -> . expression LESS expression
    (82) conditional_expression -> . expression LESS EQUALS expression
    (83) conditional_expression -> . expression GREATER expression
    (84) conditional_expression -> . expression GREATER EQUALS expression
    (85) conditional_expression -> . expression AND expression
    (86) conditional_expression -> . expression OR expression
    (87) conditional_expression -> . NOT expression

    BOOLEAN         shift and go to state 13
    STRING          shift and go to state 15
    IDENTIFIER      shift and go to state 62
    LETTER          shift and go to state 16
    INTEGER         shift and go to state 28
    FLOATINGPOINT   shift and go to state 29
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    NOT             shift and go to state 32

    expression                     shift and go to state 83
    number                         shift and go to state 14
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 63
    function_call                  shift and go to state 17
    math_expression                shift and go to state 18
    conditional_expression         shift and go to state 19

state 51

    (22) assignment -> IDENTIFIER PLUS . EQUALS expression

    EQUALS          shift and go to state 84


state 52

    (23) assignment -> IDENTIFIER MINUS . EQUALS expression

    EQUALS          shift and go to state 85


state 53

    (27) function_call -> IDENTIFIER LPAREN . RPAREN
    (28) function_call -> IDENTIFIER LPAREN . expression RPAREN
    (29) function_call -> IDENTIFIER LPAREN . elements RPAREN
    (88) expression -> . BOOLEAN
    (89) expression -> . number
    (90) expression -> . STRING
    (91) expression -> . IDENTIFIER
    (92) expression -> . LETTER
    (93) expression -> . assignment
    (94) expression -> . array_usage
    (95) expression -> . function_call
    (96) expression -> . math_expression
    (97) expression -> . conditional_expression
    (30) elements -> . COMMA expression
    (31) elements -> . COMMA expression elements
    (32) number -> . INTEGER
    (33) number -> . FLOATINGPOINT
    (21) assignment -> . IDENTIFIER EQUALS expression
    (22) assignment -> . IDENTIFIER PLUS EQUALS expression
    (23) assignment -> . IDENTIFIER MINUS EQUALS expression
    (34) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (35) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN RPAREN
    (28) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (29) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (103) math_expression -> . expression PLUS expression
    (104) math_expression -> . expression MINUS expression
    (105) math_expression -> . expression TIMES expression
    (106) math_expression -> . expression DIVIDE expression
    (107) math_expression -> . expression MODULUS expression
    (108) math_expression -> . expression PLUS PLUS
    (109) math_expression -> . expression MINUS MINUS
    (110) math_expression -> . PLUS PLUS expression
    (111) math_expression -> . MINUS MINUS expression
    (79) conditional_expression -> . expression ISEQUAL expression
    (80) conditional_expression -> . expression NOT EQUALS expression
    (81) conditional_expression -> . expression LESS expression
    (82) conditional_expression -> . expression LESS EQUALS expression
    (83) conditional_expression -> . expression GREATER expression
    (84) conditional_expression -> . expression GREATER EQUALS expression
    (85) conditional_expression -> . expression AND expression
    (86) conditional_expression -> . expression OR expression
    (87) conditional_expression -> . NOT expression

    RPAREN          shift and go to state 86
    BOOLEAN         shift and go to state 13
    STRING          shift and go to state 15
    IDENTIFIER      shift and go to state 62
    LETTER          shift and go to state 16
    COMMA           shift and go to state 89
    INTEGER         shift and go to state 28
    FLOATINGPOINT   shift and go to state 29
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    NOT             shift and go to state 32

    expression                     shift and go to state 87
    elements                       shift and go to state 88
    number                         shift and go to state 14
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 63
    function_call                  shift and go to state 17
    math_expression                shift and go to state 18
    conditional_expression         shift and go to state 19

state 54

    (7) external-declaration -> array_usage SEMICOLON .

    BOOLEAN         reduce using rule 7 (external-declaration -> array_usage SEMICOLON .)
    STRING          reduce using rule 7 (external-declaration -> array_usage SEMICOLON .)
    IDENTIFIER      reduce using rule 7 (external-declaration -> array_usage SEMICOLON .)
    LETTER          reduce using rule 7 (external-declaration -> array_usage SEMICOLON .)
    BOOL            reduce using rule 7 (external-declaration -> array_usage SEMICOLON .)
    INT             reduce using rule 7 (external-declaration -> array_usage SEMICOLON .)
    FLOAT           reduce using rule 7 (external-declaration -> array_usage SEMICOLON .)
    CHAR            reduce using rule 7 (external-declaration -> array_usage SEMICOLON .)
    VOID            reduce using rule 7 (external-declaration -> array_usage SEMICOLON .)
    POUND           reduce using rule 7 (external-declaration -> array_usage SEMICOLON .)
    USING           reduce using rule 7 (external-declaration -> array_usage SEMICOLON .)
    STRUCT          reduce using rule 7 (external-declaration -> array_usage SEMICOLON .)
    INTEGER         reduce using rule 7 (external-declaration -> array_usage SEMICOLON .)
    FLOATINGPOINT   reduce using rule 7 (external-declaration -> array_usage SEMICOLON .)
    PLUS            reduce using rule 7 (external-declaration -> array_usage SEMICOLON .)
    MINUS           reduce using rule 7 (external-declaration -> array_usage SEMICOLON .)
    NOT             reduce using rule 7 (external-declaration -> array_usage SEMICOLON .)
    $end            reduce using rule 7 (external-declaration -> array_usage SEMICOLON .)


state 55

    (112) macro_definition -> POUND DEFINE . IDENTIFIER assignment

    IDENTIFIER      shift and go to state 90


state 56

    (113) file_inclusion -> POUND INCLUDE . LESS HEADER GREATER
    (114) file_inclusion -> POUND INCLUDE . QUOTE HEADER QUOTE
    (115) file_inclusion -> POUND INCLUDE . LESS IDENTIFIER GREATER
    (116) file_inclusion -> POUND INCLUDE . QUOTE IDENTIFIER QUOTE

    LESS            shift and go to state 91
    QUOTE           shift and go to state 92


state 57

    (55) namespace_statement -> USING NAMESPACE . IDENTIFIER SEMICOLON

    IDENTIFIER      shift and go to state 93


state 58

    (51) struct -> STRUCT IDENTIFIER . LBRACE declaration_list RBRACE
    (52) struct -> STRUCT IDENTIFIER . LBRACE declaration_list RBRACE IDENTIFIER SEMICOLON

    LBRACE          shift and go to state 94


state 59

    (110) math_expression -> PLUS PLUS . expression
    (88) expression -> . BOOLEAN
    (89) expression -> . number
    (90) expression -> . STRING
    (91) expression -> . IDENTIFIER
    (92) expression -> . LETTER
    (93) expression -> . assignment
    (94) expression -> . array_usage
    (95) expression -> . function_call
    (96) expression -> . math_expression
    (97) expression -> . conditional_expression
    (32) number -> . INTEGER
    (33) number -> . FLOATINGPOINT
    (21) assignment -> . IDENTIFIER EQUALS expression
    (22) assignment -> . IDENTIFIER PLUS EQUALS expression
    (23) assignment -> . IDENTIFIER MINUS EQUALS expression
    (34) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (35) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN RPAREN
    (28) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (29) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (103) math_expression -> . expression PLUS expression
    (104) math_expression -> . expression MINUS expression
    (105) math_expression -> . expression TIMES expression
    (106) math_expression -> . expression DIVIDE expression
    (107) math_expression -> . expression MODULUS expression
    (108) math_expression -> . expression PLUS PLUS
    (109) math_expression -> . expression MINUS MINUS
    (110) math_expression -> . PLUS PLUS expression
    (111) math_expression -> . MINUS MINUS expression
    (79) conditional_expression -> . expression ISEQUAL expression
    (80) conditional_expression -> . expression NOT EQUALS expression
    (81) conditional_expression -> . expression LESS expression
    (82) conditional_expression -> . expression LESS EQUALS expression
    (83) conditional_expression -> . expression GREATER expression
    (84) conditional_expression -> . expression GREATER EQUALS expression
    (85) conditional_expression -> . expression AND expression
    (86) conditional_expression -> . expression OR expression
    (87) conditional_expression -> . NOT expression

    BOOLEAN         shift and go to state 13
    STRING          shift and go to state 15
    IDENTIFIER      shift and go to state 62
    LETTER          shift and go to state 16
    INTEGER         shift and go to state 28
    FLOATINGPOINT   shift and go to state 29
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    NOT             shift and go to state 32

    expression                     shift and go to state 95
    number                         shift and go to state 14
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 63
    function_call                  shift and go to state 17
    math_expression                shift and go to state 18
    conditional_expression         shift and go to state 19

state 60

    (111) math_expression -> MINUS MINUS . expression
    (88) expression -> . BOOLEAN
    (89) expression -> . number
    (90) expression -> . STRING
    (91) expression -> . IDENTIFIER
    (92) expression -> . LETTER
    (93) expression -> . assignment
    (94) expression -> . array_usage
    (95) expression -> . function_call
    (96) expression -> . math_expression
    (97) expression -> . conditional_expression
    (32) number -> . INTEGER
    (33) number -> . FLOATINGPOINT
    (21) assignment -> . IDENTIFIER EQUALS expression
    (22) assignment -> . IDENTIFIER PLUS EQUALS expression
    (23) assignment -> . IDENTIFIER MINUS EQUALS expression
    (34) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (35) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN RPAREN
    (28) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (29) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (103) math_expression -> . expression PLUS expression
    (104) math_expression -> . expression MINUS expression
    (105) math_expression -> . expression TIMES expression
    (106) math_expression -> . expression DIVIDE expression
    (107) math_expression -> . expression MODULUS expression
    (108) math_expression -> . expression PLUS PLUS
    (109) math_expression -> . expression MINUS MINUS
    (110) math_expression -> . PLUS PLUS expression
    (111) math_expression -> . MINUS MINUS expression
    (79) conditional_expression -> . expression ISEQUAL expression
    (80) conditional_expression -> . expression NOT EQUALS expression
    (81) conditional_expression -> . expression LESS expression
    (82) conditional_expression -> . expression LESS EQUALS expression
    (83) conditional_expression -> . expression GREATER expression
    (84) conditional_expression -> . expression GREATER EQUALS expression
    (85) conditional_expression -> . expression AND expression
    (86) conditional_expression -> . expression OR expression
    (87) conditional_expression -> . NOT expression

    BOOLEAN         shift and go to state 13
    STRING          shift and go to state 15
    IDENTIFIER      shift and go to state 62
    LETTER          shift and go to state 16
    INTEGER         shift and go to state 28
    FLOATINGPOINT   shift and go to state 29
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    NOT             shift and go to state 32

    expression                     shift and go to state 96
    number                         shift and go to state 14
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 63
    function_call                  shift and go to state 17
    math_expression                shift and go to state 18
    conditional_expression         shift and go to state 19

state 61

    (87) conditional_expression -> NOT expression .
    (103) math_expression -> expression . PLUS expression
    (104) math_expression -> expression . MINUS expression
    (105) math_expression -> expression . TIMES expression
    (106) math_expression -> expression . DIVIDE expression
    (107) math_expression -> expression . MODULUS expression
    (108) math_expression -> expression . PLUS PLUS
    (109) math_expression -> expression . MINUS MINUS
    (79) conditional_expression -> expression . ISEQUAL expression
    (80) conditional_expression -> expression . NOT EQUALS expression
    (81) conditional_expression -> expression . LESS expression
    (82) conditional_expression -> expression . LESS EQUALS expression
    (83) conditional_expression -> expression . GREATER expression
    (84) conditional_expression -> expression . GREATER EQUALS expression
    (85) conditional_expression -> expression . AND expression
    (86) conditional_expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULUS resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    $end            reduce using rule 87 (conditional_expression -> NOT expression .)
    RBRACKET        reduce using rule 87 (conditional_expression -> NOT expression .)
    SEMICOLON       reduce using rule 87 (conditional_expression -> NOT expression .)
    RPAREN          reduce using rule 87 (conditional_expression -> NOT expression .)
    COMMA           reduce using rule 87 (conditional_expression -> NOT expression .)
    RBRACE          reduce using rule 87 (conditional_expression -> NOT expression .)
    BOOLEAN         reduce using rule 87 (conditional_expression -> NOT expression .)
    STRING          reduce using rule 87 (conditional_expression -> NOT expression .)
    IDENTIFIER      reduce using rule 87 (conditional_expression -> NOT expression .)
    LETTER          reduce using rule 87 (conditional_expression -> NOT expression .)
    BOOL            reduce using rule 87 (conditional_expression -> NOT expression .)
    INT             reduce using rule 87 (conditional_expression -> NOT expression .)
    FLOAT           reduce using rule 87 (conditional_expression -> NOT expression .)
    CHAR            reduce using rule 87 (conditional_expression -> NOT expression .)
    VOID            reduce using rule 87 (conditional_expression -> NOT expression .)
    POUND           reduce using rule 87 (conditional_expression -> NOT expression .)
    USING           reduce using rule 87 (conditional_expression -> NOT expression .)
    STRUCT          reduce using rule 87 (conditional_expression -> NOT expression .)
    INTEGER         reduce using rule 87 (conditional_expression -> NOT expression .)
    FLOATINGPOINT   reduce using rule 87 (conditional_expression -> NOT expression .)
    EQUALS          reduce using rule 87 (conditional_expression -> NOT expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULUS         shift and go to state 39
    ISEQUAL         shift and go to state 40
    NOT             shift and go to state 41
    LESS            shift and go to state 42
    GREATER         shift and go to state 43
    AND             shift and go to state 44
    OR              shift and go to state 45

  ! PLUS            [ reduce using rule 87 (conditional_expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 87 (conditional_expression -> NOT expression .) ]
  ! TIMES           [ reduce using rule 87 (conditional_expression -> NOT expression .) ]
  ! DIVIDE          [ reduce using rule 87 (conditional_expression -> NOT expression .) ]
  ! MODULUS         [ reduce using rule 87 (conditional_expression -> NOT expression .) ]
  ! ISEQUAL         [ reduce using rule 87 (conditional_expression -> NOT expression .) ]
  ! NOT             [ reduce using rule 87 (conditional_expression -> NOT expression .) ]
  ! LESS            [ reduce using rule 87 (conditional_expression -> NOT expression .) ]
  ! GREATER         [ reduce using rule 87 (conditional_expression -> NOT expression .) ]
  ! AND             [ reduce using rule 87 (conditional_expression -> NOT expression .) ]
  ! OR              [ reduce using rule 87 (conditional_expression -> NOT expression .) ]


state 62

    (91) expression -> IDENTIFIER .
    (21) assignment -> IDENTIFIER . EQUALS expression
    (22) assignment -> IDENTIFIER . PLUS EQUALS expression
    (23) assignment -> IDENTIFIER . MINUS EQUALS expression
    (34) array_usage -> IDENTIFIER . LBRACKET expression RBRACKET
    (35) array_usage -> IDENTIFIER . LBRACKET expression RBRACKET LBRACE elements RBRACE
    (27) function_call -> IDENTIFIER . LPAREN RPAREN
    (28) function_call -> IDENTIFIER . LPAREN expression RPAREN
    (29) function_call -> IDENTIFIER . LPAREN elements RPAREN

  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    TIMES           reduce using rule 91 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 91 (expression -> IDENTIFIER .)
    MODULUS         reduce using rule 91 (expression -> IDENTIFIER .)
    ISEQUAL         reduce using rule 91 (expression -> IDENTIFIER .)
    NOT             reduce using rule 91 (expression -> IDENTIFIER .)
    LESS            reduce using rule 91 (expression -> IDENTIFIER .)
    GREATER         reduce using rule 91 (expression -> IDENTIFIER .)
    AND             reduce using rule 91 (expression -> IDENTIFIER .)
    OR              reduce using rule 91 (expression -> IDENTIFIER .)
    $end            reduce using rule 91 (expression -> IDENTIFIER .)
    RBRACKET        reduce using rule 91 (expression -> IDENTIFIER .)
    SEMICOLON       reduce using rule 91 (expression -> IDENTIFIER .)
    RPAREN          reduce using rule 91 (expression -> IDENTIFIER .)
    COMMA           reduce using rule 91 (expression -> IDENTIFIER .)
    RBRACE          reduce using rule 91 (expression -> IDENTIFIER .)
    BOOLEAN         reduce using rule 91 (expression -> IDENTIFIER .)
    STRING          reduce using rule 91 (expression -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 91 (expression -> IDENTIFIER .)
    LETTER          reduce using rule 91 (expression -> IDENTIFIER .)
    BOOL            reduce using rule 91 (expression -> IDENTIFIER .)
    INT             reduce using rule 91 (expression -> IDENTIFIER .)
    FLOAT           reduce using rule 91 (expression -> IDENTIFIER .)
    CHAR            reduce using rule 91 (expression -> IDENTIFIER .)
    VOID            reduce using rule 91 (expression -> IDENTIFIER .)
    POUND           reduce using rule 91 (expression -> IDENTIFIER .)
    USING           reduce using rule 91 (expression -> IDENTIFIER .)
    STRUCT          reduce using rule 91 (expression -> IDENTIFIER .)
    INTEGER         reduce using rule 91 (expression -> IDENTIFIER .)
    FLOATINGPOINT   reduce using rule 91 (expression -> IDENTIFIER .)
    EQUALS          shift and go to state 50
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    LBRACKET        shift and go to state 49
    LPAREN          shift and go to state 53

  ! PLUS            [ reduce using rule 91 (expression -> IDENTIFIER .) ]
  ! MINUS           [ reduce using rule 91 (expression -> IDENTIFIER .) ]
  ! EQUALS          [ reduce using rule 91 (expression -> IDENTIFIER .) ]


state 63

    (94) expression -> array_usage .

    PLUS            reduce using rule 94 (expression -> array_usage .)
    MINUS           reduce using rule 94 (expression -> array_usage .)
    TIMES           reduce using rule 94 (expression -> array_usage .)
    DIVIDE          reduce using rule 94 (expression -> array_usage .)
    MODULUS         reduce using rule 94 (expression -> array_usage .)
    ISEQUAL         reduce using rule 94 (expression -> array_usage .)
    NOT             reduce using rule 94 (expression -> array_usage .)
    LESS            reduce using rule 94 (expression -> array_usage .)
    GREATER         reduce using rule 94 (expression -> array_usage .)
    AND             reduce using rule 94 (expression -> array_usage .)
    OR              reduce using rule 94 (expression -> array_usage .)
    $end            reduce using rule 94 (expression -> array_usage .)
    RBRACKET        reduce using rule 94 (expression -> array_usage .)
    SEMICOLON       reduce using rule 94 (expression -> array_usage .)
    RPAREN          reduce using rule 94 (expression -> array_usage .)
    COMMA           reduce using rule 94 (expression -> array_usage .)
    RBRACE          reduce using rule 94 (expression -> array_usage .)
    BOOLEAN         reduce using rule 94 (expression -> array_usage .)
    STRING          reduce using rule 94 (expression -> array_usage .)
    IDENTIFIER      reduce using rule 94 (expression -> array_usage .)
    LETTER          reduce using rule 94 (expression -> array_usage .)
    BOOL            reduce using rule 94 (expression -> array_usage .)
    INT             reduce using rule 94 (expression -> array_usage .)
    FLOAT           reduce using rule 94 (expression -> array_usage .)
    CHAR            reduce using rule 94 (expression -> array_usage .)
    VOID            reduce using rule 94 (expression -> array_usage .)
    POUND           reduce using rule 94 (expression -> array_usage .)
    USING           reduce using rule 94 (expression -> array_usage .)
    STRUCT          reduce using rule 94 (expression -> array_usage .)
    INTEGER         reduce using rule 94 (expression -> array_usage .)
    FLOATINGPOINT   reduce using rule 94 (expression -> array_usage .)
    EQUALS          reduce using rule 94 (expression -> array_usage .)


state 64

    (103) math_expression -> expression PLUS expression .
    (103) math_expression -> expression . PLUS expression
    (104) math_expression -> expression . MINUS expression
    (105) math_expression -> expression . TIMES expression
    (106) math_expression -> expression . DIVIDE expression
    (107) math_expression -> expression . MODULUS expression
    (108) math_expression -> expression . PLUS PLUS
    (109) math_expression -> expression . MINUS MINUS
    (79) conditional_expression -> expression . ISEQUAL expression
    (80) conditional_expression -> expression . NOT EQUALS expression
    (81) conditional_expression -> expression . LESS expression
    (82) conditional_expression -> expression . LESS EQUALS expression
    (83) conditional_expression -> expression . GREATER expression
    (84) conditional_expression -> expression . GREATER EQUALS expression
    (85) conditional_expression -> expression . AND expression
    (86) conditional_expression -> expression . OR expression

    PLUS            reduce using rule 103 (math_expression -> expression PLUS expression .)
    MINUS           reduce using rule 103 (math_expression -> expression PLUS expression .)
    MODULUS         reduce using rule 103 (math_expression -> expression PLUS expression .)
    ISEQUAL         reduce using rule 103 (math_expression -> expression PLUS expression .)
    NOT             reduce using rule 103 (math_expression -> expression PLUS expression .)
    LESS            reduce using rule 103 (math_expression -> expression PLUS expression .)
    GREATER         reduce using rule 103 (math_expression -> expression PLUS expression .)
    AND             reduce using rule 103 (math_expression -> expression PLUS expression .)
    OR              reduce using rule 103 (math_expression -> expression PLUS expression .)
    $end            reduce using rule 103 (math_expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 103 (math_expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 103 (math_expression -> expression PLUS expression .)
    RPAREN          reduce using rule 103 (math_expression -> expression PLUS expression .)
    COMMA           reduce using rule 103 (math_expression -> expression PLUS expression .)
    RBRACE          reduce using rule 103 (math_expression -> expression PLUS expression .)
    BOOLEAN         reduce using rule 103 (math_expression -> expression PLUS expression .)
    STRING          reduce using rule 103 (math_expression -> expression PLUS expression .)
    IDENTIFIER      reduce using rule 103 (math_expression -> expression PLUS expression .)
    LETTER          reduce using rule 103 (math_expression -> expression PLUS expression .)
    BOOL            reduce using rule 103 (math_expression -> expression PLUS expression .)
    INT             reduce using rule 103 (math_expression -> expression PLUS expression .)
    FLOAT           reduce using rule 103 (math_expression -> expression PLUS expression .)
    CHAR            reduce using rule 103 (math_expression -> expression PLUS expression .)
    VOID            reduce using rule 103 (math_expression -> expression PLUS expression .)
    POUND           reduce using rule 103 (math_expression -> expression PLUS expression .)
    USING           reduce using rule 103 (math_expression -> expression PLUS expression .)
    STRUCT          reduce using rule 103 (math_expression -> expression PLUS expression .)
    INTEGER         reduce using rule 103 (math_expression -> expression PLUS expression .)
    FLOATINGPOINT   reduce using rule 103 (math_expression -> expression PLUS expression .)
    EQUALS          reduce using rule 103 (math_expression -> expression PLUS expression .)
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38

  ! TIMES           [ reduce using rule 103 (math_expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 103 (math_expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 35 ]
  ! MINUS           [ shift and go to state 36 ]
  ! MODULUS         [ shift and go to state 39 ]
  ! ISEQUAL         [ shift and go to state 40 ]
  ! NOT             [ shift and go to state 41 ]
  ! LESS            [ shift and go to state 42 ]
  ! GREATER         [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]
  ! OR              [ shift and go to state 45 ]


state 65

    (108) math_expression -> expression PLUS PLUS .
    (110) math_expression -> PLUS . PLUS expression

    PLUS            reduce using rule 108 (math_expression -> expression PLUS PLUS .)
    MINUS           reduce using rule 108 (math_expression -> expression PLUS PLUS .)
    TIMES           reduce using rule 108 (math_expression -> expression PLUS PLUS .)
    DIVIDE          reduce using rule 108 (math_expression -> expression PLUS PLUS .)
    MODULUS         reduce using rule 108 (math_expression -> expression PLUS PLUS .)
    ISEQUAL         reduce using rule 108 (math_expression -> expression PLUS PLUS .)
    NOT             reduce using rule 108 (math_expression -> expression PLUS PLUS .)
    LESS            reduce using rule 108 (math_expression -> expression PLUS PLUS .)
    GREATER         reduce using rule 108 (math_expression -> expression PLUS PLUS .)
    AND             reduce using rule 108 (math_expression -> expression PLUS PLUS .)
    OR              reduce using rule 108 (math_expression -> expression PLUS PLUS .)
    $end            reduce using rule 108 (math_expression -> expression PLUS PLUS .)
    RBRACKET        reduce using rule 108 (math_expression -> expression PLUS PLUS .)
    SEMICOLON       reduce using rule 108 (math_expression -> expression PLUS PLUS .)
    RPAREN          reduce using rule 108 (math_expression -> expression PLUS PLUS .)
    COMMA           reduce using rule 108 (math_expression -> expression PLUS PLUS .)
    RBRACE          reduce using rule 108 (math_expression -> expression PLUS PLUS .)
    BOOLEAN         reduce using rule 108 (math_expression -> expression PLUS PLUS .)
    STRING          reduce using rule 108 (math_expression -> expression PLUS PLUS .)
    IDENTIFIER      reduce using rule 108 (math_expression -> expression PLUS PLUS .)
    LETTER          reduce using rule 108 (math_expression -> expression PLUS PLUS .)
    BOOL            reduce using rule 108 (math_expression -> expression PLUS PLUS .)
    INT             reduce using rule 108 (math_expression -> expression PLUS PLUS .)
    FLOAT           reduce using rule 108 (math_expression -> expression PLUS PLUS .)
    CHAR            reduce using rule 108 (math_expression -> expression PLUS PLUS .)
    VOID            reduce using rule 108 (math_expression -> expression PLUS PLUS .)
    POUND           reduce using rule 108 (math_expression -> expression PLUS PLUS .)
    USING           reduce using rule 108 (math_expression -> expression PLUS PLUS .)
    STRUCT          reduce using rule 108 (math_expression -> expression PLUS PLUS .)
    INTEGER         reduce using rule 108 (math_expression -> expression PLUS PLUS .)
    FLOATINGPOINT   reduce using rule 108 (math_expression -> expression PLUS PLUS .)
    EQUALS          reduce using rule 108 (math_expression -> expression PLUS PLUS .)

  ! PLUS            [ shift and go to state 59 ]


state 66

    (104) math_expression -> expression MINUS expression .
    (103) math_expression -> expression . PLUS expression
    (104) math_expression -> expression . MINUS expression
    (105) math_expression -> expression . TIMES expression
    (106) math_expression -> expression . DIVIDE expression
    (107) math_expression -> expression . MODULUS expression
    (108) math_expression -> expression . PLUS PLUS
    (109) math_expression -> expression . MINUS MINUS
    (79) conditional_expression -> expression . ISEQUAL expression
    (80) conditional_expression -> expression . NOT EQUALS expression
    (81) conditional_expression -> expression . LESS expression
    (82) conditional_expression -> expression . LESS EQUALS expression
    (83) conditional_expression -> expression . GREATER expression
    (84) conditional_expression -> expression . GREATER EQUALS expression
    (85) conditional_expression -> expression . AND expression
    (86) conditional_expression -> expression . OR expression

    PLUS            reduce using rule 104 (math_expression -> expression MINUS expression .)
    MINUS           reduce using rule 104 (math_expression -> expression MINUS expression .)
    MODULUS         reduce using rule 104 (math_expression -> expression MINUS expression .)
    ISEQUAL         reduce using rule 104 (math_expression -> expression MINUS expression .)
    NOT             reduce using rule 104 (math_expression -> expression MINUS expression .)
    LESS            reduce using rule 104 (math_expression -> expression MINUS expression .)
    GREATER         reduce using rule 104 (math_expression -> expression MINUS expression .)
    AND             reduce using rule 104 (math_expression -> expression MINUS expression .)
    OR              reduce using rule 104 (math_expression -> expression MINUS expression .)
    $end            reduce using rule 104 (math_expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 104 (math_expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 104 (math_expression -> expression MINUS expression .)
    RPAREN          reduce using rule 104 (math_expression -> expression MINUS expression .)
    COMMA           reduce using rule 104 (math_expression -> expression MINUS expression .)
    RBRACE          reduce using rule 104 (math_expression -> expression MINUS expression .)
    BOOLEAN         reduce using rule 104 (math_expression -> expression MINUS expression .)
    STRING          reduce using rule 104 (math_expression -> expression MINUS expression .)
    IDENTIFIER      reduce using rule 104 (math_expression -> expression MINUS expression .)
    LETTER          reduce using rule 104 (math_expression -> expression MINUS expression .)
    BOOL            reduce using rule 104 (math_expression -> expression MINUS expression .)
    INT             reduce using rule 104 (math_expression -> expression MINUS expression .)
    FLOAT           reduce using rule 104 (math_expression -> expression MINUS expression .)
    CHAR            reduce using rule 104 (math_expression -> expression MINUS expression .)
    VOID            reduce using rule 104 (math_expression -> expression MINUS expression .)
    POUND           reduce using rule 104 (math_expression -> expression MINUS expression .)
    USING           reduce using rule 104 (math_expression -> expression MINUS expression .)
    STRUCT          reduce using rule 104 (math_expression -> expression MINUS expression .)
    INTEGER         reduce using rule 104 (math_expression -> expression MINUS expression .)
    FLOATINGPOINT   reduce using rule 104 (math_expression -> expression MINUS expression .)
    EQUALS          reduce using rule 104 (math_expression -> expression MINUS expression .)
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38

  ! TIMES           [ reduce using rule 104 (math_expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 104 (math_expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 35 ]
  ! MINUS           [ shift and go to state 36 ]
  ! MODULUS         [ shift and go to state 39 ]
  ! ISEQUAL         [ shift and go to state 40 ]
  ! NOT             [ shift and go to state 41 ]
  ! LESS            [ shift and go to state 42 ]
  ! GREATER         [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]
  ! OR              [ shift and go to state 45 ]


state 67

    (109) math_expression -> expression MINUS MINUS .
    (111) math_expression -> MINUS . MINUS expression

    PLUS            reduce using rule 109 (math_expression -> expression MINUS MINUS .)
    MINUS           reduce using rule 109 (math_expression -> expression MINUS MINUS .)
    TIMES           reduce using rule 109 (math_expression -> expression MINUS MINUS .)
    DIVIDE          reduce using rule 109 (math_expression -> expression MINUS MINUS .)
    MODULUS         reduce using rule 109 (math_expression -> expression MINUS MINUS .)
    ISEQUAL         reduce using rule 109 (math_expression -> expression MINUS MINUS .)
    NOT             reduce using rule 109 (math_expression -> expression MINUS MINUS .)
    LESS            reduce using rule 109 (math_expression -> expression MINUS MINUS .)
    GREATER         reduce using rule 109 (math_expression -> expression MINUS MINUS .)
    AND             reduce using rule 109 (math_expression -> expression MINUS MINUS .)
    OR              reduce using rule 109 (math_expression -> expression MINUS MINUS .)
    $end            reduce using rule 109 (math_expression -> expression MINUS MINUS .)
    RBRACKET        reduce using rule 109 (math_expression -> expression MINUS MINUS .)
    SEMICOLON       reduce using rule 109 (math_expression -> expression MINUS MINUS .)
    RPAREN          reduce using rule 109 (math_expression -> expression MINUS MINUS .)
    COMMA           reduce using rule 109 (math_expression -> expression MINUS MINUS .)
    RBRACE          reduce using rule 109 (math_expression -> expression MINUS MINUS .)
    BOOLEAN         reduce using rule 109 (math_expression -> expression MINUS MINUS .)
    STRING          reduce using rule 109 (math_expression -> expression MINUS MINUS .)
    IDENTIFIER      reduce using rule 109 (math_expression -> expression MINUS MINUS .)
    LETTER          reduce using rule 109 (math_expression -> expression MINUS MINUS .)
    BOOL            reduce using rule 109 (math_expression -> expression MINUS MINUS .)
    INT             reduce using rule 109 (math_expression -> expression MINUS MINUS .)
    FLOAT           reduce using rule 109 (math_expression -> expression MINUS MINUS .)
    CHAR            reduce using rule 109 (math_expression -> expression MINUS MINUS .)
    VOID            reduce using rule 109 (math_expression -> expression MINUS MINUS .)
    POUND           reduce using rule 109 (math_expression -> expression MINUS MINUS .)
    USING           reduce using rule 109 (math_expression -> expression MINUS MINUS .)
    STRUCT          reduce using rule 109 (math_expression -> expression MINUS MINUS .)
    INTEGER         reduce using rule 109 (math_expression -> expression MINUS MINUS .)
    FLOATINGPOINT   reduce using rule 109 (math_expression -> expression MINUS MINUS .)
    EQUALS          reduce using rule 109 (math_expression -> expression MINUS MINUS .)

  ! MINUS           [ shift and go to state 60 ]


state 68

    (105) math_expression -> expression TIMES expression .
    (103) math_expression -> expression . PLUS expression
    (104) math_expression -> expression . MINUS expression
    (105) math_expression -> expression . TIMES expression
    (106) math_expression -> expression . DIVIDE expression
    (107) math_expression -> expression . MODULUS expression
    (108) math_expression -> expression . PLUS PLUS
    (109) math_expression -> expression . MINUS MINUS
    (79) conditional_expression -> expression . ISEQUAL expression
    (80) conditional_expression -> expression . NOT EQUALS expression
    (81) conditional_expression -> expression . LESS expression
    (82) conditional_expression -> expression . LESS EQUALS expression
    (83) conditional_expression -> expression . GREATER expression
    (84) conditional_expression -> expression . GREATER EQUALS expression
    (85) conditional_expression -> expression . AND expression
    (86) conditional_expression -> expression . OR expression

    PLUS            reduce using rule 105 (math_expression -> expression TIMES expression .)
    MINUS           reduce using rule 105 (math_expression -> expression TIMES expression .)
    TIMES           reduce using rule 105 (math_expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 105 (math_expression -> expression TIMES expression .)
    MODULUS         reduce using rule 105 (math_expression -> expression TIMES expression .)
    ISEQUAL         reduce using rule 105 (math_expression -> expression TIMES expression .)
    NOT             reduce using rule 105 (math_expression -> expression TIMES expression .)
    LESS            reduce using rule 105 (math_expression -> expression TIMES expression .)
    GREATER         reduce using rule 105 (math_expression -> expression TIMES expression .)
    AND             reduce using rule 105 (math_expression -> expression TIMES expression .)
    OR              reduce using rule 105 (math_expression -> expression TIMES expression .)
    $end            reduce using rule 105 (math_expression -> expression TIMES expression .)
    RBRACKET        reduce using rule 105 (math_expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 105 (math_expression -> expression TIMES expression .)
    RPAREN          reduce using rule 105 (math_expression -> expression TIMES expression .)
    COMMA           reduce using rule 105 (math_expression -> expression TIMES expression .)
    RBRACE          reduce using rule 105 (math_expression -> expression TIMES expression .)
    BOOLEAN         reduce using rule 105 (math_expression -> expression TIMES expression .)
    STRING          reduce using rule 105 (math_expression -> expression TIMES expression .)
    IDENTIFIER      reduce using rule 105 (math_expression -> expression TIMES expression .)
    LETTER          reduce using rule 105 (math_expression -> expression TIMES expression .)
    BOOL            reduce using rule 105 (math_expression -> expression TIMES expression .)
    INT             reduce using rule 105 (math_expression -> expression TIMES expression .)
    FLOAT           reduce using rule 105 (math_expression -> expression TIMES expression .)
    CHAR            reduce using rule 105 (math_expression -> expression TIMES expression .)
    VOID            reduce using rule 105 (math_expression -> expression TIMES expression .)
    POUND           reduce using rule 105 (math_expression -> expression TIMES expression .)
    USING           reduce using rule 105 (math_expression -> expression TIMES expression .)
    STRUCT          reduce using rule 105 (math_expression -> expression TIMES expression .)
    INTEGER         reduce using rule 105 (math_expression -> expression TIMES expression .)
    FLOATINGPOINT   reduce using rule 105 (math_expression -> expression TIMES expression .)
    EQUALS          reduce using rule 105 (math_expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 35 ]
  ! MINUS           [ shift and go to state 36 ]
  ! TIMES           [ shift and go to state 37 ]
  ! DIVIDE          [ shift and go to state 38 ]
  ! MODULUS         [ shift and go to state 39 ]
  ! ISEQUAL         [ shift and go to state 40 ]
  ! NOT             [ shift and go to state 41 ]
  ! LESS            [ shift and go to state 42 ]
  ! GREATER         [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]
  ! OR              [ shift and go to state 45 ]


state 69

    (106) math_expression -> expression DIVIDE expression .
    (103) math_expression -> expression . PLUS expression
    (104) math_expression -> expression . MINUS expression
    (105) math_expression -> expression . TIMES expression
    (106) math_expression -> expression . DIVIDE expression
    (107) math_expression -> expression . MODULUS expression
    (108) math_expression -> expression . PLUS PLUS
    (109) math_expression -> expression . MINUS MINUS
    (79) conditional_expression -> expression . ISEQUAL expression
    (80) conditional_expression -> expression . NOT EQUALS expression
    (81) conditional_expression -> expression . LESS expression
    (82) conditional_expression -> expression . LESS EQUALS expression
    (83) conditional_expression -> expression . GREATER expression
    (84) conditional_expression -> expression . GREATER EQUALS expression
    (85) conditional_expression -> expression . AND expression
    (86) conditional_expression -> expression . OR expression

    PLUS            reduce using rule 106 (math_expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 106 (math_expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 106 (math_expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 106 (math_expression -> expression DIVIDE expression .)
    MODULUS         reduce using rule 106 (math_expression -> expression DIVIDE expression .)
    ISEQUAL         reduce using rule 106 (math_expression -> expression DIVIDE expression .)
    NOT             reduce using rule 106 (math_expression -> expression DIVIDE expression .)
    LESS            reduce using rule 106 (math_expression -> expression DIVIDE expression .)
    GREATER         reduce using rule 106 (math_expression -> expression DIVIDE expression .)
    AND             reduce using rule 106 (math_expression -> expression DIVIDE expression .)
    OR              reduce using rule 106 (math_expression -> expression DIVIDE expression .)
    $end            reduce using rule 106 (math_expression -> expression DIVIDE expression .)
    RBRACKET        reduce using rule 106 (math_expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 106 (math_expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 106 (math_expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 106 (math_expression -> expression DIVIDE expression .)
    RBRACE          reduce using rule 106 (math_expression -> expression DIVIDE expression .)
    BOOLEAN         reduce using rule 106 (math_expression -> expression DIVIDE expression .)
    STRING          reduce using rule 106 (math_expression -> expression DIVIDE expression .)
    IDENTIFIER      reduce using rule 106 (math_expression -> expression DIVIDE expression .)
    LETTER          reduce using rule 106 (math_expression -> expression DIVIDE expression .)
    BOOL            reduce using rule 106 (math_expression -> expression DIVIDE expression .)
    INT             reduce using rule 106 (math_expression -> expression DIVIDE expression .)
    FLOAT           reduce using rule 106 (math_expression -> expression DIVIDE expression .)
    CHAR            reduce using rule 106 (math_expression -> expression DIVIDE expression .)
    VOID            reduce using rule 106 (math_expression -> expression DIVIDE expression .)
    POUND           reduce using rule 106 (math_expression -> expression DIVIDE expression .)
    USING           reduce using rule 106 (math_expression -> expression DIVIDE expression .)
    STRUCT          reduce using rule 106 (math_expression -> expression DIVIDE expression .)
    INTEGER         reduce using rule 106 (math_expression -> expression DIVIDE expression .)
    FLOATINGPOINT   reduce using rule 106 (math_expression -> expression DIVIDE expression .)
    EQUALS          reduce using rule 106 (math_expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 35 ]
  ! MINUS           [ shift and go to state 36 ]
  ! TIMES           [ shift and go to state 37 ]
  ! DIVIDE          [ shift and go to state 38 ]
  ! MODULUS         [ shift and go to state 39 ]
  ! ISEQUAL         [ shift and go to state 40 ]
  ! NOT             [ shift and go to state 41 ]
  ! LESS            [ shift and go to state 42 ]
  ! GREATER         [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]
  ! OR              [ shift and go to state 45 ]


state 70

    (107) math_expression -> expression MODULUS expression .
    (103) math_expression -> expression . PLUS expression
    (104) math_expression -> expression . MINUS expression
    (105) math_expression -> expression . TIMES expression
    (106) math_expression -> expression . DIVIDE expression
    (107) math_expression -> expression . MODULUS expression
    (108) math_expression -> expression . PLUS PLUS
    (109) math_expression -> expression . MINUS MINUS
    (79) conditional_expression -> expression . ISEQUAL expression
    (80) conditional_expression -> expression . NOT EQUALS expression
    (81) conditional_expression -> expression . LESS expression
    (82) conditional_expression -> expression . LESS EQUALS expression
    (83) conditional_expression -> expression . GREATER expression
    (84) conditional_expression -> expression . GREATER EQUALS expression
    (85) conditional_expression -> expression . AND expression
    (86) conditional_expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULUS resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    $end            reduce using rule 107 (math_expression -> expression MODULUS expression .)
    RBRACKET        reduce using rule 107 (math_expression -> expression MODULUS expression .)
    SEMICOLON       reduce using rule 107 (math_expression -> expression MODULUS expression .)
    RPAREN          reduce using rule 107 (math_expression -> expression MODULUS expression .)
    COMMA           reduce using rule 107 (math_expression -> expression MODULUS expression .)
    RBRACE          reduce using rule 107 (math_expression -> expression MODULUS expression .)
    BOOLEAN         reduce using rule 107 (math_expression -> expression MODULUS expression .)
    STRING          reduce using rule 107 (math_expression -> expression MODULUS expression .)
    IDENTIFIER      reduce using rule 107 (math_expression -> expression MODULUS expression .)
    LETTER          reduce using rule 107 (math_expression -> expression MODULUS expression .)
    BOOL            reduce using rule 107 (math_expression -> expression MODULUS expression .)
    INT             reduce using rule 107 (math_expression -> expression MODULUS expression .)
    FLOAT           reduce using rule 107 (math_expression -> expression MODULUS expression .)
    CHAR            reduce using rule 107 (math_expression -> expression MODULUS expression .)
    VOID            reduce using rule 107 (math_expression -> expression MODULUS expression .)
    POUND           reduce using rule 107 (math_expression -> expression MODULUS expression .)
    USING           reduce using rule 107 (math_expression -> expression MODULUS expression .)
    STRUCT          reduce using rule 107 (math_expression -> expression MODULUS expression .)
    INTEGER         reduce using rule 107 (math_expression -> expression MODULUS expression .)
    FLOATINGPOINT   reduce using rule 107 (math_expression -> expression MODULUS expression .)
    EQUALS          reduce using rule 107 (math_expression -> expression MODULUS expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULUS         shift and go to state 39
    ISEQUAL         shift and go to state 40
    NOT             shift and go to state 41
    LESS            shift and go to state 42
    GREATER         shift and go to state 43
    AND             shift and go to state 44
    OR              shift and go to state 45

  ! PLUS            [ reduce using rule 107 (math_expression -> expression MODULUS expression .) ]
  ! MINUS           [ reduce using rule 107 (math_expression -> expression MODULUS expression .) ]
  ! TIMES           [ reduce using rule 107 (math_expression -> expression MODULUS expression .) ]
  ! DIVIDE          [ reduce using rule 107 (math_expression -> expression MODULUS expression .) ]
  ! MODULUS         [ reduce using rule 107 (math_expression -> expression MODULUS expression .) ]
  ! ISEQUAL         [ reduce using rule 107 (math_expression -> expression MODULUS expression .) ]
  ! NOT             [ reduce using rule 107 (math_expression -> expression MODULUS expression .) ]
  ! LESS            [ reduce using rule 107 (math_expression -> expression MODULUS expression .) ]
  ! GREATER         [ reduce using rule 107 (math_expression -> expression MODULUS expression .) ]
  ! AND             [ reduce using rule 107 (math_expression -> expression MODULUS expression .) ]
  ! OR              [ reduce using rule 107 (math_expression -> expression MODULUS expression .) ]


state 71

    (79) conditional_expression -> expression ISEQUAL expression .
    (103) math_expression -> expression . PLUS expression
    (104) math_expression -> expression . MINUS expression
    (105) math_expression -> expression . TIMES expression
    (106) math_expression -> expression . DIVIDE expression
    (107) math_expression -> expression . MODULUS expression
    (108) math_expression -> expression . PLUS PLUS
    (109) math_expression -> expression . MINUS MINUS
    (79) conditional_expression -> expression . ISEQUAL expression
    (80) conditional_expression -> expression . NOT EQUALS expression
    (81) conditional_expression -> expression . LESS expression
    (82) conditional_expression -> expression . LESS EQUALS expression
    (83) conditional_expression -> expression . GREATER expression
    (84) conditional_expression -> expression . GREATER EQUALS expression
    (85) conditional_expression -> expression . AND expression
    (86) conditional_expression -> expression . OR expression

    MODULUS         reduce using rule 79 (conditional_expression -> expression ISEQUAL expression .)
    NOT             reduce using rule 79 (conditional_expression -> expression ISEQUAL expression .)
    $end            reduce using rule 79 (conditional_expression -> expression ISEQUAL expression .)
    RBRACKET        reduce using rule 79 (conditional_expression -> expression ISEQUAL expression .)
    SEMICOLON       reduce using rule 79 (conditional_expression -> expression ISEQUAL expression .)
    RPAREN          reduce using rule 79 (conditional_expression -> expression ISEQUAL expression .)
    COMMA           reduce using rule 79 (conditional_expression -> expression ISEQUAL expression .)
    RBRACE          reduce using rule 79 (conditional_expression -> expression ISEQUAL expression .)
    BOOLEAN         reduce using rule 79 (conditional_expression -> expression ISEQUAL expression .)
    STRING          reduce using rule 79 (conditional_expression -> expression ISEQUAL expression .)
    IDENTIFIER      reduce using rule 79 (conditional_expression -> expression ISEQUAL expression .)
    LETTER          reduce using rule 79 (conditional_expression -> expression ISEQUAL expression .)
    BOOL            reduce using rule 79 (conditional_expression -> expression ISEQUAL expression .)
    INT             reduce using rule 79 (conditional_expression -> expression ISEQUAL expression .)
    FLOAT           reduce using rule 79 (conditional_expression -> expression ISEQUAL expression .)
    CHAR            reduce using rule 79 (conditional_expression -> expression ISEQUAL expression .)
    VOID            reduce using rule 79 (conditional_expression -> expression ISEQUAL expression .)
    POUND           reduce using rule 79 (conditional_expression -> expression ISEQUAL expression .)
    USING           reduce using rule 79 (conditional_expression -> expression ISEQUAL expression .)
    STRUCT          reduce using rule 79 (conditional_expression -> expression ISEQUAL expression .)
    INTEGER         reduce using rule 79 (conditional_expression -> expression ISEQUAL expression .)
    FLOATINGPOINT   reduce using rule 79 (conditional_expression -> expression ISEQUAL expression .)
    EQUALS          reduce using rule 79 (conditional_expression -> expression ISEQUAL expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    ISEQUAL         shift and go to state 40
    LESS            shift and go to state 42
    GREATER         shift and go to state 43
    AND             shift and go to state 44
    OR              shift and go to state 45

  ! PLUS            [ reduce using rule 79 (conditional_expression -> expression ISEQUAL expression .) ]
  ! MINUS           [ reduce using rule 79 (conditional_expression -> expression ISEQUAL expression .) ]
  ! TIMES           [ reduce using rule 79 (conditional_expression -> expression ISEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 79 (conditional_expression -> expression ISEQUAL expression .) ]
  ! ISEQUAL         [ reduce using rule 79 (conditional_expression -> expression ISEQUAL expression .) ]
  ! LESS            [ reduce using rule 79 (conditional_expression -> expression ISEQUAL expression .) ]
  ! GREATER         [ reduce using rule 79 (conditional_expression -> expression ISEQUAL expression .) ]
  ! AND             [ reduce using rule 79 (conditional_expression -> expression ISEQUAL expression .) ]
  ! OR              [ reduce using rule 79 (conditional_expression -> expression ISEQUAL expression .) ]
  ! MODULUS         [ shift and go to state 39 ]
  ! NOT             [ shift and go to state 41 ]


state 72

    (80) conditional_expression -> expression NOT EQUALS . expression
    (88) expression -> . BOOLEAN
    (89) expression -> . number
    (90) expression -> . STRING
    (91) expression -> . IDENTIFIER
    (92) expression -> . LETTER
    (93) expression -> . assignment
    (94) expression -> . array_usage
    (95) expression -> . function_call
    (96) expression -> . math_expression
    (97) expression -> . conditional_expression
    (32) number -> . INTEGER
    (33) number -> . FLOATINGPOINT
    (21) assignment -> . IDENTIFIER EQUALS expression
    (22) assignment -> . IDENTIFIER PLUS EQUALS expression
    (23) assignment -> . IDENTIFIER MINUS EQUALS expression
    (34) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (35) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN RPAREN
    (28) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (29) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (103) math_expression -> . expression PLUS expression
    (104) math_expression -> . expression MINUS expression
    (105) math_expression -> . expression TIMES expression
    (106) math_expression -> . expression DIVIDE expression
    (107) math_expression -> . expression MODULUS expression
    (108) math_expression -> . expression PLUS PLUS
    (109) math_expression -> . expression MINUS MINUS
    (110) math_expression -> . PLUS PLUS expression
    (111) math_expression -> . MINUS MINUS expression
    (79) conditional_expression -> . expression ISEQUAL expression
    (80) conditional_expression -> . expression NOT EQUALS expression
    (81) conditional_expression -> . expression LESS expression
    (82) conditional_expression -> . expression LESS EQUALS expression
    (83) conditional_expression -> . expression GREATER expression
    (84) conditional_expression -> . expression GREATER EQUALS expression
    (85) conditional_expression -> . expression AND expression
    (86) conditional_expression -> . expression OR expression
    (87) conditional_expression -> . NOT expression

    BOOLEAN         shift and go to state 13
    STRING          shift and go to state 15
    IDENTIFIER      shift and go to state 62
    LETTER          shift and go to state 16
    INTEGER         shift and go to state 28
    FLOATINGPOINT   shift and go to state 29
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    NOT             shift and go to state 32

    expression                     shift and go to state 97
    number                         shift and go to state 14
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 63
    function_call                  shift and go to state 17
    math_expression                shift and go to state 18
    conditional_expression         shift and go to state 19

state 73

    (81) conditional_expression -> expression LESS expression .
    (103) math_expression -> expression . PLUS expression
    (104) math_expression -> expression . MINUS expression
    (105) math_expression -> expression . TIMES expression
    (106) math_expression -> expression . DIVIDE expression
    (107) math_expression -> expression . MODULUS expression
    (108) math_expression -> expression . PLUS PLUS
    (109) math_expression -> expression . MINUS MINUS
    (79) conditional_expression -> expression . ISEQUAL expression
    (80) conditional_expression -> expression . NOT EQUALS expression
    (81) conditional_expression -> expression . LESS expression
    (82) conditional_expression -> expression . LESS EQUALS expression
    (83) conditional_expression -> expression . GREATER expression
    (84) conditional_expression -> expression . GREATER EQUALS expression
    (85) conditional_expression -> expression . AND expression
    (86) conditional_expression -> expression . OR expression

    MODULUS         reduce using rule 81 (conditional_expression -> expression LESS expression .)
    ISEQUAL         reduce using rule 81 (conditional_expression -> expression LESS expression .)
    NOT             reduce using rule 81 (conditional_expression -> expression LESS expression .)
    LESS            reduce using rule 81 (conditional_expression -> expression LESS expression .)
    GREATER         reduce using rule 81 (conditional_expression -> expression LESS expression .)
    AND             reduce using rule 81 (conditional_expression -> expression LESS expression .)
    OR              reduce using rule 81 (conditional_expression -> expression LESS expression .)
    $end            reduce using rule 81 (conditional_expression -> expression LESS expression .)
    RBRACKET        reduce using rule 81 (conditional_expression -> expression LESS expression .)
    SEMICOLON       reduce using rule 81 (conditional_expression -> expression LESS expression .)
    RPAREN          reduce using rule 81 (conditional_expression -> expression LESS expression .)
    COMMA           reduce using rule 81 (conditional_expression -> expression LESS expression .)
    RBRACE          reduce using rule 81 (conditional_expression -> expression LESS expression .)
    BOOLEAN         reduce using rule 81 (conditional_expression -> expression LESS expression .)
    STRING          reduce using rule 81 (conditional_expression -> expression LESS expression .)
    IDENTIFIER      reduce using rule 81 (conditional_expression -> expression LESS expression .)
    LETTER          reduce using rule 81 (conditional_expression -> expression LESS expression .)
    BOOL            reduce using rule 81 (conditional_expression -> expression LESS expression .)
    INT             reduce using rule 81 (conditional_expression -> expression LESS expression .)
    FLOAT           reduce using rule 81 (conditional_expression -> expression LESS expression .)
    CHAR            reduce using rule 81 (conditional_expression -> expression LESS expression .)
    VOID            reduce using rule 81 (conditional_expression -> expression LESS expression .)
    POUND           reduce using rule 81 (conditional_expression -> expression LESS expression .)
    USING           reduce using rule 81 (conditional_expression -> expression LESS expression .)
    STRUCT          reduce using rule 81 (conditional_expression -> expression LESS expression .)
    INTEGER         reduce using rule 81 (conditional_expression -> expression LESS expression .)
    FLOATINGPOINT   reduce using rule 81 (conditional_expression -> expression LESS expression .)
    EQUALS          reduce using rule 81 (conditional_expression -> expression LESS expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38

  ! PLUS            [ reduce using rule 81 (conditional_expression -> expression LESS expression .) ]
  ! MINUS           [ reduce using rule 81 (conditional_expression -> expression LESS expression .) ]
  ! TIMES           [ reduce using rule 81 (conditional_expression -> expression LESS expression .) ]
  ! DIVIDE          [ reduce using rule 81 (conditional_expression -> expression LESS expression .) ]
  ! MODULUS         [ shift and go to state 39 ]
  ! ISEQUAL         [ shift and go to state 40 ]
  ! NOT             [ shift and go to state 41 ]
  ! LESS            [ shift and go to state 42 ]
  ! GREATER         [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]
  ! OR              [ shift and go to state 45 ]


state 74

    (82) conditional_expression -> expression LESS EQUALS . expression
    (88) expression -> . BOOLEAN
    (89) expression -> . number
    (90) expression -> . STRING
    (91) expression -> . IDENTIFIER
    (92) expression -> . LETTER
    (93) expression -> . assignment
    (94) expression -> . array_usage
    (95) expression -> . function_call
    (96) expression -> . math_expression
    (97) expression -> . conditional_expression
    (32) number -> . INTEGER
    (33) number -> . FLOATINGPOINT
    (21) assignment -> . IDENTIFIER EQUALS expression
    (22) assignment -> . IDENTIFIER PLUS EQUALS expression
    (23) assignment -> . IDENTIFIER MINUS EQUALS expression
    (34) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (35) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN RPAREN
    (28) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (29) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (103) math_expression -> . expression PLUS expression
    (104) math_expression -> . expression MINUS expression
    (105) math_expression -> . expression TIMES expression
    (106) math_expression -> . expression DIVIDE expression
    (107) math_expression -> . expression MODULUS expression
    (108) math_expression -> . expression PLUS PLUS
    (109) math_expression -> . expression MINUS MINUS
    (110) math_expression -> . PLUS PLUS expression
    (111) math_expression -> . MINUS MINUS expression
    (79) conditional_expression -> . expression ISEQUAL expression
    (80) conditional_expression -> . expression NOT EQUALS expression
    (81) conditional_expression -> . expression LESS expression
    (82) conditional_expression -> . expression LESS EQUALS expression
    (83) conditional_expression -> . expression GREATER expression
    (84) conditional_expression -> . expression GREATER EQUALS expression
    (85) conditional_expression -> . expression AND expression
    (86) conditional_expression -> . expression OR expression
    (87) conditional_expression -> . NOT expression

    BOOLEAN         shift and go to state 13
    STRING          shift and go to state 15
    IDENTIFIER      shift and go to state 62
    LETTER          shift and go to state 16
    INTEGER         shift and go to state 28
    FLOATINGPOINT   shift and go to state 29
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    NOT             shift and go to state 32

    expression                     shift and go to state 98
    number                         shift and go to state 14
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 63
    function_call                  shift and go to state 17
    math_expression                shift and go to state 18
    conditional_expression         shift and go to state 19

state 75

    (83) conditional_expression -> expression GREATER expression .
    (103) math_expression -> expression . PLUS expression
    (104) math_expression -> expression . MINUS expression
    (105) math_expression -> expression . TIMES expression
    (106) math_expression -> expression . DIVIDE expression
    (107) math_expression -> expression . MODULUS expression
    (108) math_expression -> expression . PLUS PLUS
    (109) math_expression -> expression . MINUS MINUS
    (79) conditional_expression -> expression . ISEQUAL expression
    (80) conditional_expression -> expression . NOT EQUALS expression
    (81) conditional_expression -> expression . LESS expression
    (82) conditional_expression -> expression . LESS EQUALS expression
    (83) conditional_expression -> expression . GREATER expression
    (84) conditional_expression -> expression . GREATER EQUALS expression
    (85) conditional_expression -> expression . AND expression
    (86) conditional_expression -> expression . OR expression

    MODULUS         reduce using rule 83 (conditional_expression -> expression GREATER expression .)
    ISEQUAL         reduce using rule 83 (conditional_expression -> expression GREATER expression .)
    NOT             reduce using rule 83 (conditional_expression -> expression GREATER expression .)
    LESS            reduce using rule 83 (conditional_expression -> expression GREATER expression .)
    GREATER         reduce using rule 83 (conditional_expression -> expression GREATER expression .)
    AND             reduce using rule 83 (conditional_expression -> expression GREATER expression .)
    OR              reduce using rule 83 (conditional_expression -> expression GREATER expression .)
    $end            reduce using rule 83 (conditional_expression -> expression GREATER expression .)
    RBRACKET        reduce using rule 83 (conditional_expression -> expression GREATER expression .)
    SEMICOLON       reduce using rule 83 (conditional_expression -> expression GREATER expression .)
    RPAREN          reduce using rule 83 (conditional_expression -> expression GREATER expression .)
    COMMA           reduce using rule 83 (conditional_expression -> expression GREATER expression .)
    RBRACE          reduce using rule 83 (conditional_expression -> expression GREATER expression .)
    BOOLEAN         reduce using rule 83 (conditional_expression -> expression GREATER expression .)
    STRING          reduce using rule 83 (conditional_expression -> expression GREATER expression .)
    IDENTIFIER      reduce using rule 83 (conditional_expression -> expression GREATER expression .)
    LETTER          reduce using rule 83 (conditional_expression -> expression GREATER expression .)
    BOOL            reduce using rule 83 (conditional_expression -> expression GREATER expression .)
    INT             reduce using rule 83 (conditional_expression -> expression GREATER expression .)
    FLOAT           reduce using rule 83 (conditional_expression -> expression GREATER expression .)
    CHAR            reduce using rule 83 (conditional_expression -> expression GREATER expression .)
    VOID            reduce using rule 83 (conditional_expression -> expression GREATER expression .)
    POUND           reduce using rule 83 (conditional_expression -> expression GREATER expression .)
    USING           reduce using rule 83 (conditional_expression -> expression GREATER expression .)
    STRUCT          reduce using rule 83 (conditional_expression -> expression GREATER expression .)
    INTEGER         reduce using rule 83 (conditional_expression -> expression GREATER expression .)
    FLOATINGPOINT   reduce using rule 83 (conditional_expression -> expression GREATER expression .)
    EQUALS          reduce using rule 83 (conditional_expression -> expression GREATER expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38

  ! PLUS            [ reduce using rule 83 (conditional_expression -> expression GREATER expression .) ]
  ! MINUS           [ reduce using rule 83 (conditional_expression -> expression GREATER expression .) ]
  ! TIMES           [ reduce using rule 83 (conditional_expression -> expression GREATER expression .) ]
  ! DIVIDE          [ reduce using rule 83 (conditional_expression -> expression GREATER expression .) ]
  ! MODULUS         [ shift and go to state 39 ]
  ! ISEQUAL         [ shift and go to state 40 ]
  ! NOT             [ shift and go to state 41 ]
  ! LESS            [ shift and go to state 42 ]
  ! GREATER         [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]
  ! OR              [ shift and go to state 45 ]


state 76

    (84) conditional_expression -> expression GREATER EQUALS . expression
    (88) expression -> . BOOLEAN
    (89) expression -> . number
    (90) expression -> . STRING
    (91) expression -> . IDENTIFIER
    (92) expression -> . LETTER
    (93) expression -> . assignment
    (94) expression -> . array_usage
    (95) expression -> . function_call
    (96) expression -> . math_expression
    (97) expression -> . conditional_expression
    (32) number -> . INTEGER
    (33) number -> . FLOATINGPOINT
    (21) assignment -> . IDENTIFIER EQUALS expression
    (22) assignment -> . IDENTIFIER PLUS EQUALS expression
    (23) assignment -> . IDENTIFIER MINUS EQUALS expression
    (34) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (35) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN RPAREN
    (28) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (29) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (103) math_expression -> . expression PLUS expression
    (104) math_expression -> . expression MINUS expression
    (105) math_expression -> . expression TIMES expression
    (106) math_expression -> . expression DIVIDE expression
    (107) math_expression -> . expression MODULUS expression
    (108) math_expression -> . expression PLUS PLUS
    (109) math_expression -> . expression MINUS MINUS
    (110) math_expression -> . PLUS PLUS expression
    (111) math_expression -> . MINUS MINUS expression
    (79) conditional_expression -> . expression ISEQUAL expression
    (80) conditional_expression -> . expression NOT EQUALS expression
    (81) conditional_expression -> . expression LESS expression
    (82) conditional_expression -> . expression LESS EQUALS expression
    (83) conditional_expression -> . expression GREATER expression
    (84) conditional_expression -> . expression GREATER EQUALS expression
    (85) conditional_expression -> . expression AND expression
    (86) conditional_expression -> . expression OR expression
    (87) conditional_expression -> . NOT expression

    BOOLEAN         shift and go to state 13
    STRING          shift and go to state 15
    IDENTIFIER      shift and go to state 62
    LETTER          shift and go to state 16
    INTEGER         shift and go to state 28
    FLOATINGPOINT   shift and go to state 29
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    NOT             shift and go to state 32

    expression                     shift and go to state 99
    number                         shift and go to state 14
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 63
    function_call                  shift and go to state 17
    math_expression                shift and go to state 18
    conditional_expression         shift and go to state 19

state 77

    (85) conditional_expression -> expression AND expression .
    (103) math_expression -> expression . PLUS expression
    (104) math_expression -> expression . MINUS expression
    (105) math_expression -> expression . TIMES expression
    (106) math_expression -> expression . DIVIDE expression
    (107) math_expression -> expression . MODULUS expression
    (108) math_expression -> expression . PLUS PLUS
    (109) math_expression -> expression . MINUS MINUS
    (79) conditional_expression -> expression . ISEQUAL expression
    (80) conditional_expression -> expression . NOT EQUALS expression
    (81) conditional_expression -> expression . LESS expression
    (82) conditional_expression -> expression . LESS EQUALS expression
    (83) conditional_expression -> expression . GREATER expression
    (84) conditional_expression -> expression . GREATER EQUALS expression
    (85) conditional_expression -> expression . AND expression
    (86) conditional_expression -> expression . OR expression

    MODULUS         reduce using rule 85 (conditional_expression -> expression AND expression .)
    ISEQUAL         reduce using rule 85 (conditional_expression -> expression AND expression .)
    NOT             reduce using rule 85 (conditional_expression -> expression AND expression .)
    AND             reduce using rule 85 (conditional_expression -> expression AND expression .)
    OR              reduce using rule 85 (conditional_expression -> expression AND expression .)
    $end            reduce using rule 85 (conditional_expression -> expression AND expression .)
    RBRACKET        reduce using rule 85 (conditional_expression -> expression AND expression .)
    SEMICOLON       reduce using rule 85 (conditional_expression -> expression AND expression .)
    RPAREN          reduce using rule 85 (conditional_expression -> expression AND expression .)
    COMMA           reduce using rule 85 (conditional_expression -> expression AND expression .)
    RBRACE          reduce using rule 85 (conditional_expression -> expression AND expression .)
    BOOLEAN         reduce using rule 85 (conditional_expression -> expression AND expression .)
    STRING          reduce using rule 85 (conditional_expression -> expression AND expression .)
    IDENTIFIER      reduce using rule 85 (conditional_expression -> expression AND expression .)
    LETTER          reduce using rule 85 (conditional_expression -> expression AND expression .)
    BOOL            reduce using rule 85 (conditional_expression -> expression AND expression .)
    INT             reduce using rule 85 (conditional_expression -> expression AND expression .)
    FLOAT           reduce using rule 85 (conditional_expression -> expression AND expression .)
    CHAR            reduce using rule 85 (conditional_expression -> expression AND expression .)
    VOID            reduce using rule 85 (conditional_expression -> expression AND expression .)
    POUND           reduce using rule 85 (conditional_expression -> expression AND expression .)
    USING           reduce using rule 85 (conditional_expression -> expression AND expression .)
    STRUCT          reduce using rule 85 (conditional_expression -> expression AND expression .)
    INTEGER         reduce using rule 85 (conditional_expression -> expression AND expression .)
    FLOATINGPOINT   reduce using rule 85 (conditional_expression -> expression AND expression .)
    EQUALS          reduce using rule 85 (conditional_expression -> expression AND expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    LESS            shift and go to state 42
    GREATER         shift and go to state 43

  ! PLUS            [ reduce using rule 85 (conditional_expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 85 (conditional_expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 85 (conditional_expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 85 (conditional_expression -> expression AND expression .) ]
  ! LESS            [ reduce using rule 85 (conditional_expression -> expression AND expression .) ]
  ! GREATER         [ reduce using rule 85 (conditional_expression -> expression AND expression .) ]
  ! MODULUS         [ shift and go to state 39 ]
  ! ISEQUAL         [ shift and go to state 40 ]
  ! NOT             [ shift and go to state 41 ]
  ! AND             [ shift and go to state 44 ]
  ! OR              [ shift and go to state 45 ]


state 78

    (86) conditional_expression -> expression OR expression .
    (103) math_expression -> expression . PLUS expression
    (104) math_expression -> expression . MINUS expression
    (105) math_expression -> expression . TIMES expression
    (106) math_expression -> expression . DIVIDE expression
    (107) math_expression -> expression . MODULUS expression
    (108) math_expression -> expression . PLUS PLUS
    (109) math_expression -> expression . MINUS MINUS
    (79) conditional_expression -> expression . ISEQUAL expression
    (80) conditional_expression -> expression . NOT EQUALS expression
    (81) conditional_expression -> expression . LESS expression
    (82) conditional_expression -> expression . LESS EQUALS expression
    (83) conditional_expression -> expression . GREATER expression
    (84) conditional_expression -> expression . GREATER EQUALS expression
    (85) conditional_expression -> expression . AND expression
    (86) conditional_expression -> expression . OR expression

    MODULUS         reduce using rule 86 (conditional_expression -> expression OR expression .)
    ISEQUAL         reduce using rule 86 (conditional_expression -> expression OR expression .)
    NOT             reduce using rule 86 (conditional_expression -> expression OR expression .)
    AND             reduce using rule 86 (conditional_expression -> expression OR expression .)
    OR              reduce using rule 86 (conditional_expression -> expression OR expression .)
    $end            reduce using rule 86 (conditional_expression -> expression OR expression .)
    RBRACKET        reduce using rule 86 (conditional_expression -> expression OR expression .)
    SEMICOLON       reduce using rule 86 (conditional_expression -> expression OR expression .)
    RPAREN          reduce using rule 86 (conditional_expression -> expression OR expression .)
    COMMA           reduce using rule 86 (conditional_expression -> expression OR expression .)
    RBRACE          reduce using rule 86 (conditional_expression -> expression OR expression .)
    BOOLEAN         reduce using rule 86 (conditional_expression -> expression OR expression .)
    STRING          reduce using rule 86 (conditional_expression -> expression OR expression .)
    IDENTIFIER      reduce using rule 86 (conditional_expression -> expression OR expression .)
    LETTER          reduce using rule 86 (conditional_expression -> expression OR expression .)
    BOOL            reduce using rule 86 (conditional_expression -> expression OR expression .)
    INT             reduce using rule 86 (conditional_expression -> expression OR expression .)
    FLOAT           reduce using rule 86 (conditional_expression -> expression OR expression .)
    CHAR            reduce using rule 86 (conditional_expression -> expression OR expression .)
    VOID            reduce using rule 86 (conditional_expression -> expression OR expression .)
    POUND           reduce using rule 86 (conditional_expression -> expression OR expression .)
    USING           reduce using rule 86 (conditional_expression -> expression OR expression .)
    STRUCT          reduce using rule 86 (conditional_expression -> expression OR expression .)
    INTEGER         reduce using rule 86 (conditional_expression -> expression OR expression .)
    FLOATINGPOINT   reduce using rule 86 (conditional_expression -> expression OR expression .)
    EQUALS          reduce using rule 86 (conditional_expression -> expression OR expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    LESS            shift and go to state 42
    GREATER         shift and go to state 43

  ! PLUS            [ reduce using rule 86 (conditional_expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 86 (conditional_expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 86 (conditional_expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 86 (conditional_expression -> expression OR expression .) ]
  ! LESS            [ reduce using rule 86 (conditional_expression -> expression OR expression .) ]
  ! GREATER         [ reduce using rule 86 (conditional_expression -> expression OR expression .) ]
  ! MODULUS         [ shift and go to state 39 ]
  ! ISEQUAL         [ shift and go to state 40 ]
  ! NOT             [ shift and go to state 41 ]
  ! AND             [ shift and go to state 44 ]
  ! OR              [ shift and go to state 45 ]


state 79

    (36) function -> type IDENTIFIER LPAREN . argument_list_option RPAREN compound_statement
    (37) argument_list_option -> . argument_list
    (38) argument_list_option -> . empty
    (39) argument_list -> . argument_list COMMA argument
    (40) argument_list -> . argument
    (117) empty -> .
    (41) argument -> . type IDENTIFIER
    (98) type -> . BOOL
    (99) type -> . INT
    (100) type -> . FLOAT
    (101) type -> . CHAR
    (102) type -> . VOID

    RPAREN          reduce using rule 117 (empty -> .)
    BOOL            shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    CHAR            shift and go to state 23
    VOID            shift and go to state 24

    type                           shift and go to state 100
    argument_list_option           shift and go to state 101
    argument_list                  shift and go to state 102
    empty                          shift and go to state 103
    argument                       shift and go to state 104

state 80

    (6) external-declaration -> type assignment SEMICOLON .

    BOOLEAN         reduce using rule 6 (external-declaration -> type assignment SEMICOLON .)
    STRING          reduce using rule 6 (external-declaration -> type assignment SEMICOLON .)
    IDENTIFIER      reduce using rule 6 (external-declaration -> type assignment SEMICOLON .)
    LETTER          reduce using rule 6 (external-declaration -> type assignment SEMICOLON .)
    BOOL            reduce using rule 6 (external-declaration -> type assignment SEMICOLON .)
    INT             reduce using rule 6 (external-declaration -> type assignment SEMICOLON .)
    FLOAT           reduce using rule 6 (external-declaration -> type assignment SEMICOLON .)
    CHAR            reduce using rule 6 (external-declaration -> type assignment SEMICOLON .)
    VOID            reduce using rule 6 (external-declaration -> type assignment SEMICOLON .)
    POUND           reduce using rule 6 (external-declaration -> type assignment SEMICOLON .)
    USING           reduce using rule 6 (external-declaration -> type assignment SEMICOLON .)
    STRUCT          reduce using rule 6 (external-declaration -> type assignment SEMICOLON .)
    INTEGER         reduce using rule 6 (external-declaration -> type assignment SEMICOLON .)
    FLOATINGPOINT   reduce using rule 6 (external-declaration -> type assignment SEMICOLON .)
    PLUS            reduce using rule 6 (external-declaration -> type assignment SEMICOLON .)
    MINUS           reduce using rule 6 (external-declaration -> type assignment SEMICOLON .)
    NOT             reduce using rule 6 (external-declaration -> type assignment SEMICOLON .)
    $end            reduce using rule 6 (external-declaration -> type assignment SEMICOLON .)


state 81

    (8) external-declaration -> type array_usage SEMICOLON .

    BOOLEAN         reduce using rule 8 (external-declaration -> type array_usage SEMICOLON .)
    STRING          reduce using rule 8 (external-declaration -> type array_usage SEMICOLON .)
    IDENTIFIER      reduce using rule 8 (external-declaration -> type array_usage SEMICOLON .)
    LETTER          reduce using rule 8 (external-declaration -> type array_usage SEMICOLON .)
    BOOL            reduce using rule 8 (external-declaration -> type array_usage SEMICOLON .)
    INT             reduce using rule 8 (external-declaration -> type array_usage SEMICOLON .)
    FLOAT           reduce using rule 8 (external-declaration -> type array_usage SEMICOLON .)
    CHAR            reduce using rule 8 (external-declaration -> type array_usage SEMICOLON .)
    VOID            reduce using rule 8 (external-declaration -> type array_usage SEMICOLON .)
    POUND           reduce using rule 8 (external-declaration -> type array_usage SEMICOLON .)
    USING           reduce using rule 8 (external-declaration -> type array_usage SEMICOLON .)
    STRUCT          reduce using rule 8 (external-declaration -> type array_usage SEMICOLON .)
    INTEGER         reduce using rule 8 (external-declaration -> type array_usage SEMICOLON .)
    FLOATINGPOINT   reduce using rule 8 (external-declaration -> type array_usage SEMICOLON .)
    PLUS            reduce using rule 8 (external-declaration -> type array_usage SEMICOLON .)
    MINUS           reduce using rule 8 (external-declaration -> type array_usage SEMICOLON .)
    NOT             reduce using rule 8 (external-declaration -> type array_usage SEMICOLON .)
    $end            reduce using rule 8 (external-declaration -> type array_usage SEMICOLON .)


state 82

    (34) array_usage -> IDENTIFIER LBRACKET expression . RBRACKET
    (35) array_usage -> IDENTIFIER LBRACKET expression . RBRACKET LBRACE elements RBRACE
    (103) math_expression -> expression . PLUS expression
    (104) math_expression -> expression . MINUS expression
    (105) math_expression -> expression . TIMES expression
    (106) math_expression -> expression . DIVIDE expression
    (107) math_expression -> expression . MODULUS expression
    (108) math_expression -> expression . PLUS PLUS
    (109) math_expression -> expression . MINUS MINUS
    (79) conditional_expression -> expression . ISEQUAL expression
    (80) conditional_expression -> expression . NOT EQUALS expression
    (81) conditional_expression -> expression . LESS expression
    (82) conditional_expression -> expression . LESS EQUALS expression
    (83) conditional_expression -> expression . GREATER expression
    (84) conditional_expression -> expression . GREATER EQUALS expression
    (85) conditional_expression -> expression . AND expression
    (86) conditional_expression -> expression . OR expression

    RBRACKET        shift and go to state 105
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULUS         shift and go to state 39
    ISEQUAL         shift and go to state 40
    NOT             shift and go to state 41
    LESS            shift and go to state 42
    GREATER         shift and go to state 43
    AND             shift and go to state 44
    OR              shift and go to state 45


state 83

    (21) assignment -> IDENTIFIER EQUALS expression .
    (103) math_expression -> expression . PLUS expression
    (104) math_expression -> expression . MINUS expression
    (105) math_expression -> expression . TIMES expression
    (106) math_expression -> expression . DIVIDE expression
    (107) math_expression -> expression . MODULUS expression
    (108) math_expression -> expression . PLUS PLUS
    (109) math_expression -> expression . MINUS MINUS
    (79) conditional_expression -> expression . ISEQUAL expression
    (80) conditional_expression -> expression . NOT EQUALS expression
    (81) conditional_expression -> expression . LESS expression
    (82) conditional_expression -> expression . LESS EQUALS expression
    (83) conditional_expression -> expression . GREATER expression
    (84) conditional_expression -> expression . GREATER EQUALS expression
    (85) conditional_expression -> expression . AND expression
    (86) conditional_expression -> expression . OR expression

    MODULUS         reduce using rule 21 (assignment -> IDENTIFIER EQUALS expression .)
    ISEQUAL         reduce using rule 21 (assignment -> IDENTIFIER EQUALS expression .)
    NOT             reduce using rule 21 (assignment -> IDENTIFIER EQUALS expression .)
    LESS            reduce using rule 21 (assignment -> IDENTIFIER EQUALS expression .)
    GREATER         reduce using rule 21 (assignment -> IDENTIFIER EQUALS expression .)
    AND             reduce using rule 21 (assignment -> IDENTIFIER EQUALS expression .)
    OR              reduce using rule 21 (assignment -> IDENTIFIER EQUALS expression .)
    $end            reduce using rule 21 (assignment -> IDENTIFIER EQUALS expression .)
    SEMICOLON       reduce using rule 21 (assignment -> IDENTIFIER EQUALS expression .)
    RBRACKET        reduce using rule 21 (assignment -> IDENTIFIER EQUALS expression .)
    RPAREN          reduce using rule 21 (assignment -> IDENTIFIER EQUALS expression .)
    COMMA           reduce using rule 21 (assignment -> IDENTIFIER EQUALS expression .)
    RBRACE          reduce using rule 21 (assignment -> IDENTIFIER EQUALS expression .)
    BOOLEAN         reduce using rule 21 (assignment -> IDENTIFIER EQUALS expression .)
    STRING          reduce using rule 21 (assignment -> IDENTIFIER EQUALS expression .)
    IDENTIFIER      reduce using rule 21 (assignment -> IDENTIFIER EQUALS expression .)
    LETTER          reduce using rule 21 (assignment -> IDENTIFIER EQUALS expression .)
    BOOL            reduce using rule 21 (assignment -> IDENTIFIER EQUALS expression .)
    INT             reduce using rule 21 (assignment -> IDENTIFIER EQUALS expression .)
    FLOAT           reduce using rule 21 (assignment -> IDENTIFIER EQUALS expression .)
    CHAR            reduce using rule 21 (assignment -> IDENTIFIER EQUALS expression .)
    VOID            reduce using rule 21 (assignment -> IDENTIFIER EQUALS expression .)
    POUND           reduce using rule 21 (assignment -> IDENTIFIER EQUALS expression .)
    USING           reduce using rule 21 (assignment -> IDENTIFIER EQUALS expression .)
    STRUCT          reduce using rule 21 (assignment -> IDENTIFIER EQUALS expression .)
    INTEGER         reduce using rule 21 (assignment -> IDENTIFIER EQUALS expression .)
    FLOATINGPOINT   reduce using rule 21 (assignment -> IDENTIFIER EQUALS expression .)
    EQUALS          reduce using rule 21 (assignment -> IDENTIFIER EQUALS expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38

  ! PLUS            [ reduce using rule 21 (assignment -> IDENTIFIER EQUALS expression .) ]
  ! MINUS           [ reduce using rule 21 (assignment -> IDENTIFIER EQUALS expression .) ]
  ! TIMES           [ reduce using rule 21 (assignment -> IDENTIFIER EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 21 (assignment -> IDENTIFIER EQUALS expression .) ]
  ! MODULUS         [ shift and go to state 39 ]
  ! ISEQUAL         [ shift and go to state 40 ]
  ! NOT             [ shift and go to state 41 ]
  ! LESS            [ shift and go to state 42 ]
  ! GREATER         [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]
  ! OR              [ shift and go to state 45 ]


state 84

    (22) assignment -> IDENTIFIER PLUS EQUALS . expression
    (88) expression -> . BOOLEAN
    (89) expression -> . number
    (90) expression -> . STRING
    (91) expression -> . IDENTIFIER
    (92) expression -> . LETTER
    (93) expression -> . assignment
    (94) expression -> . array_usage
    (95) expression -> . function_call
    (96) expression -> . math_expression
    (97) expression -> . conditional_expression
    (32) number -> . INTEGER
    (33) number -> . FLOATINGPOINT
    (21) assignment -> . IDENTIFIER EQUALS expression
    (22) assignment -> . IDENTIFIER PLUS EQUALS expression
    (23) assignment -> . IDENTIFIER MINUS EQUALS expression
    (34) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (35) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN RPAREN
    (28) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (29) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (103) math_expression -> . expression PLUS expression
    (104) math_expression -> . expression MINUS expression
    (105) math_expression -> . expression TIMES expression
    (106) math_expression -> . expression DIVIDE expression
    (107) math_expression -> . expression MODULUS expression
    (108) math_expression -> . expression PLUS PLUS
    (109) math_expression -> . expression MINUS MINUS
    (110) math_expression -> . PLUS PLUS expression
    (111) math_expression -> . MINUS MINUS expression
    (79) conditional_expression -> . expression ISEQUAL expression
    (80) conditional_expression -> . expression NOT EQUALS expression
    (81) conditional_expression -> . expression LESS expression
    (82) conditional_expression -> . expression LESS EQUALS expression
    (83) conditional_expression -> . expression GREATER expression
    (84) conditional_expression -> . expression GREATER EQUALS expression
    (85) conditional_expression -> . expression AND expression
    (86) conditional_expression -> . expression OR expression
    (87) conditional_expression -> . NOT expression

    BOOLEAN         shift and go to state 13
    STRING          shift and go to state 15
    IDENTIFIER      shift and go to state 62
    LETTER          shift and go to state 16
    INTEGER         shift and go to state 28
    FLOATINGPOINT   shift and go to state 29
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    NOT             shift and go to state 32

    expression                     shift and go to state 106
    number                         shift and go to state 14
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 63
    function_call                  shift and go to state 17
    math_expression                shift and go to state 18
    conditional_expression         shift and go to state 19

state 85

    (23) assignment -> IDENTIFIER MINUS EQUALS . expression
    (88) expression -> . BOOLEAN
    (89) expression -> . number
    (90) expression -> . STRING
    (91) expression -> . IDENTIFIER
    (92) expression -> . LETTER
    (93) expression -> . assignment
    (94) expression -> . array_usage
    (95) expression -> . function_call
    (96) expression -> . math_expression
    (97) expression -> . conditional_expression
    (32) number -> . INTEGER
    (33) number -> . FLOATINGPOINT
    (21) assignment -> . IDENTIFIER EQUALS expression
    (22) assignment -> . IDENTIFIER PLUS EQUALS expression
    (23) assignment -> . IDENTIFIER MINUS EQUALS expression
    (34) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (35) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN RPAREN
    (28) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (29) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (103) math_expression -> . expression PLUS expression
    (104) math_expression -> . expression MINUS expression
    (105) math_expression -> . expression TIMES expression
    (106) math_expression -> . expression DIVIDE expression
    (107) math_expression -> . expression MODULUS expression
    (108) math_expression -> . expression PLUS PLUS
    (109) math_expression -> . expression MINUS MINUS
    (110) math_expression -> . PLUS PLUS expression
    (111) math_expression -> . MINUS MINUS expression
    (79) conditional_expression -> . expression ISEQUAL expression
    (80) conditional_expression -> . expression NOT EQUALS expression
    (81) conditional_expression -> . expression LESS expression
    (82) conditional_expression -> . expression LESS EQUALS expression
    (83) conditional_expression -> . expression GREATER expression
    (84) conditional_expression -> . expression GREATER EQUALS expression
    (85) conditional_expression -> . expression AND expression
    (86) conditional_expression -> . expression OR expression
    (87) conditional_expression -> . NOT expression

    BOOLEAN         shift and go to state 13
    STRING          shift and go to state 15
    IDENTIFIER      shift and go to state 62
    LETTER          shift and go to state 16
    INTEGER         shift and go to state 28
    FLOATINGPOINT   shift and go to state 29
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    NOT             shift and go to state 32

    expression                     shift and go to state 107
    number                         shift and go to state 14
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 63
    function_call                  shift and go to state 17
    math_expression                shift and go to state 18
    conditional_expression         shift and go to state 19

state 86

    (27) function_call -> IDENTIFIER LPAREN RPAREN .

    PLUS            reduce using rule 27 (function_call -> IDENTIFIER LPAREN RPAREN .)
    MINUS           reduce using rule 27 (function_call -> IDENTIFIER LPAREN RPAREN .)
    TIMES           reduce using rule 27 (function_call -> IDENTIFIER LPAREN RPAREN .)
    DIVIDE          reduce using rule 27 (function_call -> IDENTIFIER LPAREN RPAREN .)
    MODULUS         reduce using rule 27 (function_call -> IDENTIFIER LPAREN RPAREN .)
    ISEQUAL         reduce using rule 27 (function_call -> IDENTIFIER LPAREN RPAREN .)
    NOT             reduce using rule 27 (function_call -> IDENTIFIER LPAREN RPAREN .)
    LESS            reduce using rule 27 (function_call -> IDENTIFIER LPAREN RPAREN .)
    GREATER         reduce using rule 27 (function_call -> IDENTIFIER LPAREN RPAREN .)
    AND             reduce using rule 27 (function_call -> IDENTIFIER LPAREN RPAREN .)
    OR              reduce using rule 27 (function_call -> IDENTIFIER LPAREN RPAREN .)
    $end            reduce using rule 27 (function_call -> IDENTIFIER LPAREN RPAREN .)
    RBRACKET        reduce using rule 27 (function_call -> IDENTIFIER LPAREN RPAREN .)
    SEMICOLON       reduce using rule 27 (function_call -> IDENTIFIER LPAREN RPAREN .)
    RPAREN          reduce using rule 27 (function_call -> IDENTIFIER LPAREN RPAREN .)
    COMMA           reduce using rule 27 (function_call -> IDENTIFIER LPAREN RPAREN .)
    RBRACE          reduce using rule 27 (function_call -> IDENTIFIER LPAREN RPAREN .)
    BOOLEAN         reduce using rule 27 (function_call -> IDENTIFIER LPAREN RPAREN .)
    STRING          reduce using rule 27 (function_call -> IDENTIFIER LPAREN RPAREN .)
    IDENTIFIER      reduce using rule 27 (function_call -> IDENTIFIER LPAREN RPAREN .)
    LETTER          reduce using rule 27 (function_call -> IDENTIFIER LPAREN RPAREN .)
    BOOL            reduce using rule 27 (function_call -> IDENTIFIER LPAREN RPAREN .)
    INT             reduce using rule 27 (function_call -> IDENTIFIER LPAREN RPAREN .)
    FLOAT           reduce using rule 27 (function_call -> IDENTIFIER LPAREN RPAREN .)
    CHAR            reduce using rule 27 (function_call -> IDENTIFIER LPAREN RPAREN .)
    VOID            reduce using rule 27 (function_call -> IDENTIFIER LPAREN RPAREN .)
    POUND           reduce using rule 27 (function_call -> IDENTIFIER LPAREN RPAREN .)
    USING           reduce using rule 27 (function_call -> IDENTIFIER LPAREN RPAREN .)
    STRUCT          reduce using rule 27 (function_call -> IDENTIFIER LPAREN RPAREN .)
    INTEGER         reduce using rule 27 (function_call -> IDENTIFIER LPAREN RPAREN .)
    FLOATINGPOINT   reduce using rule 27 (function_call -> IDENTIFIER LPAREN RPAREN .)
    EQUALS          reduce using rule 27 (function_call -> IDENTIFIER LPAREN RPAREN .)


state 87

    (28) function_call -> IDENTIFIER LPAREN expression . RPAREN
    (103) math_expression -> expression . PLUS expression
    (104) math_expression -> expression . MINUS expression
    (105) math_expression -> expression . TIMES expression
    (106) math_expression -> expression . DIVIDE expression
    (107) math_expression -> expression . MODULUS expression
    (108) math_expression -> expression . PLUS PLUS
    (109) math_expression -> expression . MINUS MINUS
    (79) conditional_expression -> expression . ISEQUAL expression
    (80) conditional_expression -> expression . NOT EQUALS expression
    (81) conditional_expression -> expression . LESS expression
    (82) conditional_expression -> expression . LESS EQUALS expression
    (83) conditional_expression -> expression . GREATER expression
    (84) conditional_expression -> expression . GREATER EQUALS expression
    (85) conditional_expression -> expression . AND expression
    (86) conditional_expression -> expression . OR expression

    RPAREN          shift and go to state 108
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULUS         shift and go to state 39
    ISEQUAL         shift and go to state 40
    NOT             shift and go to state 41
    LESS            shift and go to state 42
    GREATER         shift and go to state 43
    AND             shift and go to state 44
    OR              shift and go to state 45


state 88

    (29) function_call -> IDENTIFIER LPAREN elements . RPAREN

    RPAREN          shift and go to state 109


state 89

    (30) elements -> COMMA . expression
    (31) elements -> COMMA . expression elements
    (88) expression -> . BOOLEAN
    (89) expression -> . number
    (90) expression -> . STRING
    (91) expression -> . IDENTIFIER
    (92) expression -> . LETTER
    (93) expression -> . assignment
    (94) expression -> . array_usage
    (95) expression -> . function_call
    (96) expression -> . math_expression
    (97) expression -> . conditional_expression
    (32) number -> . INTEGER
    (33) number -> . FLOATINGPOINT
    (21) assignment -> . IDENTIFIER EQUALS expression
    (22) assignment -> . IDENTIFIER PLUS EQUALS expression
    (23) assignment -> . IDENTIFIER MINUS EQUALS expression
    (34) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (35) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN RPAREN
    (28) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (29) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (103) math_expression -> . expression PLUS expression
    (104) math_expression -> . expression MINUS expression
    (105) math_expression -> . expression TIMES expression
    (106) math_expression -> . expression DIVIDE expression
    (107) math_expression -> . expression MODULUS expression
    (108) math_expression -> . expression PLUS PLUS
    (109) math_expression -> . expression MINUS MINUS
    (110) math_expression -> . PLUS PLUS expression
    (111) math_expression -> . MINUS MINUS expression
    (79) conditional_expression -> . expression ISEQUAL expression
    (80) conditional_expression -> . expression NOT EQUALS expression
    (81) conditional_expression -> . expression LESS expression
    (82) conditional_expression -> . expression LESS EQUALS expression
    (83) conditional_expression -> . expression GREATER expression
    (84) conditional_expression -> . expression GREATER EQUALS expression
    (85) conditional_expression -> . expression AND expression
    (86) conditional_expression -> . expression OR expression
    (87) conditional_expression -> . NOT expression

    BOOLEAN         shift and go to state 13
    STRING          shift and go to state 15
    IDENTIFIER      shift and go to state 62
    LETTER          shift and go to state 16
    INTEGER         shift and go to state 28
    FLOATINGPOINT   shift and go to state 29
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    NOT             shift and go to state 32

    expression                     shift and go to state 110
    number                         shift and go to state 14
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 63
    function_call                  shift and go to state 17
    math_expression                shift and go to state 18
    conditional_expression         shift and go to state 19

state 90

    (112) macro_definition -> POUND DEFINE IDENTIFIER . assignment
    (21) assignment -> . IDENTIFIER EQUALS expression
    (22) assignment -> . IDENTIFIER PLUS EQUALS expression
    (23) assignment -> . IDENTIFIER MINUS EQUALS expression

    IDENTIFIER      shift and go to state 111

    assignment                     shift and go to state 112

state 91

    (113) file_inclusion -> POUND INCLUDE LESS . HEADER GREATER
    (115) file_inclusion -> POUND INCLUDE LESS . IDENTIFIER GREATER

    HEADER          shift and go to state 113
    IDENTIFIER      shift and go to state 114


state 92

    (114) file_inclusion -> POUND INCLUDE QUOTE . HEADER QUOTE
    (116) file_inclusion -> POUND INCLUDE QUOTE . IDENTIFIER QUOTE

    HEADER          shift and go to state 115
    IDENTIFIER      shift and go to state 116


state 93

    (55) namespace_statement -> USING NAMESPACE IDENTIFIER . SEMICOLON

    SEMICOLON       shift and go to state 117


state 94

    (51) struct -> STRUCT IDENTIFIER LBRACE . declaration_list RBRACE
    (52) struct -> STRUCT IDENTIFIER LBRACE . declaration_list RBRACE IDENTIFIER SEMICOLON
    (53) declaration_list -> . declaration declaration_list
    (54) declaration_list -> . empty
    (13) declaration -> . type IDENTIFIER SEMICOLON
    (14) declaration -> . type IDENTIFIER identifiers SEMICOLON
    (15) declaration -> . type assignment SEMICOLON
    (16) declaration -> . assignment SEMICOLON
    (17) declaration -> . function_call SEMICOLON
    (18) declaration -> . array_usage SEMICOLON
    (19) declaration -> . type array_usage SEMICOLON
    (20) declaration -> . struct
    (117) empty -> .
    (98) type -> . BOOL
    (99) type -> . INT
    (100) type -> . FLOAT
    (101) type -> . CHAR
    (102) type -> . VOID
    (21) assignment -> . IDENTIFIER EQUALS expression
    (22) assignment -> . IDENTIFIER PLUS EQUALS expression
    (23) assignment -> . IDENTIFIER MINUS EQUALS expression
    (27) function_call -> . IDENTIFIER LPAREN RPAREN
    (28) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (29) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (34) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (35) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE
    (51) struct -> . STRUCT IDENTIFIER LBRACE declaration_list RBRACE
    (52) struct -> . STRUCT IDENTIFIER LBRACE declaration_list RBRACE IDENTIFIER SEMICOLON

    RBRACE          reduce using rule 117 (empty -> .)
    BOOL            shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    CHAR            shift and go to state 23
    VOID            shift and go to state 24
    IDENTIFIER      shift and go to state 118
    STRUCT          shift and go to state 27

    declaration_list               shift and go to state 119
    declaration                    shift and go to state 120
    empty                          shift and go to state 121
    type                           shift and go to state 122
    assignment                     shift and go to state 123
    function_call                  shift and go to state 124
    array_usage                    shift and go to state 125
    struct                         shift and go to state 126

state 95

    (110) math_expression -> PLUS PLUS expression .
    (103) math_expression -> expression . PLUS expression
    (104) math_expression -> expression . MINUS expression
    (105) math_expression -> expression . TIMES expression
    (106) math_expression -> expression . DIVIDE expression
    (107) math_expression -> expression . MODULUS expression
    (108) math_expression -> expression . PLUS PLUS
    (109) math_expression -> expression . MINUS MINUS
    (79) conditional_expression -> expression . ISEQUAL expression
    (80) conditional_expression -> expression . NOT EQUALS expression
    (81) conditional_expression -> expression . LESS expression
    (82) conditional_expression -> expression . LESS EQUALS expression
    (83) conditional_expression -> expression . GREATER expression
    (84) conditional_expression -> expression . GREATER EQUALS expression
    (85) conditional_expression -> expression . AND expression
    (86) conditional_expression -> expression . OR expression

    PLUS            reduce using rule 110 (math_expression -> PLUS PLUS expression .)
    MINUS           reduce using rule 110 (math_expression -> PLUS PLUS expression .)
    MODULUS         reduce using rule 110 (math_expression -> PLUS PLUS expression .)
    ISEQUAL         reduce using rule 110 (math_expression -> PLUS PLUS expression .)
    NOT             reduce using rule 110 (math_expression -> PLUS PLUS expression .)
    LESS            reduce using rule 110 (math_expression -> PLUS PLUS expression .)
    GREATER         reduce using rule 110 (math_expression -> PLUS PLUS expression .)
    AND             reduce using rule 110 (math_expression -> PLUS PLUS expression .)
    OR              reduce using rule 110 (math_expression -> PLUS PLUS expression .)
    $end            reduce using rule 110 (math_expression -> PLUS PLUS expression .)
    RBRACKET        reduce using rule 110 (math_expression -> PLUS PLUS expression .)
    SEMICOLON       reduce using rule 110 (math_expression -> PLUS PLUS expression .)
    RPAREN          reduce using rule 110 (math_expression -> PLUS PLUS expression .)
    COMMA           reduce using rule 110 (math_expression -> PLUS PLUS expression .)
    RBRACE          reduce using rule 110 (math_expression -> PLUS PLUS expression .)
    BOOLEAN         reduce using rule 110 (math_expression -> PLUS PLUS expression .)
    STRING          reduce using rule 110 (math_expression -> PLUS PLUS expression .)
    IDENTIFIER      reduce using rule 110 (math_expression -> PLUS PLUS expression .)
    LETTER          reduce using rule 110 (math_expression -> PLUS PLUS expression .)
    BOOL            reduce using rule 110 (math_expression -> PLUS PLUS expression .)
    INT             reduce using rule 110 (math_expression -> PLUS PLUS expression .)
    FLOAT           reduce using rule 110 (math_expression -> PLUS PLUS expression .)
    CHAR            reduce using rule 110 (math_expression -> PLUS PLUS expression .)
    VOID            reduce using rule 110 (math_expression -> PLUS PLUS expression .)
    POUND           reduce using rule 110 (math_expression -> PLUS PLUS expression .)
    USING           reduce using rule 110 (math_expression -> PLUS PLUS expression .)
    STRUCT          reduce using rule 110 (math_expression -> PLUS PLUS expression .)
    INTEGER         reduce using rule 110 (math_expression -> PLUS PLUS expression .)
    FLOATINGPOINT   reduce using rule 110 (math_expression -> PLUS PLUS expression .)
    EQUALS          reduce using rule 110 (math_expression -> PLUS PLUS expression .)
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38

  ! TIMES           [ reduce using rule 110 (math_expression -> PLUS PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 110 (math_expression -> PLUS PLUS expression .) ]
  ! PLUS            [ shift and go to state 35 ]
  ! MINUS           [ shift and go to state 36 ]
  ! MODULUS         [ shift and go to state 39 ]
  ! ISEQUAL         [ shift and go to state 40 ]
  ! NOT             [ shift and go to state 41 ]
  ! LESS            [ shift and go to state 42 ]
  ! GREATER         [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]
  ! OR              [ shift and go to state 45 ]


state 96

    (111) math_expression -> MINUS MINUS expression .
    (103) math_expression -> expression . PLUS expression
    (104) math_expression -> expression . MINUS expression
    (105) math_expression -> expression . TIMES expression
    (106) math_expression -> expression . DIVIDE expression
    (107) math_expression -> expression . MODULUS expression
    (108) math_expression -> expression . PLUS PLUS
    (109) math_expression -> expression . MINUS MINUS
    (79) conditional_expression -> expression . ISEQUAL expression
    (80) conditional_expression -> expression . NOT EQUALS expression
    (81) conditional_expression -> expression . LESS expression
    (82) conditional_expression -> expression . LESS EQUALS expression
    (83) conditional_expression -> expression . GREATER expression
    (84) conditional_expression -> expression . GREATER EQUALS expression
    (85) conditional_expression -> expression . AND expression
    (86) conditional_expression -> expression . OR expression

    PLUS            reduce using rule 111 (math_expression -> MINUS MINUS expression .)
    MINUS           reduce using rule 111 (math_expression -> MINUS MINUS expression .)
    MODULUS         reduce using rule 111 (math_expression -> MINUS MINUS expression .)
    ISEQUAL         reduce using rule 111 (math_expression -> MINUS MINUS expression .)
    NOT             reduce using rule 111 (math_expression -> MINUS MINUS expression .)
    LESS            reduce using rule 111 (math_expression -> MINUS MINUS expression .)
    GREATER         reduce using rule 111 (math_expression -> MINUS MINUS expression .)
    AND             reduce using rule 111 (math_expression -> MINUS MINUS expression .)
    OR              reduce using rule 111 (math_expression -> MINUS MINUS expression .)
    $end            reduce using rule 111 (math_expression -> MINUS MINUS expression .)
    RBRACKET        reduce using rule 111 (math_expression -> MINUS MINUS expression .)
    SEMICOLON       reduce using rule 111 (math_expression -> MINUS MINUS expression .)
    RPAREN          reduce using rule 111 (math_expression -> MINUS MINUS expression .)
    COMMA           reduce using rule 111 (math_expression -> MINUS MINUS expression .)
    RBRACE          reduce using rule 111 (math_expression -> MINUS MINUS expression .)
    BOOLEAN         reduce using rule 111 (math_expression -> MINUS MINUS expression .)
    STRING          reduce using rule 111 (math_expression -> MINUS MINUS expression .)
    IDENTIFIER      reduce using rule 111 (math_expression -> MINUS MINUS expression .)
    LETTER          reduce using rule 111 (math_expression -> MINUS MINUS expression .)
    BOOL            reduce using rule 111 (math_expression -> MINUS MINUS expression .)
    INT             reduce using rule 111 (math_expression -> MINUS MINUS expression .)
    FLOAT           reduce using rule 111 (math_expression -> MINUS MINUS expression .)
    CHAR            reduce using rule 111 (math_expression -> MINUS MINUS expression .)
    VOID            reduce using rule 111 (math_expression -> MINUS MINUS expression .)
    POUND           reduce using rule 111 (math_expression -> MINUS MINUS expression .)
    USING           reduce using rule 111 (math_expression -> MINUS MINUS expression .)
    STRUCT          reduce using rule 111 (math_expression -> MINUS MINUS expression .)
    INTEGER         reduce using rule 111 (math_expression -> MINUS MINUS expression .)
    FLOATINGPOINT   reduce using rule 111 (math_expression -> MINUS MINUS expression .)
    EQUALS          reduce using rule 111 (math_expression -> MINUS MINUS expression .)
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38

  ! TIMES           [ reduce using rule 111 (math_expression -> MINUS MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 111 (math_expression -> MINUS MINUS expression .) ]
  ! PLUS            [ shift and go to state 35 ]
  ! MINUS           [ shift and go to state 36 ]
  ! MODULUS         [ shift and go to state 39 ]
  ! ISEQUAL         [ shift and go to state 40 ]
  ! NOT             [ shift and go to state 41 ]
  ! LESS            [ shift and go to state 42 ]
  ! GREATER         [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]
  ! OR              [ shift and go to state 45 ]


state 97

    (80) conditional_expression -> expression NOT EQUALS expression .
    (103) math_expression -> expression . PLUS expression
    (104) math_expression -> expression . MINUS expression
    (105) math_expression -> expression . TIMES expression
    (106) math_expression -> expression . DIVIDE expression
    (107) math_expression -> expression . MODULUS expression
    (108) math_expression -> expression . PLUS PLUS
    (109) math_expression -> expression . MINUS MINUS
    (79) conditional_expression -> expression . ISEQUAL expression
    (80) conditional_expression -> expression . NOT EQUALS expression
    (81) conditional_expression -> expression . LESS expression
    (82) conditional_expression -> expression . LESS EQUALS expression
    (83) conditional_expression -> expression . GREATER expression
    (84) conditional_expression -> expression . GREATER EQUALS expression
    (85) conditional_expression -> expression . AND expression
    (86) conditional_expression -> expression . OR expression

    MODULUS         reduce using rule 80 (conditional_expression -> expression NOT EQUALS expression .)
    ISEQUAL         reduce using rule 80 (conditional_expression -> expression NOT EQUALS expression .)
    NOT             reduce using rule 80 (conditional_expression -> expression NOT EQUALS expression .)
    LESS            reduce using rule 80 (conditional_expression -> expression NOT EQUALS expression .)
    GREATER         reduce using rule 80 (conditional_expression -> expression NOT EQUALS expression .)
    AND             reduce using rule 80 (conditional_expression -> expression NOT EQUALS expression .)
    OR              reduce using rule 80 (conditional_expression -> expression NOT EQUALS expression .)
    $end            reduce using rule 80 (conditional_expression -> expression NOT EQUALS expression .)
    RBRACKET        reduce using rule 80 (conditional_expression -> expression NOT EQUALS expression .)
    SEMICOLON       reduce using rule 80 (conditional_expression -> expression NOT EQUALS expression .)
    RPAREN          reduce using rule 80 (conditional_expression -> expression NOT EQUALS expression .)
    COMMA           reduce using rule 80 (conditional_expression -> expression NOT EQUALS expression .)
    RBRACE          reduce using rule 80 (conditional_expression -> expression NOT EQUALS expression .)
    BOOLEAN         reduce using rule 80 (conditional_expression -> expression NOT EQUALS expression .)
    STRING          reduce using rule 80 (conditional_expression -> expression NOT EQUALS expression .)
    IDENTIFIER      reduce using rule 80 (conditional_expression -> expression NOT EQUALS expression .)
    LETTER          reduce using rule 80 (conditional_expression -> expression NOT EQUALS expression .)
    BOOL            reduce using rule 80 (conditional_expression -> expression NOT EQUALS expression .)
    INT             reduce using rule 80 (conditional_expression -> expression NOT EQUALS expression .)
    FLOAT           reduce using rule 80 (conditional_expression -> expression NOT EQUALS expression .)
    CHAR            reduce using rule 80 (conditional_expression -> expression NOT EQUALS expression .)
    VOID            reduce using rule 80 (conditional_expression -> expression NOT EQUALS expression .)
    POUND           reduce using rule 80 (conditional_expression -> expression NOT EQUALS expression .)
    USING           reduce using rule 80 (conditional_expression -> expression NOT EQUALS expression .)
    STRUCT          reduce using rule 80 (conditional_expression -> expression NOT EQUALS expression .)
    INTEGER         reduce using rule 80 (conditional_expression -> expression NOT EQUALS expression .)
    FLOATINGPOINT   reduce using rule 80 (conditional_expression -> expression NOT EQUALS expression .)
    EQUALS          reduce using rule 80 (conditional_expression -> expression NOT EQUALS expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38

  ! PLUS            [ reduce using rule 80 (conditional_expression -> expression NOT EQUALS expression .) ]
  ! MINUS           [ reduce using rule 80 (conditional_expression -> expression NOT EQUALS expression .) ]
  ! TIMES           [ reduce using rule 80 (conditional_expression -> expression NOT EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 80 (conditional_expression -> expression NOT EQUALS expression .) ]
  ! MODULUS         [ shift and go to state 39 ]
  ! ISEQUAL         [ shift and go to state 40 ]
  ! NOT             [ shift and go to state 41 ]
  ! LESS            [ shift and go to state 42 ]
  ! GREATER         [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]
  ! OR              [ shift and go to state 45 ]


state 98

    (82) conditional_expression -> expression LESS EQUALS expression .
    (103) math_expression -> expression . PLUS expression
    (104) math_expression -> expression . MINUS expression
    (105) math_expression -> expression . TIMES expression
    (106) math_expression -> expression . DIVIDE expression
    (107) math_expression -> expression . MODULUS expression
    (108) math_expression -> expression . PLUS PLUS
    (109) math_expression -> expression . MINUS MINUS
    (79) conditional_expression -> expression . ISEQUAL expression
    (80) conditional_expression -> expression . NOT EQUALS expression
    (81) conditional_expression -> expression . LESS expression
    (82) conditional_expression -> expression . LESS EQUALS expression
    (83) conditional_expression -> expression . GREATER expression
    (84) conditional_expression -> expression . GREATER EQUALS expression
    (85) conditional_expression -> expression . AND expression
    (86) conditional_expression -> expression . OR expression

    MODULUS         reduce using rule 82 (conditional_expression -> expression LESS EQUALS expression .)
    ISEQUAL         reduce using rule 82 (conditional_expression -> expression LESS EQUALS expression .)
    NOT             reduce using rule 82 (conditional_expression -> expression LESS EQUALS expression .)
    LESS            reduce using rule 82 (conditional_expression -> expression LESS EQUALS expression .)
    GREATER         reduce using rule 82 (conditional_expression -> expression LESS EQUALS expression .)
    AND             reduce using rule 82 (conditional_expression -> expression LESS EQUALS expression .)
    OR              reduce using rule 82 (conditional_expression -> expression LESS EQUALS expression .)
    $end            reduce using rule 82 (conditional_expression -> expression LESS EQUALS expression .)
    RBRACKET        reduce using rule 82 (conditional_expression -> expression LESS EQUALS expression .)
    SEMICOLON       reduce using rule 82 (conditional_expression -> expression LESS EQUALS expression .)
    RPAREN          reduce using rule 82 (conditional_expression -> expression LESS EQUALS expression .)
    COMMA           reduce using rule 82 (conditional_expression -> expression LESS EQUALS expression .)
    RBRACE          reduce using rule 82 (conditional_expression -> expression LESS EQUALS expression .)
    BOOLEAN         reduce using rule 82 (conditional_expression -> expression LESS EQUALS expression .)
    STRING          reduce using rule 82 (conditional_expression -> expression LESS EQUALS expression .)
    IDENTIFIER      reduce using rule 82 (conditional_expression -> expression LESS EQUALS expression .)
    LETTER          reduce using rule 82 (conditional_expression -> expression LESS EQUALS expression .)
    BOOL            reduce using rule 82 (conditional_expression -> expression LESS EQUALS expression .)
    INT             reduce using rule 82 (conditional_expression -> expression LESS EQUALS expression .)
    FLOAT           reduce using rule 82 (conditional_expression -> expression LESS EQUALS expression .)
    CHAR            reduce using rule 82 (conditional_expression -> expression LESS EQUALS expression .)
    VOID            reduce using rule 82 (conditional_expression -> expression LESS EQUALS expression .)
    POUND           reduce using rule 82 (conditional_expression -> expression LESS EQUALS expression .)
    USING           reduce using rule 82 (conditional_expression -> expression LESS EQUALS expression .)
    STRUCT          reduce using rule 82 (conditional_expression -> expression LESS EQUALS expression .)
    INTEGER         reduce using rule 82 (conditional_expression -> expression LESS EQUALS expression .)
    FLOATINGPOINT   reduce using rule 82 (conditional_expression -> expression LESS EQUALS expression .)
    EQUALS          reduce using rule 82 (conditional_expression -> expression LESS EQUALS expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38

  ! PLUS            [ reduce using rule 82 (conditional_expression -> expression LESS EQUALS expression .) ]
  ! MINUS           [ reduce using rule 82 (conditional_expression -> expression LESS EQUALS expression .) ]
  ! TIMES           [ reduce using rule 82 (conditional_expression -> expression LESS EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 82 (conditional_expression -> expression LESS EQUALS expression .) ]
  ! MODULUS         [ shift and go to state 39 ]
  ! ISEQUAL         [ shift and go to state 40 ]
  ! NOT             [ shift and go to state 41 ]
  ! LESS            [ shift and go to state 42 ]
  ! GREATER         [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]
  ! OR              [ shift and go to state 45 ]


state 99

    (84) conditional_expression -> expression GREATER EQUALS expression .
    (103) math_expression -> expression . PLUS expression
    (104) math_expression -> expression . MINUS expression
    (105) math_expression -> expression . TIMES expression
    (106) math_expression -> expression . DIVIDE expression
    (107) math_expression -> expression . MODULUS expression
    (108) math_expression -> expression . PLUS PLUS
    (109) math_expression -> expression . MINUS MINUS
    (79) conditional_expression -> expression . ISEQUAL expression
    (80) conditional_expression -> expression . NOT EQUALS expression
    (81) conditional_expression -> expression . LESS expression
    (82) conditional_expression -> expression . LESS EQUALS expression
    (83) conditional_expression -> expression . GREATER expression
    (84) conditional_expression -> expression . GREATER EQUALS expression
    (85) conditional_expression -> expression . AND expression
    (86) conditional_expression -> expression . OR expression

    MODULUS         reduce using rule 84 (conditional_expression -> expression GREATER EQUALS expression .)
    ISEQUAL         reduce using rule 84 (conditional_expression -> expression GREATER EQUALS expression .)
    NOT             reduce using rule 84 (conditional_expression -> expression GREATER EQUALS expression .)
    LESS            reduce using rule 84 (conditional_expression -> expression GREATER EQUALS expression .)
    GREATER         reduce using rule 84 (conditional_expression -> expression GREATER EQUALS expression .)
    AND             reduce using rule 84 (conditional_expression -> expression GREATER EQUALS expression .)
    OR              reduce using rule 84 (conditional_expression -> expression GREATER EQUALS expression .)
    $end            reduce using rule 84 (conditional_expression -> expression GREATER EQUALS expression .)
    RBRACKET        reduce using rule 84 (conditional_expression -> expression GREATER EQUALS expression .)
    SEMICOLON       reduce using rule 84 (conditional_expression -> expression GREATER EQUALS expression .)
    RPAREN          reduce using rule 84 (conditional_expression -> expression GREATER EQUALS expression .)
    COMMA           reduce using rule 84 (conditional_expression -> expression GREATER EQUALS expression .)
    RBRACE          reduce using rule 84 (conditional_expression -> expression GREATER EQUALS expression .)
    BOOLEAN         reduce using rule 84 (conditional_expression -> expression GREATER EQUALS expression .)
    STRING          reduce using rule 84 (conditional_expression -> expression GREATER EQUALS expression .)
    IDENTIFIER      reduce using rule 84 (conditional_expression -> expression GREATER EQUALS expression .)
    LETTER          reduce using rule 84 (conditional_expression -> expression GREATER EQUALS expression .)
    BOOL            reduce using rule 84 (conditional_expression -> expression GREATER EQUALS expression .)
    INT             reduce using rule 84 (conditional_expression -> expression GREATER EQUALS expression .)
    FLOAT           reduce using rule 84 (conditional_expression -> expression GREATER EQUALS expression .)
    CHAR            reduce using rule 84 (conditional_expression -> expression GREATER EQUALS expression .)
    VOID            reduce using rule 84 (conditional_expression -> expression GREATER EQUALS expression .)
    POUND           reduce using rule 84 (conditional_expression -> expression GREATER EQUALS expression .)
    USING           reduce using rule 84 (conditional_expression -> expression GREATER EQUALS expression .)
    STRUCT          reduce using rule 84 (conditional_expression -> expression GREATER EQUALS expression .)
    INTEGER         reduce using rule 84 (conditional_expression -> expression GREATER EQUALS expression .)
    FLOATINGPOINT   reduce using rule 84 (conditional_expression -> expression GREATER EQUALS expression .)
    EQUALS          reduce using rule 84 (conditional_expression -> expression GREATER EQUALS expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38

  ! PLUS            [ reduce using rule 84 (conditional_expression -> expression GREATER EQUALS expression .) ]
  ! MINUS           [ reduce using rule 84 (conditional_expression -> expression GREATER EQUALS expression .) ]
  ! TIMES           [ reduce using rule 84 (conditional_expression -> expression GREATER EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 84 (conditional_expression -> expression GREATER EQUALS expression .) ]
  ! MODULUS         [ shift and go to state 39 ]
  ! ISEQUAL         [ shift and go to state 40 ]
  ! NOT             [ shift and go to state 41 ]
  ! LESS            [ shift and go to state 42 ]
  ! GREATER         [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]
  ! OR              [ shift and go to state 45 ]


state 100

    (41) argument -> type . IDENTIFIER

    IDENTIFIER      shift and go to state 127


state 101

    (36) function -> type IDENTIFIER LPAREN argument_list_option . RPAREN compound_statement

    RPAREN          shift and go to state 128


state 102

    (37) argument_list_option -> argument_list .
    (39) argument_list -> argument_list . COMMA argument

    RPAREN          reduce using rule 37 (argument_list_option -> argument_list .)
    COMMA           shift and go to state 129


state 103

    (38) argument_list_option -> empty .

    RPAREN          reduce using rule 38 (argument_list_option -> empty .)


state 104

    (40) argument_list -> argument .

    COMMA           reduce using rule 40 (argument_list -> argument .)
    RPAREN          reduce using rule 40 (argument_list -> argument .)


state 105

    (34) array_usage -> IDENTIFIER LBRACKET expression RBRACKET .
    (35) array_usage -> IDENTIFIER LBRACKET expression RBRACKET . LBRACE elements RBRACE

    SEMICOLON       reduce using rule 34 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 34 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 34 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 34 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 34 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    MODULUS         reduce using rule 34 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    ISEQUAL         reduce using rule 34 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    NOT             reduce using rule 34 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    LESS            reduce using rule 34 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    GREATER         reduce using rule 34 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    AND             reduce using rule 34 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    OR              reduce using rule 34 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    $end            reduce using rule 34 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 34 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 34 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 34 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    RBRACE          reduce using rule 34 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    BOOLEAN         reduce using rule 34 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    STRING          reduce using rule 34 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    IDENTIFIER      reduce using rule 34 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    LETTER          reduce using rule 34 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    BOOL            reduce using rule 34 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    INT             reduce using rule 34 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    FLOAT           reduce using rule 34 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    CHAR            reduce using rule 34 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    VOID            reduce using rule 34 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    POUND           reduce using rule 34 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    USING           reduce using rule 34 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    STRUCT          reduce using rule 34 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    INTEGER         reduce using rule 34 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    FLOATINGPOINT   reduce using rule 34 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    EQUALS          reduce using rule 34 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    LBRACE          shift and go to state 130


state 106

    (22) assignment -> IDENTIFIER PLUS EQUALS expression .
    (103) math_expression -> expression . PLUS expression
    (104) math_expression -> expression . MINUS expression
    (105) math_expression -> expression . TIMES expression
    (106) math_expression -> expression . DIVIDE expression
    (107) math_expression -> expression . MODULUS expression
    (108) math_expression -> expression . PLUS PLUS
    (109) math_expression -> expression . MINUS MINUS
    (79) conditional_expression -> expression . ISEQUAL expression
    (80) conditional_expression -> expression . NOT EQUALS expression
    (81) conditional_expression -> expression . LESS expression
    (82) conditional_expression -> expression . LESS EQUALS expression
    (83) conditional_expression -> expression . GREATER expression
    (84) conditional_expression -> expression . GREATER EQUALS expression
    (85) conditional_expression -> expression . AND expression
    (86) conditional_expression -> expression . OR expression

    MODULUS         reduce using rule 22 (assignment -> IDENTIFIER PLUS EQUALS expression .)
    ISEQUAL         reduce using rule 22 (assignment -> IDENTIFIER PLUS EQUALS expression .)
    NOT             reduce using rule 22 (assignment -> IDENTIFIER PLUS EQUALS expression .)
    LESS            reduce using rule 22 (assignment -> IDENTIFIER PLUS EQUALS expression .)
    GREATER         reduce using rule 22 (assignment -> IDENTIFIER PLUS EQUALS expression .)
    AND             reduce using rule 22 (assignment -> IDENTIFIER PLUS EQUALS expression .)
    OR              reduce using rule 22 (assignment -> IDENTIFIER PLUS EQUALS expression .)
    $end            reduce using rule 22 (assignment -> IDENTIFIER PLUS EQUALS expression .)
    SEMICOLON       reduce using rule 22 (assignment -> IDENTIFIER PLUS EQUALS expression .)
    RBRACKET        reduce using rule 22 (assignment -> IDENTIFIER PLUS EQUALS expression .)
    RPAREN          reduce using rule 22 (assignment -> IDENTIFIER PLUS EQUALS expression .)
    COMMA           reduce using rule 22 (assignment -> IDENTIFIER PLUS EQUALS expression .)
    RBRACE          reduce using rule 22 (assignment -> IDENTIFIER PLUS EQUALS expression .)
    BOOLEAN         reduce using rule 22 (assignment -> IDENTIFIER PLUS EQUALS expression .)
    STRING          reduce using rule 22 (assignment -> IDENTIFIER PLUS EQUALS expression .)
    IDENTIFIER      reduce using rule 22 (assignment -> IDENTIFIER PLUS EQUALS expression .)
    LETTER          reduce using rule 22 (assignment -> IDENTIFIER PLUS EQUALS expression .)
    BOOL            reduce using rule 22 (assignment -> IDENTIFIER PLUS EQUALS expression .)
    INT             reduce using rule 22 (assignment -> IDENTIFIER PLUS EQUALS expression .)
    FLOAT           reduce using rule 22 (assignment -> IDENTIFIER PLUS EQUALS expression .)
    CHAR            reduce using rule 22 (assignment -> IDENTIFIER PLUS EQUALS expression .)
    VOID            reduce using rule 22 (assignment -> IDENTIFIER PLUS EQUALS expression .)
    POUND           reduce using rule 22 (assignment -> IDENTIFIER PLUS EQUALS expression .)
    USING           reduce using rule 22 (assignment -> IDENTIFIER PLUS EQUALS expression .)
    STRUCT          reduce using rule 22 (assignment -> IDENTIFIER PLUS EQUALS expression .)
    INTEGER         reduce using rule 22 (assignment -> IDENTIFIER PLUS EQUALS expression .)
    FLOATINGPOINT   reduce using rule 22 (assignment -> IDENTIFIER PLUS EQUALS expression .)
    EQUALS          reduce using rule 22 (assignment -> IDENTIFIER PLUS EQUALS expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38

  ! PLUS            [ reduce using rule 22 (assignment -> IDENTIFIER PLUS EQUALS expression .) ]
  ! MINUS           [ reduce using rule 22 (assignment -> IDENTIFIER PLUS EQUALS expression .) ]
  ! TIMES           [ reduce using rule 22 (assignment -> IDENTIFIER PLUS EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 22 (assignment -> IDENTIFIER PLUS EQUALS expression .) ]
  ! MODULUS         [ shift and go to state 39 ]
  ! ISEQUAL         [ shift and go to state 40 ]
  ! NOT             [ shift and go to state 41 ]
  ! LESS            [ shift and go to state 42 ]
  ! GREATER         [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]
  ! OR              [ shift and go to state 45 ]


state 107

    (23) assignment -> IDENTIFIER MINUS EQUALS expression .
    (103) math_expression -> expression . PLUS expression
    (104) math_expression -> expression . MINUS expression
    (105) math_expression -> expression . TIMES expression
    (106) math_expression -> expression . DIVIDE expression
    (107) math_expression -> expression . MODULUS expression
    (108) math_expression -> expression . PLUS PLUS
    (109) math_expression -> expression . MINUS MINUS
    (79) conditional_expression -> expression . ISEQUAL expression
    (80) conditional_expression -> expression . NOT EQUALS expression
    (81) conditional_expression -> expression . LESS expression
    (82) conditional_expression -> expression . LESS EQUALS expression
    (83) conditional_expression -> expression . GREATER expression
    (84) conditional_expression -> expression . GREATER EQUALS expression
    (85) conditional_expression -> expression . AND expression
    (86) conditional_expression -> expression . OR expression

    MODULUS         reduce using rule 23 (assignment -> IDENTIFIER MINUS EQUALS expression .)
    ISEQUAL         reduce using rule 23 (assignment -> IDENTIFIER MINUS EQUALS expression .)
    NOT             reduce using rule 23 (assignment -> IDENTIFIER MINUS EQUALS expression .)
    LESS            reduce using rule 23 (assignment -> IDENTIFIER MINUS EQUALS expression .)
    GREATER         reduce using rule 23 (assignment -> IDENTIFIER MINUS EQUALS expression .)
    AND             reduce using rule 23 (assignment -> IDENTIFIER MINUS EQUALS expression .)
    OR              reduce using rule 23 (assignment -> IDENTIFIER MINUS EQUALS expression .)
    $end            reduce using rule 23 (assignment -> IDENTIFIER MINUS EQUALS expression .)
    SEMICOLON       reduce using rule 23 (assignment -> IDENTIFIER MINUS EQUALS expression .)
    RBRACKET        reduce using rule 23 (assignment -> IDENTIFIER MINUS EQUALS expression .)
    RPAREN          reduce using rule 23 (assignment -> IDENTIFIER MINUS EQUALS expression .)
    COMMA           reduce using rule 23 (assignment -> IDENTIFIER MINUS EQUALS expression .)
    RBRACE          reduce using rule 23 (assignment -> IDENTIFIER MINUS EQUALS expression .)
    BOOLEAN         reduce using rule 23 (assignment -> IDENTIFIER MINUS EQUALS expression .)
    STRING          reduce using rule 23 (assignment -> IDENTIFIER MINUS EQUALS expression .)
    IDENTIFIER      reduce using rule 23 (assignment -> IDENTIFIER MINUS EQUALS expression .)
    LETTER          reduce using rule 23 (assignment -> IDENTIFIER MINUS EQUALS expression .)
    BOOL            reduce using rule 23 (assignment -> IDENTIFIER MINUS EQUALS expression .)
    INT             reduce using rule 23 (assignment -> IDENTIFIER MINUS EQUALS expression .)
    FLOAT           reduce using rule 23 (assignment -> IDENTIFIER MINUS EQUALS expression .)
    CHAR            reduce using rule 23 (assignment -> IDENTIFIER MINUS EQUALS expression .)
    VOID            reduce using rule 23 (assignment -> IDENTIFIER MINUS EQUALS expression .)
    POUND           reduce using rule 23 (assignment -> IDENTIFIER MINUS EQUALS expression .)
    USING           reduce using rule 23 (assignment -> IDENTIFIER MINUS EQUALS expression .)
    STRUCT          reduce using rule 23 (assignment -> IDENTIFIER MINUS EQUALS expression .)
    INTEGER         reduce using rule 23 (assignment -> IDENTIFIER MINUS EQUALS expression .)
    FLOATINGPOINT   reduce using rule 23 (assignment -> IDENTIFIER MINUS EQUALS expression .)
    EQUALS          reduce using rule 23 (assignment -> IDENTIFIER MINUS EQUALS expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38

  ! PLUS            [ reduce using rule 23 (assignment -> IDENTIFIER MINUS EQUALS expression .) ]
  ! MINUS           [ reduce using rule 23 (assignment -> IDENTIFIER MINUS EQUALS expression .) ]
  ! TIMES           [ reduce using rule 23 (assignment -> IDENTIFIER MINUS EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 23 (assignment -> IDENTIFIER MINUS EQUALS expression .) ]
  ! MODULUS         [ shift and go to state 39 ]
  ! ISEQUAL         [ shift and go to state 40 ]
  ! NOT             [ shift and go to state 41 ]
  ! LESS            [ shift and go to state 42 ]
  ! GREATER         [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]
  ! OR              [ shift and go to state 45 ]


state 108

    (28) function_call -> IDENTIFIER LPAREN expression RPAREN .

    PLUS            reduce using rule 28 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    MINUS           reduce using rule 28 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    TIMES           reduce using rule 28 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 28 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    MODULUS         reduce using rule 28 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    ISEQUAL         reduce using rule 28 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    NOT             reduce using rule 28 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    LESS            reduce using rule 28 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    GREATER         reduce using rule 28 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    AND             reduce using rule 28 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    OR              reduce using rule 28 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    $end            reduce using rule 28 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 28 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 28 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    RPAREN          reduce using rule 28 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    COMMA           reduce using rule 28 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    RBRACE          reduce using rule 28 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    BOOLEAN         reduce using rule 28 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    STRING          reduce using rule 28 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    IDENTIFIER      reduce using rule 28 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    LETTER          reduce using rule 28 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    BOOL            reduce using rule 28 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    INT             reduce using rule 28 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    FLOAT           reduce using rule 28 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    CHAR            reduce using rule 28 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    VOID            reduce using rule 28 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    POUND           reduce using rule 28 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    USING           reduce using rule 28 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    STRUCT          reduce using rule 28 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    INTEGER         reduce using rule 28 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    FLOATINGPOINT   reduce using rule 28 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    EQUALS          reduce using rule 28 (function_call -> IDENTIFIER LPAREN expression RPAREN .)


state 109

    (29) function_call -> IDENTIFIER LPAREN elements RPAREN .

    PLUS            reduce using rule 29 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    MINUS           reduce using rule 29 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    TIMES           reduce using rule 29 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    DIVIDE          reduce using rule 29 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    MODULUS         reduce using rule 29 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    ISEQUAL         reduce using rule 29 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    NOT             reduce using rule 29 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    LESS            reduce using rule 29 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    GREATER         reduce using rule 29 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    AND             reduce using rule 29 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    OR              reduce using rule 29 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    $end            reduce using rule 29 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    RBRACKET        reduce using rule 29 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    SEMICOLON       reduce using rule 29 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    RPAREN          reduce using rule 29 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    COMMA           reduce using rule 29 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    RBRACE          reduce using rule 29 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    BOOLEAN         reduce using rule 29 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    STRING          reduce using rule 29 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    IDENTIFIER      reduce using rule 29 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    LETTER          reduce using rule 29 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    BOOL            reduce using rule 29 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    INT             reduce using rule 29 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    FLOAT           reduce using rule 29 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    CHAR            reduce using rule 29 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    VOID            reduce using rule 29 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    POUND           reduce using rule 29 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    USING           reduce using rule 29 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    STRUCT          reduce using rule 29 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    INTEGER         reduce using rule 29 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    FLOATINGPOINT   reduce using rule 29 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    EQUALS          reduce using rule 29 (function_call -> IDENTIFIER LPAREN elements RPAREN .)


state 110

    (30) elements -> COMMA expression .
    (31) elements -> COMMA expression . elements
    (103) math_expression -> expression . PLUS expression
    (104) math_expression -> expression . MINUS expression
    (105) math_expression -> expression . TIMES expression
    (106) math_expression -> expression . DIVIDE expression
    (107) math_expression -> expression . MODULUS expression
    (108) math_expression -> expression . PLUS PLUS
    (109) math_expression -> expression . MINUS MINUS
    (79) conditional_expression -> expression . ISEQUAL expression
    (80) conditional_expression -> expression . NOT EQUALS expression
    (81) conditional_expression -> expression . LESS expression
    (82) conditional_expression -> expression . LESS EQUALS expression
    (83) conditional_expression -> expression . GREATER expression
    (84) conditional_expression -> expression . GREATER EQUALS expression
    (85) conditional_expression -> expression . AND expression
    (86) conditional_expression -> expression . OR expression
    (30) elements -> . COMMA expression
    (31) elements -> . COMMA expression elements

    RPAREN          reduce using rule 30 (elements -> COMMA expression .)
    RBRACE          reduce using rule 30 (elements -> COMMA expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULUS         shift and go to state 39
    ISEQUAL         shift and go to state 40
    NOT             shift and go to state 41
    LESS            shift and go to state 42
    GREATER         shift and go to state 43
    AND             shift and go to state 44
    OR              shift and go to state 45
    COMMA           shift and go to state 89

    elements                       shift and go to state 131

state 111

    (21) assignment -> IDENTIFIER . EQUALS expression
    (22) assignment -> IDENTIFIER . PLUS EQUALS expression
    (23) assignment -> IDENTIFIER . MINUS EQUALS expression

    EQUALS          shift and go to state 50
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52


state 112

    (112) macro_definition -> POUND DEFINE IDENTIFIER assignment .

    BOOLEAN         reduce using rule 112 (macro_definition -> POUND DEFINE IDENTIFIER assignment .)
    STRING          reduce using rule 112 (macro_definition -> POUND DEFINE IDENTIFIER assignment .)
    IDENTIFIER      reduce using rule 112 (macro_definition -> POUND DEFINE IDENTIFIER assignment .)
    LETTER          reduce using rule 112 (macro_definition -> POUND DEFINE IDENTIFIER assignment .)
    BOOL            reduce using rule 112 (macro_definition -> POUND DEFINE IDENTIFIER assignment .)
    INT             reduce using rule 112 (macro_definition -> POUND DEFINE IDENTIFIER assignment .)
    FLOAT           reduce using rule 112 (macro_definition -> POUND DEFINE IDENTIFIER assignment .)
    CHAR            reduce using rule 112 (macro_definition -> POUND DEFINE IDENTIFIER assignment .)
    VOID            reduce using rule 112 (macro_definition -> POUND DEFINE IDENTIFIER assignment .)
    POUND           reduce using rule 112 (macro_definition -> POUND DEFINE IDENTIFIER assignment .)
    USING           reduce using rule 112 (macro_definition -> POUND DEFINE IDENTIFIER assignment .)
    STRUCT          reduce using rule 112 (macro_definition -> POUND DEFINE IDENTIFIER assignment .)
    INTEGER         reduce using rule 112 (macro_definition -> POUND DEFINE IDENTIFIER assignment .)
    FLOATINGPOINT   reduce using rule 112 (macro_definition -> POUND DEFINE IDENTIFIER assignment .)
    PLUS            reduce using rule 112 (macro_definition -> POUND DEFINE IDENTIFIER assignment .)
    MINUS           reduce using rule 112 (macro_definition -> POUND DEFINE IDENTIFIER assignment .)
    NOT             reduce using rule 112 (macro_definition -> POUND DEFINE IDENTIFIER assignment .)
    $end            reduce using rule 112 (macro_definition -> POUND DEFINE IDENTIFIER assignment .)


state 113

    (113) file_inclusion -> POUND INCLUDE LESS HEADER . GREATER

    GREATER         shift and go to state 132


state 114

    (115) file_inclusion -> POUND INCLUDE LESS IDENTIFIER . GREATER

    GREATER         shift and go to state 133


state 115

    (114) file_inclusion -> POUND INCLUDE QUOTE HEADER . QUOTE

    QUOTE           shift and go to state 134


state 116

    (116) file_inclusion -> POUND INCLUDE QUOTE IDENTIFIER . QUOTE

    QUOTE           shift and go to state 135


state 117

    (55) namespace_statement -> USING NAMESPACE IDENTIFIER SEMICOLON .

    BOOLEAN         reduce using rule 55 (namespace_statement -> USING NAMESPACE IDENTIFIER SEMICOLON .)
    STRING          reduce using rule 55 (namespace_statement -> USING NAMESPACE IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 55 (namespace_statement -> USING NAMESPACE IDENTIFIER SEMICOLON .)
    LETTER          reduce using rule 55 (namespace_statement -> USING NAMESPACE IDENTIFIER SEMICOLON .)
    BOOL            reduce using rule 55 (namespace_statement -> USING NAMESPACE IDENTIFIER SEMICOLON .)
    INT             reduce using rule 55 (namespace_statement -> USING NAMESPACE IDENTIFIER SEMICOLON .)
    FLOAT           reduce using rule 55 (namespace_statement -> USING NAMESPACE IDENTIFIER SEMICOLON .)
    CHAR            reduce using rule 55 (namespace_statement -> USING NAMESPACE IDENTIFIER SEMICOLON .)
    VOID            reduce using rule 55 (namespace_statement -> USING NAMESPACE IDENTIFIER SEMICOLON .)
    POUND           reduce using rule 55 (namespace_statement -> USING NAMESPACE IDENTIFIER SEMICOLON .)
    USING           reduce using rule 55 (namespace_statement -> USING NAMESPACE IDENTIFIER SEMICOLON .)
    STRUCT          reduce using rule 55 (namespace_statement -> USING NAMESPACE IDENTIFIER SEMICOLON .)
    INTEGER         reduce using rule 55 (namespace_statement -> USING NAMESPACE IDENTIFIER SEMICOLON .)
    FLOATINGPOINT   reduce using rule 55 (namespace_statement -> USING NAMESPACE IDENTIFIER SEMICOLON .)
    PLUS            reduce using rule 55 (namespace_statement -> USING NAMESPACE IDENTIFIER SEMICOLON .)
    MINUS           reduce using rule 55 (namespace_statement -> USING NAMESPACE IDENTIFIER SEMICOLON .)
    NOT             reduce using rule 55 (namespace_statement -> USING NAMESPACE IDENTIFIER SEMICOLON .)
    $end            reduce using rule 55 (namespace_statement -> USING NAMESPACE IDENTIFIER SEMICOLON .)


state 118

    (21) assignment -> IDENTIFIER . EQUALS expression
    (22) assignment -> IDENTIFIER . PLUS EQUALS expression
    (23) assignment -> IDENTIFIER . MINUS EQUALS expression
    (27) function_call -> IDENTIFIER . LPAREN RPAREN
    (28) function_call -> IDENTIFIER . LPAREN expression RPAREN
    (29) function_call -> IDENTIFIER . LPAREN elements RPAREN
    (34) array_usage -> IDENTIFIER . LBRACKET expression RBRACKET
    (35) array_usage -> IDENTIFIER . LBRACKET expression RBRACKET LBRACE elements RBRACE

    EQUALS          shift and go to state 50
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    LPAREN          shift and go to state 53
    LBRACKET        shift and go to state 49


state 119

    (51) struct -> STRUCT IDENTIFIER LBRACE declaration_list . RBRACE
    (52) struct -> STRUCT IDENTIFIER LBRACE declaration_list . RBRACE IDENTIFIER SEMICOLON

    RBRACE          shift and go to state 136


state 120

    (53) declaration_list -> declaration . declaration_list
    (53) declaration_list -> . declaration declaration_list
    (54) declaration_list -> . empty
    (13) declaration -> . type IDENTIFIER SEMICOLON
    (14) declaration -> . type IDENTIFIER identifiers SEMICOLON
    (15) declaration -> . type assignment SEMICOLON
    (16) declaration -> . assignment SEMICOLON
    (17) declaration -> . function_call SEMICOLON
    (18) declaration -> . array_usage SEMICOLON
    (19) declaration -> . type array_usage SEMICOLON
    (20) declaration -> . struct
    (117) empty -> .
    (98) type -> . BOOL
    (99) type -> . INT
    (100) type -> . FLOAT
    (101) type -> . CHAR
    (102) type -> . VOID
    (21) assignment -> . IDENTIFIER EQUALS expression
    (22) assignment -> . IDENTIFIER PLUS EQUALS expression
    (23) assignment -> . IDENTIFIER MINUS EQUALS expression
    (27) function_call -> . IDENTIFIER LPAREN RPAREN
    (28) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (29) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (34) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (35) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE
    (51) struct -> . STRUCT IDENTIFIER LBRACE declaration_list RBRACE
    (52) struct -> . STRUCT IDENTIFIER LBRACE declaration_list RBRACE IDENTIFIER SEMICOLON

    RBRACE          reduce using rule 117 (empty -> .)
    BOOL            shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    CHAR            shift and go to state 23
    VOID            shift and go to state 24
    IDENTIFIER      shift and go to state 118
    STRUCT          shift and go to state 27

    declaration                    shift and go to state 120
    declaration_list               shift and go to state 137
    empty                          shift and go to state 121
    type                           shift and go to state 122
    assignment                     shift and go to state 123
    function_call                  shift and go to state 124
    array_usage                    shift and go to state 125
    struct                         shift and go to state 126

state 121

    (54) declaration_list -> empty .

    RBRACE          reduce using rule 54 (declaration_list -> empty .)


state 122

    (13) declaration -> type . IDENTIFIER SEMICOLON
    (14) declaration -> type . IDENTIFIER identifiers SEMICOLON
    (15) declaration -> type . assignment SEMICOLON
    (19) declaration -> type . array_usage SEMICOLON
    (21) assignment -> . IDENTIFIER EQUALS expression
    (22) assignment -> . IDENTIFIER PLUS EQUALS expression
    (23) assignment -> . IDENTIFIER MINUS EQUALS expression
    (34) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (35) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE

    IDENTIFIER      shift and go to state 138

    assignment                     shift and go to state 139
    array_usage                    shift and go to state 140

state 123

    (16) declaration -> assignment . SEMICOLON

    SEMICOLON       shift and go to state 141


state 124

    (17) declaration -> function_call . SEMICOLON

    SEMICOLON       shift and go to state 142


state 125

    (18) declaration -> array_usage . SEMICOLON

    SEMICOLON       shift and go to state 143


state 126

    (20) declaration -> struct .

    BOOL            reduce using rule 20 (declaration -> struct .)
    INT             reduce using rule 20 (declaration -> struct .)
    FLOAT           reduce using rule 20 (declaration -> struct .)
    CHAR            reduce using rule 20 (declaration -> struct .)
    VOID            reduce using rule 20 (declaration -> struct .)
    IDENTIFIER      reduce using rule 20 (declaration -> struct .)
    STRUCT          reduce using rule 20 (declaration -> struct .)
    RBRACE          reduce using rule 20 (declaration -> struct .)
    WHILE           reduce using rule 20 (declaration -> struct .)
    DO              reduce using rule 20 (declaration -> struct .)
    FOR             reduce using rule 20 (declaration -> struct .)
    IF              reduce using rule 20 (declaration -> struct .)
    RETURN          reduce using rule 20 (declaration -> struct .)
    COUT            reduce using rule 20 (declaration -> struct .)
    CIN             reduce using rule 20 (declaration -> struct .)
    ELSE            reduce using rule 20 (declaration -> struct .)


state 127

    (41) argument -> type IDENTIFIER .

    COMMA           reduce using rule 41 (argument -> type IDENTIFIER .)
    RPAREN          reduce using rule 41 (argument -> type IDENTIFIER .)


state 128

    (36) function -> type IDENTIFIER LPAREN argument_list_option RPAREN . compound_statement
    (42) compound_statement -> . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 145

    compound_statement             shift and go to state 144

state 129

    (39) argument_list -> argument_list COMMA . argument
    (41) argument -> . type IDENTIFIER
    (98) type -> . BOOL
    (99) type -> . INT
    (100) type -> . FLOAT
    (101) type -> . CHAR
    (102) type -> . VOID

    BOOL            shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    CHAR            shift and go to state 23
    VOID            shift and go to state 24

    argument                       shift and go to state 146
    type                           shift and go to state 100

state 130

    (35) array_usage -> IDENTIFIER LBRACKET expression RBRACKET LBRACE . elements RBRACE
    (30) elements -> . COMMA expression
    (31) elements -> . COMMA expression elements

    COMMA           shift and go to state 89

    elements                       shift and go to state 147

state 131

    (31) elements -> COMMA expression elements .

    RPAREN          reduce using rule 31 (elements -> COMMA expression elements .)
    RBRACE          reduce using rule 31 (elements -> COMMA expression elements .)


state 132

    (113) file_inclusion -> POUND INCLUDE LESS HEADER GREATER .

    BOOLEAN         reduce using rule 113 (file_inclusion -> POUND INCLUDE LESS HEADER GREATER .)
    STRING          reduce using rule 113 (file_inclusion -> POUND INCLUDE LESS HEADER GREATER .)
    IDENTIFIER      reduce using rule 113 (file_inclusion -> POUND INCLUDE LESS HEADER GREATER .)
    LETTER          reduce using rule 113 (file_inclusion -> POUND INCLUDE LESS HEADER GREATER .)
    BOOL            reduce using rule 113 (file_inclusion -> POUND INCLUDE LESS HEADER GREATER .)
    INT             reduce using rule 113 (file_inclusion -> POUND INCLUDE LESS HEADER GREATER .)
    FLOAT           reduce using rule 113 (file_inclusion -> POUND INCLUDE LESS HEADER GREATER .)
    CHAR            reduce using rule 113 (file_inclusion -> POUND INCLUDE LESS HEADER GREATER .)
    VOID            reduce using rule 113 (file_inclusion -> POUND INCLUDE LESS HEADER GREATER .)
    POUND           reduce using rule 113 (file_inclusion -> POUND INCLUDE LESS HEADER GREATER .)
    USING           reduce using rule 113 (file_inclusion -> POUND INCLUDE LESS HEADER GREATER .)
    STRUCT          reduce using rule 113 (file_inclusion -> POUND INCLUDE LESS HEADER GREATER .)
    INTEGER         reduce using rule 113 (file_inclusion -> POUND INCLUDE LESS HEADER GREATER .)
    FLOATINGPOINT   reduce using rule 113 (file_inclusion -> POUND INCLUDE LESS HEADER GREATER .)
    PLUS            reduce using rule 113 (file_inclusion -> POUND INCLUDE LESS HEADER GREATER .)
    MINUS           reduce using rule 113 (file_inclusion -> POUND INCLUDE LESS HEADER GREATER .)
    NOT             reduce using rule 113 (file_inclusion -> POUND INCLUDE LESS HEADER GREATER .)
    $end            reduce using rule 113 (file_inclusion -> POUND INCLUDE LESS HEADER GREATER .)


state 133

    (115) file_inclusion -> POUND INCLUDE LESS IDENTIFIER GREATER .

    BOOLEAN         reduce using rule 115 (file_inclusion -> POUND INCLUDE LESS IDENTIFIER GREATER .)
    STRING          reduce using rule 115 (file_inclusion -> POUND INCLUDE LESS IDENTIFIER GREATER .)
    IDENTIFIER      reduce using rule 115 (file_inclusion -> POUND INCLUDE LESS IDENTIFIER GREATER .)
    LETTER          reduce using rule 115 (file_inclusion -> POUND INCLUDE LESS IDENTIFIER GREATER .)
    BOOL            reduce using rule 115 (file_inclusion -> POUND INCLUDE LESS IDENTIFIER GREATER .)
    INT             reduce using rule 115 (file_inclusion -> POUND INCLUDE LESS IDENTIFIER GREATER .)
    FLOAT           reduce using rule 115 (file_inclusion -> POUND INCLUDE LESS IDENTIFIER GREATER .)
    CHAR            reduce using rule 115 (file_inclusion -> POUND INCLUDE LESS IDENTIFIER GREATER .)
    VOID            reduce using rule 115 (file_inclusion -> POUND INCLUDE LESS IDENTIFIER GREATER .)
    POUND           reduce using rule 115 (file_inclusion -> POUND INCLUDE LESS IDENTIFIER GREATER .)
    USING           reduce using rule 115 (file_inclusion -> POUND INCLUDE LESS IDENTIFIER GREATER .)
    STRUCT          reduce using rule 115 (file_inclusion -> POUND INCLUDE LESS IDENTIFIER GREATER .)
    INTEGER         reduce using rule 115 (file_inclusion -> POUND INCLUDE LESS IDENTIFIER GREATER .)
    FLOATINGPOINT   reduce using rule 115 (file_inclusion -> POUND INCLUDE LESS IDENTIFIER GREATER .)
    PLUS            reduce using rule 115 (file_inclusion -> POUND INCLUDE LESS IDENTIFIER GREATER .)
    MINUS           reduce using rule 115 (file_inclusion -> POUND INCLUDE LESS IDENTIFIER GREATER .)
    NOT             reduce using rule 115 (file_inclusion -> POUND INCLUDE LESS IDENTIFIER GREATER .)
    $end            reduce using rule 115 (file_inclusion -> POUND INCLUDE LESS IDENTIFIER GREATER .)


state 134

    (114) file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE .

    BOOLEAN         reduce using rule 114 (file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE .)
    STRING          reduce using rule 114 (file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE .)
    IDENTIFIER      reduce using rule 114 (file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE .)
    LETTER          reduce using rule 114 (file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE .)
    BOOL            reduce using rule 114 (file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE .)
    INT             reduce using rule 114 (file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE .)
    FLOAT           reduce using rule 114 (file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE .)
    CHAR            reduce using rule 114 (file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE .)
    VOID            reduce using rule 114 (file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE .)
    POUND           reduce using rule 114 (file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE .)
    USING           reduce using rule 114 (file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE .)
    STRUCT          reduce using rule 114 (file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE .)
    INTEGER         reduce using rule 114 (file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE .)
    FLOATINGPOINT   reduce using rule 114 (file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE .)
    PLUS            reduce using rule 114 (file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE .)
    MINUS           reduce using rule 114 (file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE .)
    NOT             reduce using rule 114 (file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE .)
    $end            reduce using rule 114 (file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE .)


state 135

    (116) file_inclusion -> POUND INCLUDE QUOTE IDENTIFIER QUOTE .

    BOOLEAN         reduce using rule 116 (file_inclusion -> POUND INCLUDE QUOTE IDENTIFIER QUOTE .)
    STRING          reduce using rule 116 (file_inclusion -> POUND INCLUDE QUOTE IDENTIFIER QUOTE .)
    IDENTIFIER      reduce using rule 116 (file_inclusion -> POUND INCLUDE QUOTE IDENTIFIER QUOTE .)
    LETTER          reduce using rule 116 (file_inclusion -> POUND INCLUDE QUOTE IDENTIFIER QUOTE .)
    BOOL            reduce using rule 116 (file_inclusion -> POUND INCLUDE QUOTE IDENTIFIER QUOTE .)
    INT             reduce using rule 116 (file_inclusion -> POUND INCLUDE QUOTE IDENTIFIER QUOTE .)
    FLOAT           reduce using rule 116 (file_inclusion -> POUND INCLUDE QUOTE IDENTIFIER QUOTE .)
    CHAR            reduce using rule 116 (file_inclusion -> POUND INCLUDE QUOTE IDENTIFIER QUOTE .)
    VOID            reduce using rule 116 (file_inclusion -> POUND INCLUDE QUOTE IDENTIFIER QUOTE .)
    POUND           reduce using rule 116 (file_inclusion -> POUND INCLUDE QUOTE IDENTIFIER QUOTE .)
    USING           reduce using rule 116 (file_inclusion -> POUND INCLUDE QUOTE IDENTIFIER QUOTE .)
    STRUCT          reduce using rule 116 (file_inclusion -> POUND INCLUDE QUOTE IDENTIFIER QUOTE .)
    INTEGER         reduce using rule 116 (file_inclusion -> POUND INCLUDE QUOTE IDENTIFIER QUOTE .)
    FLOATINGPOINT   reduce using rule 116 (file_inclusion -> POUND INCLUDE QUOTE IDENTIFIER QUOTE .)
    PLUS            reduce using rule 116 (file_inclusion -> POUND INCLUDE QUOTE IDENTIFIER QUOTE .)
    MINUS           reduce using rule 116 (file_inclusion -> POUND INCLUDE QUOTE IDENTIFIER QUOTE .)
    NOT             reduce using rule 116 (file_inclusion -> POUND INCLUDE QUOTE IDENTIFIER QUOTE .)
    $end            reduce using rule 116 (file_inclusion -> POUND INCLUDE QUOTE IDENTIFIER QUOTE .)


state 136

    (51) struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE .
    (52) struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE . IDENTIFIER SEMICOLON

  ! shift/reduce conflict for IDENTIFIER resolved as shift
    BOOLEAN         reduce using rule 51 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE .)
    STRING          reduce using rule 51 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE .)
    LETTER          reduce using rule 51 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE .)
    BOOL            reduce using rule 51 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE .)
    INT             reduce using rule 51 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE .)
    FLOAT           reduce using rule 51 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE .)
    CHAR            reduce using rule 51 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE .)
    VOID            reduce using rule 51 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE .)
    POUND           reduce using rule 51 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE .)
    USING           reduce using rule 51 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE .)
    STRUCT          reduce using rule 51 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE .)
    INTEGER         reduce using rule 51 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE .)
    FLOATINGPOINT   reduce using rule 51 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE .)
    PLUS            reduce using rule 51 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE .)
    MINUS           reduce using rule 51 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE .)
    NOT             reduce using rule 51 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE .)
    $end            reduce using rule 51 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE .)
    RBRACE          reduce using rule 51 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE .)
    WHILE           reduce using rule 51 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE .)
    DO              reduce using rule 51 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE .)
    FOR             reduce using rule 51 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE .)
    IF              reduce using rule 51 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE .)
    RETURN          reduce using rule 51 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE .)
    COUT            reduce using rule 51 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE .)
    CIN             reduce using rule 51 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE .)
    ELSE            reduce using rule 51 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE .)
    IDENTIFIER      shift and go to state 148

  ! IDENTIFIER      [ reduce using rule 51 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE .) ]


state 137

    (53) declaration_list -> declaration declaration_list .

    RBRACE          reduce using rule 53 (declaration_list -> declaration declaration_list .)


state 138

    (13) declaration -> type IDENTIFIER . SEMICOLON
    (14) declaration -> type IDENTIFIER . identifiers SEMICOLON
    (21) assignment -> IDENTIFIER . EQUALS expression
    (22) assignment -> IDENTIFIER . PLUS EQUALS expression
    (23) assignment -> IDENTIFIER . MINUS EQUALS expression
    (34) array_usage -> IDENTIFIER . LBRACKET expression RBRACKET
    (35) array_usage -> IDENTIFIER . LBRACKET expression RBRACKET LBRACE elements RBRACE
    (24) identifiers -> . COMMA IDENTIFIER
    (25) identifiers -> . COMMA assignment
    (26) identifiers -> . COMMA IDENTIFIER identifiers

    SEMICOLON       shift and go to state 149
    EQUALS          shift and go to state 50
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    LBRACKET        shift and go to state 49
    COMMA           shift and go to state 151

    identifiers                    shift and go to state 150

state 139

    (15) declaration -> type assignment . SEMICOLON

    SEMICOLON       shift and go to state 152


state 140

    (19) declaration -> type array_usage . SEMICOLON

    SEMICOLON       shift and go to state 153


state 141

    (16) declaration -> assignment SEMICOLON .

    BOOL            reduce using rule 16 (declaration -> assignment SEMICOLON .)
    INT             reduce using rule 16 (declaration -> assignment SEMICOLON .)
    FLOAT           reduce using rule 16 (declaration -> assignment SEMICOLON .)
    CHAR            reduce using rule 16 (declaration -> assignment SEMICOLON .)
    VOID            reduce using rule 16 (declaration -> assignment SEMICOLON .)
    IDENTIFIER      reduce using rule 16 (declaration -> assignment SEMICOLON .)
    STRUCT          reduce using rule 16 (declaration -> assignment SEMICOLON .)
    RBRACE          reduce using rule 16 (declaration -> assignment SEMICOLON .)
    WHILE           reduce using rule 16 (declaration -> assignment SEMICOLON .)
    DO              reduce using rule 16 (declaration -> assignment SEMICOLON .)
    FOR             reduce using rule 16 (declaration -> assignment SEMICOLON .)
    IF              reduce using rule 16 (declaration -> assignment SEMICOLON .)
    RETURN          reduce using rule 16 (declaration -> assignment SEMICOLON .)
    COUT            reduce using rule 16 (declaration -> assignment SEMICOLON .)
    CIN             reduce using rule 16 (declaration -> assignment SEMICOLON .)
    ELSE            reduce using rule 16 (declaration -> assignment SEMICOLON .)


state 142

    (17) declaration -> function_call SEMICOLON .

    BOOL            reduce using rule 17 (declaration -> function_call SEMICOLON .)
    INT             reduce using rule 17 (declaration -> function_call SEMICOLON .)
    FLOAT           reduce using rule 17 (declaration -> function_call SEMICOLON .)
    CHAR            reduce using rule 17 (declaration -> function_call SEMICOLON .)
    VOID            reduce using rule 17 (declaration -> function_call SEMICOLON .)
    IDENTIFIER      reduce using rule 17 (declaration -> function_call SEMICOLON .)
    STRUCT          reduce using rule 17 (declaration -> function_call SEMICOLON .)
    RBRACE          reduce using rule 17 (declaration -> function_call SEMICOLON .)
    WHILE           reduce using rule 17 (declaration -> function_call SEMICOLON .)
    DO              reduce using rule 17 (declaration -> function_call SEMICOLON .)
    FOR             reduce using rule 17 (declaration -> function_call SEMICOLON .)
    IF              reduce using rule 17 (declaration -> function_call SEMICOLON .)
    RETURN          reduce using rule 17 (declaration -> function_call SEMICOLON .)
    COUT            reduce using rule 17 (declaration -> function_call SEMICOLON .)
    CIN             reduce using rule 17 (declaration -> function_call SEMICOLON .)
    ELSE            reduce using rule 17 (declaration -> function_call SEMICOLON .)


state 143

    (18) declaration -> array_usage SEMICOLON .

    BOOL            reduce using rule 18 (declaration -> array_usage SEMICOLON .)
    INT             reduce using rule 18 (declaration -> array_usage SEMICOLON .)
    FLOAT           reduce using rule 18 (declaration -> array_usage SEMICOLON .)
    CHAR            reduce using rule 18 (declaration -> array_usage SEMICOLON .)
    VOID            reduce using rule 18 (declaration -> array_usage SEMICOLON .)
    IDENTIFIER      reduce using rule 18 (declaration -> array_usage SEMICOLON .)
    STRUCT          reduce using rule 18 (declaration -> array_usage SEMICOLON .)
    RBRACE          reduce using rule 18 (declaration -> array_usage SEMICOLON .)
    WHILE           reduce using rule 18 (declaration -> array_usage SEMICOLON .)
    DO              reduce using rule 18 (declaration -> array_usage SEMICOLON .)
    FOR             reduce using rule 18 (declaration -> array_usage SEMICOLON .)
    IF              reduce using rule 18 (declaration -> array_usage SEMICOLON .)
    RETURN          reduce using rule 18 (declaration -> array_usage SEMICOLON .)
    COUT            reduce using rule 18 (declaration -> array_usage SEMICOLON .)
    CIN             reduce using rule 18 (declaration -> array_usage SEMICOLON .)
    ELSE            reduce using rule 18 (declaration -> array_usage SEMICOLON .)


state 144

    (36) function -> type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement .

    BOOLEAN         reduce using rule 36 (function -> type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement .)
    STRING          reduce using rule 36 (function -> type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement .)
    IDENTIFIER      reduce using rule 36 (function -> type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement .)
    LETTER          reduce using rule 36 (function -> type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement .)
    BOOL            reduce using rule 36 (function -> type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement .)
    INT             reduce using rule 36 (function -> type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement .)
    FLOAT           reduce using rule 36 (function -> type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement .)
    CHAR            reduce using rule 36 (function -> type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement .)
    VOID            reduce using rule 36 (function -> type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement .)
    POUND           reduce using rule 36 (function -> type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement .)
    USING           reduce using rule 36 (function -> type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement .)
    STRUCT          reduce using rule 36 (function -> type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement .)
    INTEGER         reduce using rule 36 (function -> type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement .)
    FLOATINGPOINT   reduce using rule 36 (function -> type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement .)
    PLUS            reduce using rule 36 (function -> type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement .)
    MINUS           reduce using rule 36 (function -> type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement .)
    NOT             reduce using rule 36 (function -> type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement .)
    $end            reduce using rule 36 (function -> type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement .)


state 145

    (42) compound_statement -> LBRACE . statement_list RBRACE
    (43) statement_list -> . statement_list statement
    (44) statement_list -> . empty
    (117) empty -> .

    RBRACE          reduce using rule 117 (empty -> .)
    WHILE           reduce using rule 117 (empty -> .)
    DO              reduce using rule 117 (empty -> .)
    FOR             reduce using rule 117 (empty -> .)
    IF              reduce using rule 117 (empty -> .)
    RETURN          reduce using rule 117 (empty -> .)
    COUT            reduce using rule 117 (empty -> .)
    CIN             reduce using rule 117 (empty -> .)
    BOOL            reduce using rule 117 (empty -> .)
    INT             reduce using rule 117 (empty -> .)
    FLOAT           reduce using rule 117 (empty -> .)
    CHAR            reduce using rule 117 (empty -> .)
    VOID            reduce using rule 117 (empty -> .)
    IDENTIFIER      reduce using rule 117 (empty -> .)
    STRUCT          reduce using rule 117 (empty -> .)

    statement_list                 shift and go to state 154
    empty                          shift and go to state 155

state 146

    (39) argument_list -> argument_list COMMA argument .

    COMMA           reduce using rule 39 (argument_list -> argument_list COMMA argument .)
    RPAREN          reduce using rule 39 (argument_list -> argument_list COMMA argument .)


state 147

    (35) array_usage -> IDENTIFIER LBRACKET expression RBRACKET LBRACE elements . RBRACE

    RBRACE          shift and go to state 156


state 148

    (52) struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE IDENTIFIER . SEMICOLON

    SEMICOLON       shift and go to state 157


state 149

    (13) declaration -> type IDENTIFIER SEMICOLON .

    BOOL            reduce using rule 13 (declaration -> type IDENTIFIER SEMICOLON .)
    INT             reduce using rule 13 (declaration -> type IDENTIFIER SEMICOLON .)
    FLOAT           reduce using rule 13 (declaration -> type IDENTIFIER SEMICOLON .)
    CHAR            reduce using rule 13 (declaration -> type IDENTIFIER SEMICOLON .)
    VOID            reduce using rule 13 (declaration -> type IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 13 (declaration -> type IDENTIFIER SEMICOLON .)
    STRUCT          reduce using rule 13 (declaration -> type IDENTIFIER SEMICOLON .)
    RBRACE          reduce using rule 13 (declaration -> type IDENTIFIER SEMICOLON .)
    WHILE           reduce using rule 13 (declaration -> type IDENTIFIER SEMICOLON .)
    DO              reduce using rule 13 (declaration -> type IDENTIFIER SEMICOLON .)
    FOR             reduce using rule 13 (declaration -> type IDENTIFIER SEMICOLON .)
    IF              reduce using rule 13 (declaration -> type IDENTIFIER SEMICOLON .)
    RETURN          reduce using rule 13 (declaration -> type IDENTIFIER SEMICOLON .)
    COUT            reduce using rule 13 (declaration -> type IDENTIFIER SEMICOLON .)
    CIN             reduce using rule 13 (declaration -> type IDENTIFIER SEMICOLON .)
    ELSE            reduce using rule 13 (declaration -> type IDENTIFIER SEMICOLON .)


state 150

    (14) declaration -> type IDENTIFIER identifiers . SEMICOLON

    SEMICOLON       shift and go to state 158


state 151

    (24) identifiers -> COMMA . IDENTIFIER
    (25) identifiers -> COMMA . assignment
    (26) identifiers -> COMMA . IDENTIFIER identifiers
    (21) assignment -> . IDENTIFIER EQUALS expression
    (22) assignment -> . IDENTIFIER PLUS EQUALS expression
    (23) assignment -> . IDENTIFIER MINUS EQUALS expression

    IDENTIFIER      shift and go to state 159

    assignment                     shift and go to state 160

state 152

    (15) declaration -> type assignment SEMICOLON .

    BOOL            reduce using rule 15 (declaration -> type assignment SEMICOLON .)
    INT             reduce using rule 15 (declaration -> type assignment SEMICOLON .)
    FLOAT           reduce using rule 15 (declaration -> type assignment SEMICOLON .)
    CHAR            reduce using rule 15 (declaration -> type assignment SEMICOLON .)
    VOID            reduce using rule 15 (declaration -> type assignment SEMICOLON .)
    IDENTIFIER      reduce using rule 15 (declaration -> type assignment SEMICOLON .)
    STRUCT          reduce using rule 15 (declaration -> type assignment SEMICOLON .)
    RBRACE          reduce using rule 15 (declaration -> type assignment SEMICOLON .)
    WHILE           reduce using rule 15 (declaration -> type assignment SEMICOLON .)
    DO              reduce using rule 15 (declaration -> type assignment SEMICOLON .)
    FOR             reduce using rule 15 (declaration -> type assignment SEMICOLON .)
    IF              reduce using rule 15 (declaration -> type assignment SEMICOLON .)
    RETURN          reduce using rule 15 (declaration -> type assignment SEMICOLON .)
    COUT            reduce using rule 15 (declaration -> type assignment SEMICOLON .)
    CIN             reduce using rule 15 (declaration -> type assignment SEMICOLON .)
    ELSE            reduce using rule 15 (declaration -> type assignment SEMICOLON .)


state 153

    (19) declaration -> type array_usage SEMICOLON .

    BOOL            reduce using rule 19 (declaration -> type array_usage SEMICOLON .)
    INT             reduce using rule 19 (declaration -> type array_usage SEMICOLON .)
    FLOAT           reduce using rule 19 (declaration -> type array_usage SEMICOLON .)
    CHAR            reduce using rule 19 (declaration -> type array_usage SEMICOLON .)
    VOID            reduce using rule 19 (declaration -> type array_usage SEMICOLON .)
    IDENTIFIER      reduce using rule 19 (declaration -> type array_usage SEMICOLON .)
    STRUCT          reduce using rule 19 (declaration -> type array_usage SEMICOLON .)
    RBRACE          reduce using rule 19 (declaration -> type array_usage SEMICOLON .)
    WHILE           reduce using rule 19 (declaration -> type array_usage SEMICOLON .)
    DO              reduce using rule 19 (declaration -> type array_usage SEMICOLON .)
    FOR             reduce using rule 19 (declaration -> type array_usage SEMICOLON .)
    IF              reduce using rule 19 (declaration -> type array_usage SEMICOLON .)
    RETURN          reduce using rule 19 (declaration -> type array_usage SEMICOLON .)
    COUT            reduce using rule 19 (declaration -> type array_usage SEMICOLON .)
    CIN             reduce using rule 19 (declaration -> type array_usage SEMICOLON .)
    ELSE            reduce using rule 19 (declaration -> type array_usage SEMICOLON .)


state 154

    (42) compound_statement -> LBRACE statement_list . RBRACE
    (43) statement_list -> statement_list . statement
    (45) statement -> . iteration_statement
    (46) statement -> . declaration
    (47) statement -> . selection_statement
    (48) statement -> . return_statement
    (49) statement -> . cout_statement
    (50) statement -> . cin_statement
    (63) iteration_statement -> . WHILE LPAREN expression RPAREN compound_statement
    (64) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (65) iteration_statement -> . DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON
    (66) iteration_statement -> . DO statement WHILE LPAREN expression RPAREN SEMICOLON
    (67) iteration_statement -> . FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN compound_statement
    (68) iteration_statement -> . FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN statement
    (69) iteration_statement -> . FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN compound_statement
    (70) iteration_statement -> . FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN statement
    (13) declaration -> . type IDENTIFIER SEMICOLON
    (14) declaration -> . type IDENTIFIER identifiers SEMICOLON
    (15) declaration -> . type assignment SEMICOLON
    (16) declaration -> . assignment SEMICOLON
    (17) declaration -> . function_call SEMICOLON
    (18) declaration -> . array_usage SEMICOLON
    (19) declaration -> . type array_usage SEMICOLON
    (20) declaration -> . struct
    (71) selection_statement -> . IF LPAREN expression RPAREN compound_statement
    (72) selection_statement -> . IF LPAREN expression RPAREN statement
    (73) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE compound_statement
    (74) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE statement
    (75) selection_statement -> . IF LPAREN expression RPAREN statement ELSE compound_statement
    (76) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (77) return_statement -> . RETURN SEMICOLON
    (78) return_statement -> . RETURN expression SEMICOLON
    (57) cout_statement -> . COUT LESS LESS expression SEMICOLON
    (58) cout_statement -> . COUT LESS LESS expression LESS LESS expression SEMICOLON
    (56) cin_statement -> . CIN GREATER GREATER IDENTIFIER SEMICOLON
    (98) type -> . BOOL
    (99) type -> . INT
    (100) type -> . FLOAT
    (101) type -> . CHAR
    (102) type -> . VOID
    (21) assignment -> . IDENTIFIER EQUALS expression
    (22) assignment -> . IDENTIFIER PLUS EQUALS expression
    (23) assignment -> . IDENTIFIER MINUS EQUALS expression
    (27) function_call -> . IDENTIFIER LPAREN RPAREN
    (28) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (29) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (34) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (35) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE
    (51) struct -> . STRUCT IDENTIFIER LBRACE declaration_list RBRACE
    (52) struct -> . STRUCT IDENTIFIER LBRACE declaration_list RBRACE IDENTIFIER SEMICOLON

    RBRACE          shift and go to state 161
    WHILE           shift and go to state 169
    DO              shift and go to state 170
    FOR             shift and go to state 171
    IF              shift and go to state 172
    RETURN          shift and go to state 173
    COUT            shift and go to state 174
    CIN             shift and go to state 175
    BOOL            shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    CHAR            shift and go to state 23
    VOID            shift and go to state 24
    IDENTIFIER      shift and go to state 118
    STRUCT          shift and go to state 27

    statement                      shift and go to state 162
    iteration_statement            shift and go to state 163
    declaration                    shift and go to state 164
    selection_statement            shift and go to state 165
    return_statement               shift and go to state 166
    cout_statement                 shift and go to state 167
    cin_statement                  shift and go to state 168
    type                           shift and go to state 122
    assignment                     shift and go to state 123
    function_call                  shift and go to state 124
    array_usage                    shift and go to state 125
    struct                         shift and go to state 126

state 155

    (44) statement_list -> empty .

    RBRACE          reduce using rule 44 (statement_list -> empty .)
    WHILE           reduce using rule 44 (statement_list -> empty .)
    DO              reduce using rule 44 (statement_list -> empty .)
    FOR             reduce using rule 44 (statement_list -> empty .)
    IF              reduce using rule 44 (statement_list -> empty .)
    RETURN          reduce using rule 44 (statement_list -> empty .)
    COUT            reduce using rule 44 (statement_list -> empty .)
    CIN             reduce using rule 44 (statement_list -> empty .)
    BOOL            reduce using rule 44 (statement_list -> empty .)
    INT             reduce using rule 44 (statement_list -> empty .)
    FLOAT           reduce using rule 44 (statement_list -> empty .)
    CHAR            reduce using rule 44 (statement_list -> empty .)
    VOID            reduce using rule 44 (statement_list -> empty .)
    IDENTIFIER      reduce using rule 44 (statement_list -> empty .)
    STRUCT          reduce using rule 44 (statement_list -> empty .)


state 156

    (35) array_usage -> IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE .

    SEMICOLON       reduce using rule 35 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE .)
    PLUS            reduce using rule 35 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE .)
    MINUS           reduce using rule 35 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE .)
    TIMES           reduce using rule 35 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE .)
    DIVIDE          reduce using rule 35 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE .)
    MODULUS         reduce using rule 35 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE .)
    ISEQUAL         reduce using rule 35 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE .)
    NOT             reduce using rule 35 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE .)
    LESS            reduce using rule 35 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE .)
    GREATER         reduce using rule 35 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE .)
    AND             reduce using rule 35 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE .)
    OR              reduce using rule 35 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE .)
    $end            reduce using rule 35 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE .)
    RBRACKET        reduce using rule 35 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE .)
    RPAREN          reduce using rule 35 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE .)
    COMMA           reduce using rule 35 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE .)
    RBRACE          reduce using rule 35 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE .)
    BOOLEAN         reduce using rule 35 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE .)
    STRING          reduce using rule 35 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE .)
    IDENTIFIER      reduce using rule 35 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE .)
    LETTER          reduce using rule 35 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE .)
    BOOL            reduce using rule 35 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE .)
    INT             reduce using rule 35 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE .)
    FLOAT           reduce using rule 35 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE .)
    CHAR            reduce using rule 35 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE .)
    VOID            reduce using rule 35 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE .)
    POUND           reduce using rule 35 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE .)
    USING           reduce using rule 35 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE .)
    STRUCT          reduce using rule 35 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE .)
    INTEGER         reduce using rule 35 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE .)
    FLOATINGPOINT   reduce using rule 35 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE .)
    EQUALS          reduce using rule 35 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE .)


state 157

    (52) struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE IDENTIFIER SEMICOLON .

    BOOLEAN         reduce using rule 52 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE IDENTIFIER SEMICOLON .)
    STRING          reduce using rule 52 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 52 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE IDENTIFIER SEMICOLON .)
    LETTER          reduce using rule 52 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE IDENTIFIER SEMICOLON .)
    BOOL            reduce using rule 52 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE IDENTIFIER SEMICOLON .)
    INT             reduce using rule 52 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE IDENTIFIER SEMICOLON .)
    FLOAT           reduce using rule 52 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE IDENTIFIER SEMICOLON .)
    CHAR            reduce using rule 52 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE IDENTIFIER SEMICOLON .)
    VOID            reduce using rule 52 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE IDENTIFIER SEMICOLON .)
    POUND           reduce using rule 52 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE IDENTIFIER SEMICOLON .)
    USING           reduce using rule 52 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE IDENTIFIER SEMICOLON .)
    STRUCT          reduce using rule 52 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE IDENTIFIER SEMICOLON .)
    INTEGER         reduce using rule 52 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE IDENTIFIER SEMICOLON .)
    FLOATINGPOINT   reduce using rule 52 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE IDENTIFIER SEMICOLON .)
    PLUS            reduce using rule 52 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE IDENTIFIER SEMICOLON .)
    MINUS           reduce using rule 52 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE IDENTIFIER SEMICOLON .)
    NOT             reduce using rule 52 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE IDENTIFIER SEMICOLON .)
    $end            reduce using rule 52 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE IDENTIFIER SEMICOLON .)
    RBRACE          reduce using rule 52 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE IDENTIFIER SEMICOLON .)
    WHILE           reduce using rule 52 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE IDENTIFIER SEMICOLON .)
    DO              reduce using rule 52 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE IDENTIFIER SEMICOLON .)
    FOR             reduce using rule 52 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE IDENTIFIER SEMICOLON .)
    IF              reduce using rule 52 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE IDENTIFIER SEMICOLON .)
    RETURN          reduce using rule 52 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE IDENTIFIER SEMICOLON .)
    COUT            reduce using rule 52 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE IDENTIFIER SEMICOLON .)
    CIN             reduce using rule 52 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE IDENTIFIER SEMICOLON .)
    ELSE            reduce using rule 52 (struct -> STRUCT IDENTIFIER LBRACE declaration_list RBRACE IDENTIFIER SEMICOLON .)


state 158

    (14) declaration -> type IDENTIFIER identifiers SEMICOLON .

    BOOL            reduce using rule 14 (declaration -> type IDENTIFIER identifiers SEMICOLON .)
    INT             reduce using rule 14 (declaration -> type IDENTIFIER identifiers SEMICOLON .)
    FLOAT           reduce using rule 14 (declaration -> type IDENTIFIER identifiers SEMICOLON .)
    CHAR            reduce using rule 14 (declaration -> type IDENTIFIER identifiers SEMICOLON .)
    VOID            reduce using rule 14 (declaration -> type IDENTIFIER identifiers SEMICOLON .)
    IDENTIFIER      reduce using rule 14 (declaration -> type IDENTIFIER identifiers SEMICOLON .)
    STRUCT          reduce using rule 14 (declaration -> type IDENTIFIER identifiers SEMICOLON .)
    RBRACE          reduce using rule 14 (declaration -> type IDENTIFIER identifiers SEMICOLON .)
    WHILE           reduce using rule 14 (declaration -> type IDENTIFIER identifiers SEMICOLON .)
    DO              reduce using rule 14 (declaration -> type IDENTIFIER identifiers SEMICOLON .)
    FOR             reduce using rule 14 (declaration -> type IDENTIFIER identifiers SEMICOLON .)
    IF              reduce using rule 14 (declaration -> type IDENTIFIER identifiers SEMICOLON .)
    RETURN          reduce using rule 14 (declaration -> type IDENTIFIER identifiers SEMICOLON .)
    COUT            reduce using rule 14 (declaration -> type IDENTIFIER identifiers SEMICOLON .)
    CIN             reduce using rule 14 (declaration -> type IDENTIFIER identifiers SEMICOLON .)
    ELSE            reduce using rule 14 (declaration -> type IDENTIFIER identifiers SEMICOLON .)


state 159

    (24) identifiers -> COMMA IDENTIFIER .
    (26) identifiers -> COMMA IDENTIFIER . identifiers
    (21) assignment -> IDENTIFIER . EQUALS expression
    (22) assignment -> IDENTIFIER . PLUS EQUALS expression
    (23) assignment -> IDENTIFIER . MINUS EQUALS expression
    (24) identifiers -> . COMMA IDENTIFIER
    (25) identifiers -> . COMMA assignment
    (26) identifiers -> . COMMA IDENTIFIER identifiers

    SEMICOLON       reduce using rule 24 (identifiers -> COMMA IDENTIFIER .)
    EQUALS          shift and go to state 50
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    COMMA           shift and go to state 151

    identifiers                    shift and go to state 176

state 160

    (25) identifiers -> COMMA assignment .

    SEMICOLON       reduce using rule 25 (identifiers -> COMMA assignment .)


state 161

    (42) compound_statement -> LBRACE statement_list RBRACE .

    BOOLEAN         reduce using rule 42 (compound_statement -> LBRACE statement_list RBRACE .)
    STRING          reduce using rule 42 (compound_statement -> LBRACE statement_list RBRACE .)
    IDENTIFIER      reduce using rule 42 (compound_statement -> LBRACE statement_list RBRACE .)
    LETTER          reduce using rule 42 (compound_statement -> LBRACE statement_list RBRACE .)
    BOOL            reduce using rule 42 (compound_statement -> LBRACE statement_list RBRACE .)
    INT             reduce using rule 42 (compound_statement -> LBRACE statement_list RBRACE .)
    FLOAT           reduce using rule 42 (compound_statement -> LBRACE statement_list RBRACE .)
    CHAR            reduce using rule 42 (compound_statement -> LBRACE statement_list RBRACE .)
    VOID            reduce using rule 42 (compound_statement -> LBRACE statement_list RBRACE .)
    POUND           reduce using rule 42 (compound_statement -> LBRACE statement_list RBRACE .)
    USING           reduce using rule 42 (compound_statement -> LBRACE statement_list RBRACE .)
    STRUCT          reduce using rule 42 (compound_statement -> LBRACE statement_list RBRACE .)
    INTEGER         reduce using rule 42 (compound_statement -> LBRACE statement_list RBRACE .)
    FLOATINGPOINT   reduce using rule 42 (compound_statement -> LBRACE statement_list RBRACE .)
    PLUS            reduce using rule 42 (compound_statement -> LBRACE statement_list RBRACE .)
    MINUS           reduce using rule 42 (compound_statement -> LBRACE statement_list RBRACE .)
    NOT             reduce using rule 42 (compound_statement -> LBRACE statement_list RBRACE .)
    $end            reduce using rule 42 (compound_statement -> LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 42 (compound_statement -> LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 42 (compound_statement -> LBRACE statement_list RBRACE .)
    DO              reduce using rule 42 (compound_statement -> LBRACE statement_list RBRACE .)
    FOR             reduce using rule 42 (compound_statement -> LBRACE statement_list RBRACE .)
    IF              reduce using rule 42 (compound_statement -> LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 42 (compound_statement -> LBRACE statement_list RBRACE .)
    COUT            reduce using rule 42 (compound_statement -> LBRACE statement_list RBRACE .)
    CIN             reduce using rule 42 (compound_statement -> LBRACE statement_list RBRACE .)
    ELSE            reduce using rule 42 (compound_statement -> LBRACE statement_list RBRACE .)


state 162

    (43) statement_list -> statement_list statement .

    RBRACE          reduce using rule 43 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 43 (statement_list -> statement_list statement .)
    DO              reduce using rule 43 (statement_list -> statement_list statement .)
    FOR             reduce using rule 43 (statement_list -> statement_list statement .)
    IF              reduce using rule 43 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 43 (statement_list -> statement_list statement .)
    COUT            reduce using rule 43 (statement_list -> statement_list statement .)
    CIN             reduce using rule 43 (statement_list -> statement_list statement .)
    BOOL            reduce using rule 43 (statement_list -> statement_list statement .)
    INT             reduce using rule 43 (statement_list -> statement_list statement .)
    FLOAT           reduce using rule 43 (statement_list -> statement_list statement .)
    CHAR            reduce using rule 43 (statement_list -> statement_list statement .)
    VOID            reduce using rule 43 (statement_list -> statement_list statement .)
    IDENTIFIER      reduce using rule 43 (statement_list -> statement_list statement .)
    STRUCT          reduce using rule 43 (statement_list -> statement_list statement .)


state 163

    (45) statement -> iteration_statement .

    RBRACE          reduce using rule 45 (statement -> iteration_statement .)
    WHILE           reduce using rule 45 (statement -> iteration_statement .)
    DO              reduce using rule 45 (statement -> iteration_statement .)
    FOR             reduce using rule 45 (statement -> iteration_statement .)
    IF              reduce using rule 45 (statement -> iteration_statement .)
    RETURN          reduce using rule 45 (statement -> iteration_statement .)
    COUT            reduce using rule 45 (statement -> iteration_statement .)
    CIN             reduce using rule 45 (statement -> iteration_statement .)
    BOOL            reduce using rule 45 (statement -> iteration_statement .)
    INT             reduce using rule 45 (statement -> iteration_statement .)
    FLOAT           reduce using rule 45 (statement -> iteration_statement .)
    CHAR            reduce using rule 45 (statement -> iteration_statement .)
    VOID            reduce using rule 45 (statement -> iteration_statement .)
    IDENTIFIER      reduce using rule 45 (statement -> iteration_statement .)
    STRUCT          reduce using rule 45 (statement -> iteration_statement .)
    ELSE            reduce using rule 45 (statement -> iteration_statement .)


state 164

    (46) statement -> declaration .

    RBRACE          reduce using rule 46 (statement -> declaration .)
    WHILE           reduce using rule 46 (statement -> declaration .)
    DO              reduce using rule 46 (statement -> declaration .)
    FOR             reduce using rule 46 (statement -> declaration .)
    IF              reduce using rule 46 (statement -> declaration .)
    RETURN          reduce using rule 46 (statement -> declaration .)
    COUT            reduce using rule 46 (statement -> declaration .)
    CIN             reduce using rule 46 (statement -> declaration .)
    BOOL            reduce using rule 46 (statement -> declaration .)
    INT             reduce using rule 46 (statement -> declaration .)
    FLOAT           reduce using rule 46 (statement -> declaration .)
    CHAR            reduce using rule 46 (statement -> declaration .)
    VOID            reduce using rule 46 (statement -> declaration .)
    IDENTIFIER      reduce using rule 46 (statement -> declaration .)
    STRUCT          reduce using rule 46 (statement -> declaration .)
    ELSE            reduce using rule 46 (statement -> declaration .)


state 165

    (47) statement -> selection_statement .

    RBRACE          reduce using rule 47 (statement -> selection_statement .)
    WHILE           reduce using rule 47 (statement -> selection_statement .)
    DO              reduce using rule 47 (statement -> selection_statement .)
    FOR             reduce using rule 47 (statement -> selection_statement .)
    IF              reduce using rule 47 (statement -> selection_statement .)
    RETURN          reduce using rule 47 (statement -> selection_statement .)
    COUT            reduce using rule 47 (statement -> selection_statement .)
    CIN             reduce using rule 47 (statement -> selection_statement .)
    BOOL            reduce using rule 47 (statement -> selection_statement .)
    INT             reduce using rule 47 (statement -> selection_statement .)
    FLOAT           reduce using rule 47 (statement -> selection_statement .)
    CHAR            reduce using rule 47 (statement -> selection_statement .)
    VOID            reduce using rule 47 (statement -> selection_statement .)
    IDENTIFIER      reduce using rule 47 (statement -> selection_statement .)
    STRUCT          reduce using rule 47 (statement -> selection_statement .)
    ELSE            reduce using rule 47 (statement -> selection_statement .)


state 166

    (48) statement -> return_statement .

    RBRACE          reduce using rule 48 (statement -> return_statement .)
    WHILE           reduce using rule 48 (statement -> return_statement .)
    DO              reduce using rule 48 (statement -> return_statement .)
    FOR             reduce using rule 48 (statement -> return_statement .)
    IF              reduce using rule 48 (statement -> return_statement .)
    RETURN          reduce using rule 48 (statement -> return_statement .)
    COUT            reduce using rule 48 (statement -> return_statement .)
    CIN             reduce using rule 48 (statement -> return_statement .)
    BOOL            reduce using rule 48 (statement -> return_statement .)
    INT             reduce using rule 48 (statement -> return_statement .)
    FLOAT           reduce using rule 48 (statement -> return_statement .)
    CHAR            reduce using rule 48 (statement -> return_statement .)
    VOID            reduce using rule 48 (statement -> return_statement .)
    IDENTIFIER      reduce using rule 48 (statement -> return_statement .)
    STRUCT          reduce using rule 48 (statement -> return_statement .)
    ELSE            reduce using rule 48 (statement -> return_statement .)


state 167

    (49) statement -> cout_statement .

    RBRACE          reduce using rule 49 (statement -> cout_statement .)
    WHILE           reduce using rule 49 (statement -> cout_statement .)
    DO              reduce using rule 49 (statement -> cout_statement .)
    FOR             reduce using rule 49 (statement -> cout_statement .)
    IF              reduce using rule 49 (statement -> cout_statement .)
    RETURN          reduce using rule 49 (statement -> cout_statement .)
    COUT            reduce using rule 49 (statement -> cout_statement .)
    CIN             reduce using rule 49 (statement -> cout_statement .)
    BOOL            reduce using rule 49 (statement -> cout_statement .)
    INT             reduce using rule 49 (statement -> cout_statement .)
    FLOAT           reduce using rule 49 (statement -> cout_statement .)
    CHAR            reduce using rule 49 (statement -> cout_statement .)
    VOID            reduce using rule 49 (statement -> cout_statement .)
    IDENTIFIER      reduce using rule 49 (statement -> cout_statement .)
    STRUCT          reduce using rule 49 (statement -> cout_statement .)
    ELSE            reduce using rule 49 (statement -> cout_statement .)


state 168

    (50) statement -> cin_statement .

    RBRACE          reduce using rule 50 (statement -> cin_statement .)
    WHILE           reduce using rule 50 (statement -> cin_statement .)
    DO              reduce using rule 50 (statement -> cin_statement .)
    FOR             reduce using rule 50 (statement -> cin_statement .)
    IF              reduce using rule 50 (statement -> cin_statement .)
    RETURN          reduce using rule 50 (statement -> cin_statement .)
    COUT            reduce using rule 50 (statement -> cin_statement .)
    CIN             reduce using rule 50 (statement -> cin_statement .)
    BOOL            reduce using rule 50 (statement -> cin_statement .)
    INT             reduce using rule 50 (statement -> cin_statement .)
    FLOAT           reduce using rule 50 (statement -> cin_statement .)
    CHAR            reduce using rule 50 (statement -> cin_statement .)
    VOID            reduce using rule 50 (statement -> cin_statement .)
    IDENTIFIER      reduce using rule 50 (statement -> cin_statement .)
    STRUCT          reduce using rule 50 (statement -> cin_statement .)
    ELSE            reduce using rule 50 (statement -> cin_statement .)


state 169

    (63) iteration_statement -> WHILE . LPAREN expression RPAREN compound_statement
    (64) iteration_statement -> WHILE . LPAREN expression RPAREN statement

    LPAREN          shift and go to state 177


state 170

    (65) iteration_statement -> DO . compound_statement WHILE LPAREN expression RPAREN SEMICOLON
    (66) iteration_statement -> DO . statement WHILE LPAREN expression RPAREN SEMICOLON
    (42) compound_statement -> . LBRACE statement_list RBRACE
    (45) statement -> . iteration_statement
    (46) statement -> . declaration
    (47) statement -> . selection_statement
    (48) statement -> . return_statement
    (49) statement -> . cout_statement
    (50) statement -> . cin_statement
    (63) iteration_statement -> . WHILE LPAREN expression RPAREN compound_statement
    (64) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (65) iteration_statement -> . DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON
    (66) iteration_statement -> . DO statement WHILE LPAREN expression RPAREN SEMICOLON
    (67) iteration_statement -> . FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN compound_statement
    (68) iteration_statement -> . FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN statement
    (69) iteration_statement -> . FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN compound_statement
    (70) iteration_statement -> . FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN statement
    (13) declaration -> . type IDENTIFIER SEMICOLON
    (14) declaration -> . type IDENTIFIER identifiers SEMICOLON
    (15) declaration -> . type assignment SEMICOLON
    (16) declaration -> . assignment SEMICOLON
    (17) declaration -> . function_call SEMICOLON
    (18) declaration -> . array_usage SEMICOLON
    (19) declaration -> . type array_usage SEMICOLON
    (20) declaration -> . struct
    (71) selection_statement -> . IF LPAREN expression RPAREN compound_statement
    (72) selection_statement -> . IF LPAREN expression RPAREN statement
    (73) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE compound_statement
    (74) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE statement
    (75) selection_statement -> . IF LPAREN expression RPAREN statement ELSE compound_statement
    (76) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (77) return_statement -> . RETURN SEMICOLON
    (78) return_statement -> . RETURN expression SEMICOLON
    (57) cout_statement -> . COUT LESS LESS expression SEMICOLON
    (58) cout_statement -> . COUT LESS LESS expression LESS LESS expression SEMICOLON
    (56) cin_statement -> . CIN GREATER GREATER IDENTIFIER SEMICOLON
    (98) type -> . BOOL
    (99) type -> . INT
    (100) type -> . FLOAT
    (101) type -> . CHAR
    (102) type -> . VOID
    (21) assignment -> . IDENTIFIER EQUALS expression
    (22) assignment -> . IDENTIFIER PLUS EQUALS expression
    (23) assignment -> . IDENTIFIER MINUS EQUALS expression
    (27) function_call -> . IDENTIFIER LPAREN RPAREN
    (28) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (29) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (34) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (35) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE
    (51) struct -> . STRUCT IDENTIFIER LBRACE declaration_list RBRACE
    (52) struct -> . STRUCT IDENTIFIER LBRACE declaration_list RBRACE IDENTIFIER SEMICOLON

    LBRACE          shift and go to state 145
    WHILE           shift and go to state 169
    DO              shift and go to state 170
    FOR             shift and go to state 171
    IF              shift and go to state 172
    RETURN          shift and go to state 173
    COUT            shift and go to state 174
    CIN             shift and go to state 175
    BOOL            shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    CHAR            shift and go to state 23
    VOID            shift and go to state 24
    IDENTIFIER      shift and go to state 118
    STRUCT          shift and go to state 27

    compound_statement             shift and go to state 178
    statement                      shift and go to state 179
    iteration_statement            shift and go to state 163
    declaration                    shift and go to state 164
    selection_statement            shift and go to state 165
    return_statement               shift and go to state 166
    cout_statement                 shift and go to state 167
    cin_statement                  shift and go to state 168
    type                           shift and go to state 122
    assignment                     shift and go to state 123
    function_call                  shift and go to state 124
    array_usage                    shift and go to state 125
    struct                         shift and go to state 126

state 171

    (67) iteration_statement -> FOR . LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN compound_statement
    (68) iteration_statement -> FOR . LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN statement
    (69) iteration_statement -> FOR . LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN compound_statement
    (70) iteration_statement -> FOR . LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN statement

    LPAREN          shift and go to state 180


state 172

    (71) selection_statement -> IF . LPAREN expression RPAREN compound_statement
    (72) selection_statement -> IF . LPAREN expression RPAREN statement
    (73) selection_statement -> IF . LPAREN expression RPAREN compound_statement ELSE compound_statement
    (74) selection_statement -> IF . LPAREN expression RPAREN compound_statement ELSE statement
    (75) selection_statement -> IF . LPAREN expression RPAREN statement ELSE compound_statement
    (76) selection_statement -> IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN          shift and go to state 181


state 173

    (77) return_statement -> RETURN . SEMICOLON
    (78) return_statement -> RETURN . expression SEMICOLON
    (88) expression -> . BOOLEAN
    (89) expression -> . number
    (90) expression -> . STRING
    (91) expression -> . IDENTIFIER
    (92) expression -> . LETTER
    (93) expression -> . assignment
    (94) expression -> . array_usage
    (95) expression -> . function_call
    (96) expression -> . math_expression
    (97) expression -> . conditional_expression
    (32) number -> . INTEGER
    (33) number -> . FLOATINGPOINT
    (21) assignment -> . IDENTIFIER EQUALS expression
    (22) assignment -> . IDENTIFIER PLUS EQUALS expression
    (23) assignment -> . IDENTIFIER MINUS EQUALS expression
    (34) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (35) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN RPAREN
    (28) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (29) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (103) math_expression -> . expression PLUS expression
    (104) math_expression -> . expression MINUS expression
    (105) math_expression -> . expression TIMES expression
    (106) math_expression -> . expression DIVIDE expression
    (107) math_expression -> . expression MODULUS expression
    (108) math_expression -> . expression PLUS PLUS
    (109) math_expression -> . expression MINUS MINUS
    (110) math_expression -> . PLUS PLUS expression
    (111) math_expression -> . MINUS MINUS expression
    (79) conditional_expression -> . expression ISEQUAL expression
    (80) conditional_expression -> . expression NOT EQUALS expression
    (81) conditional_expression -> . expression LESS expression
    (82) conditional_expression -> . expression LESS EQUALS expression
    (83) conditional_expression -> . expression GREATER expression
    (84) conditional_expression -> . expression GREATER EQUALS expression
    (85) conditional_expression -> . expression AND expression
    (86) conditional_expression -> . expression OR expression
    (87) conditional_expression -> . NOT expression

    SEMICOLON       shift and go to state 182
    BOOLEAN         shift and go to state 13
    STRING          shift and go to state 15
    IDENTIFIER      shift and go to state 62
    LETTER          shift and go to state 16
    INTEGER         shift and go to state 28
    FLOATINGPOINT   shift and go to state 29
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    NOT             shift and go to state 32

    expression                     shift and go to state 183
    number                         shift and go to state 14
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 63
    function_call                  shift and go to state 17
    math_expression                shift and go to state 18
    conditional_expression         shift and go to state 19

state 174

    (57) cout_statement -> COUT . LESS LESS expression SEMICOLON
    (58) cout_statement -> COUT . LESS LESS expression LESS LESS expression SEMICOLON

    LESS            shift and go to state 184


state 175

    (56) cin_statement -> CIN . GREATER GREATER IDENTIFIER SEMICOLON

    GREATER         shift and go to state 185


state 176

    (26) identifiers -> COMMA IDENTIFIER identifiers .

    SEMICOLON       reduce using rule 26 (identifiers -> COMMA IDENTIFIER identifiers .)


state 177

    (63) iteration_statement -> WHILE LPAREN . expression RPAREN compound_statement
    (64) iteration_statement -> WHILE LPAREN . expression RPAREN statement
    (88) expression -> . BOOLEAN
    (89) expression -> . number
    (90) expression -> . STRING
    (91) expression -> . IDENTIFIER
    (92) expression -> . LETTER
    (93) expression -> . assignment
    (94) expression -> . array_usage
    (95) expression -> . function_call
    (96) expression -> . math_expression
    (97) expression -> . conditional_expression
    (32) number -> . INTEGER
    (33) number -> . FLOATINGPOINT
    (21) assignment -> . IDENTIFIER EQUALS expression
    (22) assignment -> . IDENTIFIER PLUS EQUALS expression
    (23) assignment -> . IDENTIFIER MINUS EQUALS expression
    (34) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (35) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN RPAREN
    (28) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (29) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (103) math_expression -> . expression PLUS expression
    (104) math_expression -> . expression MINUS expression
    (105) math_expression -> . expression TIMES expression
    (106) math_expression -> . expression DIVIDE expression
    (107) math_expression -> . expression MODULUS expression
    (108) math_expression -> . expression PLUS PLUS
    (109) math_expression -> . expression MINUS MINUS
    (110) math_expression -> . PLUS PLUS expression
    (111) math_expression -> . MINUS MINUS expression
    (79) conditional_expression -> . expression ISEQUAL expression
    (80) conditional_expression -> . expression NOT EQUALS expression
    (81) conditional_expression -> . expression LESS expression
    (82) conditional_expression -> . expression LESS EQUALS expression
    (83) conditional_expression -> . expression GREATER expression
    (84) conditional_expression -> . expression GREATER EQUALS expression
    (85) conditional_expression -> . expression AND expression
    (86) conditional_expression -> . expression OR expression
    (87) conditional_expression -> . NOT expression

    BOOLEAN         shift and go to state 13
    STRING          shift and go to state 15
    IDENTIFIER      shift and go to state 62
    LETTER          shift and go to state 16
    INTEGER         shift and go to state 28
    FLOATINGPOINT   shift and go to state 29
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    NOT             shift and go to state 32

    expression                     shift and go to state 186
    number                         shift and go to state 14
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 63
    function_call                  shift and go to state 17
    math_expression                shift and go to state 18
    conditional_expression         shift and go to state 19

state 178

    (65) iteration_statement -> DO compound_statement . WHILE LPAREN expression RPAREN SEMICOLON

    WHILE           shift and go to state 187


state 179

    (66) iteration_statement -> DO statement . WHILE LPAREN expression RPAREN SEMICOLON

    WHILE           shift and go to state 188


state 180

    (67) iteration_statement -> FOR LPAREN . type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN compound_statement
    (68) iteration_statement -> FOR LPAREN . type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN statement
    (69) iteration_statement -> FOR LPAREN . type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN compound_statement
    (70) iteration_statement -> FOR LPAREN . type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN statement
    (98) type -> . BOOL
    (99) type -> . INT
    (100) type -> . FLOAT
    (101) type -> . CHAR
    (102) type -> . VOID

    BOOL            shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    CHAR            shift and go to state 23
    VOID            shift and go to state 24

    type                           shift and go to state 189

state 181

    (71) selection_statement -> IF LPAREN . expression RPAREN compound_statement
    (72) selection_statement -> IF LPAREN . expression RPAREN statement
    (73) selection_statement -> IF LPAREN . expression RPAREN compound_statement ELSE compound_statement
    (74) selection_statement -> IF LPAREN . expression RPAREN compound_statement ELSE statement
    (75) selection_statement -> IF LPAREN . expression RPAREN statement ELSE compound_statement
    (76) selection_statement -> IF LPAREN . expression RPAREN statement ELSE statement
    (88) expression -> . BOOLEAN
    (89) expression -> . number
    (90) expression -> . STRING
    (91) expression -> . IDENTIFIER
    (92) expression -> . LETTER
    (93) expression -> . assignment
    (94) expression -> . array_usage
    (95) expression -> . function_call
    (96) expression -> . math_expression
    (97) expression -> . conditional_expression
    (32) number -> . INTEGER
    (33) number -> . FLOATINGPOINT
    (21) assignment -> . IDENTIFIER EQUALS expression
    (22) assignment -> . IDENTIFIER PLUS EQUALS expression
    (23) assignment -> . IDENTIFIER MINUS EQUALS expression
    (34) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (35) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN RPAREN
    (28) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (29) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (103) math_expression -> . expression PLUS expression
    (104) math_expression -> . expression MINUS expression
    (105) math_expression -> . expression TIMES expression
    (106) math_expression -> . expression DIVIDE expression
    (107) math_expression -> . expression MODULUS expression
    (108) math_expression -> . expression PLUS PLUS
    (109) math_expression -> . expression MINUS MINUS
    (110) math_expression -> . PLUS PLUS expression
    (111) math_expression -> . MINUS MINUS expression
    (79) conditional_expression -> . expression ISEQUAL expression
    (80) conditional_expression -> . expression NOT EQUALS expression
    (81) conditional_expression -> . expression LESS expression
    (82) conditional_expression -> . expression LESS EQUALS expression
    (83) conditional_expression -> . expression GREATER expression
    (84) conditional_expression -> . expression GREATER EQUALS expression
    (85) conditional_expression -> . expression AND expression
    (86) conditional_expression -> . expression OR expression
    (87) conditional_expression -> . NOT expression

    BOOLEAN         shift and go to state 13
    STRING          shift and go to state 15
    IDENTIFIER      shift and go to state 62
    LETTER          shift and go to state 16
    INTEGER         shift and go to state 28
    FLOATINGPOINT   shift and go to state 29
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    NOT             shift and go to state 32

    expression                     shift and go to state 190
    number                         shift and go to state 14
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 63
    function_call                  shift and go to state 17
    math_expression                shift and go to state 18
    conditional_expression         shift and go to state 19

state 182

    (77) return_statement -> RETURN SEMICOLON .

    RBRACE          reduce using rule 77 (return_statement -> RETURN SEMICOLON .)
    WHILE           reduce using rule 77 (return_statement -> RETURN SEMICOLON .)
    DO              reduce using rule 77 (return_statement -> RETURN SEMICOLON .)
    FOR             reduce using rule 77 (return_statement -> RETURN SEMICOLON .)
    IF              reduce using rule 77 (return_statement -> RETURN SEMICOLON .)
    RETURN          reduce using rule 77 (return_statement -> RETURN SEMICOLON .)
    COUT            reduce using rule 77 (return_statement -> RETURN SEMICOLON .)
    CIN             reduce using rule 77 (return_statement -> RETURN SEMICOLON .)
    BOOL            reduce using rule 77 (return_statement -> RETURN SEMICOLON .)
    INT             reduce using rule 77 (return_statement -> RETURN SEMICOLON .)
    FLOAT           reduce using rule 77 (return_statement -> RETURN SEMICOLON .)
    CHAR            reduce using rule 77 (return_statement -> RETURN SEMICOLON .)
    VOID            reduce using rule 77 (return_statement -> RETURN SEMICOLON .)
    IDENTIFIER      reduce using rule 77 (return_statement -> RETURN SEMICOLON .)
    STRUCT          reduce using rule 77 (return_statement -> RETURN SEMICOLON .)
    ELSE            reduce using rule 77 (return_statement -> RETURN SEMICOLON .)


state 183

    (78) return_statement -> RETURN expression . SEMICOLON
    (103) math_expression -> expression . PLUS expression
    (104) math_expression -> expression . MINUS expression
    (105) math_expression -> expression . TIMES expression
    (106) math_expression -> expression . DIVIDE expression
    (107) math_expression -> expression . MODULUS expression
    (108) math_expression -> expression . PLUS PLUS
    (109) math_expression -> expression . MINUS MINUS
    (79) conditional_expression -> expression . ISEQUAL expression
    (80) conditional_expression -> expression . NOT EQUALS expression
    (81) conditional_expression -> expression . LESS expression
    (82) conditional_expression -> expression . LESS EQUALS expression
    (83) conditional_expression -> expression . GREATER expression
    (84) conditional_expression -> expression . GREATER EQUALS expression
    (85) conditional_expression -> expression . AND expression
    (86) conditional_expression -> expression . OR expression

    SEMICOLON       shift and go to state 191
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULUS         shift and go to state 39
    ISEQUAL         shift and go to state 40
    NOT             shift and go to state 41
    LESS            shift and go to state 42
    GREATER         shift and go to state 43
    AND             shift and go to state 44
    OR              shift and go to state 45


state 184

    (57) cout_statement -> COUT LESS . LESS expression SEMICOLON
    (58) cout_statement -> COUT LESS . LESS expression LESS LESS expression SEMICOLON

    LESS            shift and go to state 192


state 185

    (56) cin_statement -> CIN GREATER . GREATER IDENTIFIER SEMICOLON

    GREATER         shift and go to state 193


state 186

    (63) iteration_statement -> WHILE LPAREN expression . RPAREN compound_statement
    (64) iteration_statement -> WHILE LPAREN expression . RPAREN statement
    (103) math_expression -> expression . PLUS expression
    (104) math_expression -> expression . MINUS expression
    (105) math_expression -> expression . TIMES expression
    (106) math_expression -> expression . DIVIDE expression
    (107) math_expression -> expression . MODULUS expression
    (108) math_expression -> expression . PLUS PLUS
    (109) math_expression -> expression . MINUS MINUS
    (79) conditional_expression -> expression . ISEQUAL expression
    (80) conditional_expression -> expression . NOT EQUALS expression
    (81) conditional_expression -> expression . LESS expression
    (82) conditional_expression -> expression . LESS EQUALS expression
    (83) conditional_expression -> expression . GREATER expression
    (84) conditional_expression -> expression . GREATER EQUALS expression
    (85) conditional_expression -> expression . AND expression
    (86) conditional_expression -> expression . OR expression

    RPAREN          shift and go to state 194
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULUS         shift and go to state 39
    ISEQUAL         shift and go to state 40
    NOT             shift and go to state 41
    LESS            shift and go to state 42
    GREATER         shift and go to state 43
    AND             shift and go to state 44
    OR              shift and go to state 45


state 187

    (65) iteration_statement -> DO compound_statement WHILE . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 195


state 188

    (66) iteration_statement -> DO statement WHILE . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 196


state 189

    (67) iteration_statement -> FOR LPAREN type . IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN compound_statement
    (68) iteration_statement -> FOR LPAREN type . IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN statement
    (69) iteration_statement -> FOR LPAREN type . IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN compound_statement
    (70) iteration_statement -> FOR LPAREN type . IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN statement

    IDENTIFIER      shift and go to state 197


state 190

    (71) selection_statement -> IF LPAREN expression . RPAREN compound_statement
    (72) selection_statement -> IF LPAREN expression . RPAREN statement
    (73) selection_statement -> IF LPAREN expression . RPAREN compound_statement ELSE compound_statement
    (74) selection_statement -> IF LPAREN expression . RPAREN compound_statement ELSE statement
    (75) selection_statement -> IF LPAREN expression . RPAREN statement ELSE compound_statement
    (76) selection_statement -> IF LPAREN expression . RPAREN statement ELSE statement
    (103) math_expression -> expression . PLUS expression
    (104) math_expression -> expression . MINUS expression
    (105) math_expression -> expression . TIMES expression
    (106) math_expression -> expression . DIVIDE expression
    (107) math_expression -> expression . MODULUS expression
    (108) math_expression -> expression . PLUS PLUS
    (109) math_expression -> expression . MINUS MINUS
    (79) conditional_expression -> expression . ISEQUAL expression
    (80) conditional_expression -> expression . NOT EQUALS expression
    (81) conditional_expression -> expression . LESS expression
    (82) conditional_expression -> expression . LESS EQUALS expression
    (83) conditional_expression -> expression . GREATER expression
    (84) conditional_expression -> expression . GREATER EQUALS expression
    (85) conditional_expression -> expression . AND expression
    (86) conditional_expression -> expression . OR expression

    RPAREN          shift and go to state 198
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULUS         shift and go to state 39
    ISEQUAL         shift and go to state 40
    NOT             shift and go to state 41
    LESS            shift and go to state 42
    GREATER         shift and go to state 43
    AND             shift and go to state 44
    OR              shift and go to state 45


state 191

    (78) return_statement -> RETURN expression SEMICOLON .

    RBRACE          reduce using rule 78 (return_statement -> RETURN expression SEMICOLON .)
    WHILE           reduce using rule 78 (return_statement -> RETURN expression SEMICOLON .)
    DO              reduce using rule 78 (return_statement -> RETURN expression SEMICOLON .)
    FOR             reduce using rule 78 (return_statement -> RETURN expression SEMICOLON .)
    IF              reduce using rule 78 (return_statement -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 78 (return_statement -> RETURN expression SEMICOLON .)
    COUT            reduce using rule 78 (return_statement -> RETURN expression SEMICOLON .)
    CIN             reduce using rule 78 (return_statement -> RETURN expression SEMICOLON .)
    BOOL            reduce using rule 78 (return_statement -> RETURN expression SEMICOLON .)
    INT             reduce using rule 78 (return_statement -> RETURN expression SEMICOLON .)
    FLOAT           reduce using rule 78 (return_statement -> RETURN expression SEMICOLON .)
    CHAR            reduce using rule 78 (return_statement -> RETURN expression SEMICOLON .)
    VOID            reduce using rule 78 (return_statement -> RETURN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 78 (return_statement -> RETURN expression SEMICOLON .)
    STRUCT          reduce using rule 78 (return_statement -> RETURN expression SEMICOLON .)
    ELSE            reduce using rule 78 (return_statement -> RETURN expression SEMICOLON .)


state 192

    (57) cout_statement -> COUT LESS LESS . expression SEMICOLON
    (58) cout_statement -> COUT LESS LESS . expression LESS LESS expression SEMICOLON
    (88) expression -> . BOOLEAN
    (89) expression -> . number
    (90) expression -> . STRING
    (91) expression -> . IDENTIFIER
    (92) expression -> . LETTER
    (93) expression -> . assignment
    (94) expression -> . array_usage
    (95) expression -> . function_call
    (96) expression -> . math_expression
    (97) expression -> . conditional_expression
    (32) number -> . INTEGER
    (33) number -> . FLOATINGPOINT
    (21) assignment -> . IDENTIFIER EQUALS expression
    (22) assignment -> . IDENTIFIER PLUS EQUALS expression
    (23) assignment -> . IDENTIFIER MINUS EQUALS expression
    (34) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (35) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN RPAREN
    (28) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (29) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (103) math_expression -> . expression PLUS expression
    (104) math_expression -> . expression MINUS expression
    (105) math_expression -> . expression TIMES expression
    (106) math_expression -> . expression DIVIDE expression
    (107) math_expression -> . expression MODULUS expression
    (108) math_expression -> . expression PLUS PLUS
    (109) math_expression -> . expression MINUS MINUS
    (110) math_expression -> . PLUS PLUS expression
    (111) math_expression -> . MINUS MINUS expression
    (79) conditional_expression -> . expression ISEQUAL expression
    (80) conditional_expression -> . expression NOT EQUALS expression
    (81) conditional_expression -> . expression LESS expression
    (82) conditional_expression -> . expression LESS EQUALS expression
    (83) conditional_expression -> . expression GREATER expression
    (84) conditional_expression -> . expression GREATER EQUALS expression
    (85) conditional_expression -> . expression AND expression
    (86) conditional_expression -> . expression OR expression
    (87) conditional_expression -> . NOT expression

    BOOLEAN         shift and go to state 13
    STRING          shift and go to state 15
    IDENTIFIER      shift and go to state 62
    LETTER          shift and go to state 16
    INTEGER         shift and go to state 28
    FLOATINGPOINT   shift and go to state 29
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    NOT             shift and go to state 32

    expression                     shift and go to state 199
    number                         shift and go to state 14
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 63
    function_call                  shift and go to state 17
    math_expression                shift and go to state 18
    conditional_expression         shift and go to state 19

state 193

    (56) cin_statement -> CIN GREATER GREATER . IDENTIFIER SEMICOLON

    IDENTIFIER      shift and go to state 200


state 194

    (63) iteration_statement -> WHILE LPAREN expression RPAREN . compound_statement
    (64) iteration_statement -> WHILE LPAREN expression RPAREN . statement
    (42) compound_statement -> . LBRACE statement_list RBRACE
    (45) statement -> . iteration_statement
    (46) statement -> . declaration
    (47) statement -> . selection_statement
    (48) statement -> . return_statement
    (49) statement -> . cout_statement
    (50) statement -> . cin_statement
    (63) iteration_statement -> . WHILE LPAREN expression RPAREN compound_statement
    (64) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (65) iteration_statement -> . DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON
    (66) iteration_statement -> . DO statement WHILE LPAREN expression RPAREN SEMICOLON
    (67) iteration_statement -> . FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN compound_statement
    (68) iteration_statement -> . FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN statement
    (69) iteration_statement -> . FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN compound_statement
    (70) iteration_statement -> . FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN statement
    (13) declaration -> . type IDENTIFIER SEMICOLON
    (14) declaration -> . type IDENTIFIER identifiers SEMICOLON
    (15) declaration -> . type assignment SEMICOLON
    (16) declaration -> . assignment SEMICOLON
    (17) declaration -> . function_call SEMICOLON
    (18) declaration -> . array_usage SEMICOLON
    (19) declaration -> . type array_usage SEMICOLON
    (20) declaration -> . struct
    (71) selection_statement -> . IF LPAREN expression RPAREN compound_statement
    (72) selection_statement -> . IF LPAREN expression RPAREN statement
    (73) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE compound_statement
    (74) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE statement
    (75) selection_statement -> . IF LPAREN expression RPAREN statement ELSE compound_statement
    (76) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (77) return_statement -> . RETURN SEMICOLON
    (78) return_statement -> . RETURN expression SEMICOLON
    (57) cout_statement -> . COUT LESS LESS expression SEMICOLON
    (58) cout_statement -> . COUT LESS LESS expression LESS LESS expression SEMICOLON
    (56) cin_statement -> . CIN GREATER GREATER IDENTIFIER SEMICOLON
    (98) type -> . BOOL
    (99) type -> . INT
    (100) type -> . FLOAT
    (101) type -> . CHAR
    (102) type -> . VOID
    (21) assignment -> . IDENTIFIER EQUALS expression
    (22) assignment -> . IDENTIFIER PLUS EQUALS expression
    (23) assignment -> . IDENTIFIER MINUS EQUALS expression
    (27) function_call -> . IDENTIFIER LPAREN RPAREN
    (28) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (29) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (34) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (35) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE
    (51) struct -> . STRUCT IDENTIFIER LBRACE declaration_list RBRACE
    (52) struct -> . STRUCT IDENTIFIER LBRACE declaration_list RBRACE IDENTIFIER SEMICOLON

    LBRACE          shift and go to state 145
    WHILE           shift and go to state 169
    DO              shift and go to state 170
    FOR             shift and go to state 171
    IF              shift and go to state 172
    RETURN          shift and go to state 173
    COUT            shift and go to state 174
    CIN             shift and go to state 175
    BOOL            shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    CHAR            shift and go to state 23
    VOID            shift and go to state 24
    IDENTIFIER      shift and go to state 118
    STRUCT          shift and go to state 27

    compound_statement             shift and go to state 201
    statement                      shift and go to state 202
    iteration_statement            shift and go to state 163
    declaration                    shift and go to state 164
    selection_statement            shift and go to state 165
    return_statement               shift and go to state 166
    cout_statement                 shift and go to state 167
    cin_statement                  shift and go to state 168
    type                           shift and go to state 122
    assignment                     shift and go to state 123
    function_call                  shift and go to state 124
    array_usage                    shift and go to state 125
    struct                         shift and go to state 126

state 195

    (65) iteration_statement -> DO compound_statement WHILE LPAREN . expression RPAREN SEMICOLON
    (88) expression -> . BOOLEAN
    (89) expression -> . number
    (90) expression -> . STRING
    (91) expression -> . IDENTIFIER
    (92) expression -> . LETTER
    (93) expression -> . assignment
    (94) expression -> . array_usage
    (95) expression -> . function_call
    (96) expression -> . math_expression
    (97) expression -> . conditional_expression
    (32) number -> . INTEGER
    (33) number -> . FLOATINGPOINT
    (21) assignment -> . IDENTIFIER EQUALS expression
    (22) assignment -> . IDENTIFIER PLUS EQUALS expression
    (23) assignment -> . IDENTIFIER MINUS EQUALS expression
    (34) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (35) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN RPAREN
    (28) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (29) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (103) math_expression -> . expression PLUS expression
    (104) math_expression -> . expression MINUS expression
    (105) math_expression -> . expression TIMES expression
    (106) math_expression -> . expression DIVIDE expression
    (107) math_expression -> . expression MODULUS expression
    (108) math_expression -> . expression PLUS PLUS
    (109) math_expression -> . expression MINUS MINUS
    (110) math_expression -> . PLUS PLUS expression
    (111) math_expression -> . MINUS MINUS expression
    (79) conditional_expression -> . expression ISEQUAL expression
    (80) conditional_expression -> . expression NOT EQUALS expression
    (81) conditional_expression -> . expression LESS expression
    (82) conditional_expression -> . expression LESS EQUALS expression
    (83) conditional_expression -> . expression GREATER expression
    (84) conditional_expression -> . expression GREATER EQUALS expression
    (85) conditional_expression -> . expression AND expression
    (86) conditional_expression -> . expression OR expression
    (87) conditional_expression -> . NOT expression

    BOOLEAN         shift and go to state 13
    STRING          shift and go to state 15
    IDENTIFIER      shift and go to state 62
    LETTER          shift and go to state 16
    INTEGER         shift and go to state 28
    FLOATINGPOINT   shift and go to state 29
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    NOT             shift and go to state 32

    expression                     shift and go to state 203
    number                         shift and go to state 14
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 63
    function_call                  shift and go to state 17
    math_expression                shift and go to state 18
    conditional_expression         shift and go to state 19

state 196

    (66) iteration_statement -> DO statement WHILE LPAREN . expression RPAREN SEMICOLON
    (88) expression -> . BOOLEAN
    (89) expression -> . number
    (90) expression -> . STRING
    (91) expression -> . IDENTIFIER
    (92) expression -> . LETTER
    (93) expression -> . assignment
    (94) expression -> . array_usage
    (95) expression -> . function_call
    (96) expression -> . math_expression
    (97) expression -> . conditional_expression
    (32) number -> . INTEGER
    (33) number -> . FLOATINGPOINT
    (21) assignment -> . IDENTIFIER EQUALS expression
    (22) assignment -> . IDENTIFIER PLUS EQUALS expression
    (23) assignment -> . IDENTIFIER MINUS EQUALS expression
    (34) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (35) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN RPAREN
    (28) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (29) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (103) math_expression -> . expression PLUS expression
    (104) math_expression -> . expression MINUS expression
    (105) math_expression -> . expression TIMES expression
    (106) math_expression -> . expression DIVIDE expression
    (107) math_expression -> . expression MODULUS expression
    (108) math_expression -> . expression PLUS PLUS
    (109) math_expression -> . expression MINUS MINUS
    (110) math_expression -> . PLUS PLUS expression
    (111) math_expression -> . MINUS MINUS expression
    (79) conditional_expression -> . expression ISEQUAL expression
    (80) conditional_expression -> . expression NOT EQUALS expression
    (81) conditional_expression -> . expression LESS expression
    (82) conditional_expression -> . expression LESS EQUALS expression
    (83) conditional_expression -> . expression GREATER expression
    (84) conditional_expression -> . expression GREATER EQUALS expression
    (85) conditional_expression -> . expression AND expression
    (86) conditional_expression -> . expression OR expression
    (87) conditional_expression -> . NOT expression

    BOOLEAN         shift and go to state 13
    STRING          shift and go to state 15
    IDENTIFIER      shift and go to state 62
    LETTER          shift and go to state 16
    INTEGER         shift and go to state 28
    FLOATINGPOINT   shift and go to state 29
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    NOT             shift and go to state 32

    expression                     shift and go to state 204
    number                         shift and go to state 14
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 63
    function_call                  shift and go to state 17
    math_expression                shift and go to state 18
    conditional_expression         shift and go to state 19

state 197

    (67) iteration_statement -> FOR LPAREN type IDENTIFIER . EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN compound_statement
    (68) iteration_statement -> FOR LPAREN type IDENTIFIER . EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN statement
    (69) iteration_statement -> FOR LPAREN type IDENTIFIER . EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN compound_statement
    (70) iteration_statement -> FOR LPAREN type IDENTIFIER . EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN statement

    EQUALS          shift and go to state 205


state 198

    (71) selection_statement -> IF LPAREN expression RPAREN . compound_statement
    (72) selection_statement -> IF LPAREN expression RPAREN . statement
    (73) selection_statement -> IF LPAREN expression RPAREN . compound_statement ELSE compound_statement
    (74) selection_statement -> IF LPAREN expression RPAREN . compound_statement ELSE statement
    (75) selection_statement -> IF LPAREN expression RPAREN . statement ELSE compound_statement
    (76) selection_statement -> IF LPAREN expression RPAREN . statement ELSE statement
    (42) compound_statement -> . LBRACE statement_list RBRACE
    (45) statement -> . iteration_statement
    (46) statement -> . declaration
    (47) statement -> . selection_statement
    (48) statement -> . return_statement
    (49) statement -> . cout_statement
    (50) statement -> . cin_statement
    (63) iteration_statement -> . WHILE LPAREN expression RPAREN compound_statement
    (64) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (65) iteration_statement -> . DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON
    (66) iteration_statement -> . DO statement WHILE LPAREN expression RPAREN SEMICOLON
    (67) iteration_statement -> . FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN compound_statement
    (68) iteration_statement -> . FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN statement
    (69) iteration_statement -> . FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN compound_statement
    (70) iteration_statement -> . FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN statement
    (13) declaration -> . type IDENTIFIER SEMICOLON
    (14) declaration -> . type IDENTIFIER identifiers SEMICOLON
    (15) declaration -> . type assignment SEMICOLON
    (16) declaration -> . assignment SEMICOLON
    (17) declaration -> . function_call SEMICOLON
    (18) declaration -> . array_usage SEMICOLON
    (19) declaration -> . type array_usage SEMICOLON
    (20) declaration -> . struct
    (71) selection_statement -> . IF LPAREN expression RPAREN compound_statement
    (72) selection_statement -> . IF LPAREN expression RPAREN statement
    (73) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE compound_statement
    (74) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE statement
    (75) selection_statement -> . IF LPAREN expression RPAREN statement ELSE compound_statement
    (76) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (77) return_statement -> . RETURN SEMICOLON
    (78) return_statement -> . RETURN expression SEMICOLON
    (57) cout_statement -> . COUT LESS LESS expression SEMICOLON
    (58) cout_statement -> . COUT LESS LESS expression LESS LESS expression SEMICOLON
    (56) cin_statement -> . CIN GREATER GREATER IDENTIFIER SEMICOLON
    (98) type -> . BOOL
    (99) type -> . INT
    (100) type -> . FLOAT
    (101) type -> . CHAR
    (102) type -> . VOID
    (21) assignment -> . IDENTIFIER EQUALS expression
    (22) assignment -> . IDENTIFIER PLUS EQUALS expression
    (23) assignment -> . IDENTIFIER MINUS EQUALS expression
    (27) function_call -> . IDENTIFIER LPAREN RPAREN
    (28) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (29) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (34) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (35) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE
    (51) struct -> . STRUCT IDENTIFIER LBRACE declaration_list RBRACE
    (52) struct -> . STRUCT IDENTIFIER LBRACE declaration_list RBRACE IDENTIFIER SEMICOLON

    LBRACE          shift and go to state 145
    WHILE           shift and go to state 169
    DO              shift and go to state 170
    FOR             shift and go to state 171
    IF              shift and go to state 172
    RETURN          shift and go to state 173
    COUT            shift and go to state 174
    CIN             shift and go to state 175
    BOOL            shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    CHAR            shift and go to state 23
    VOID            shift and go to state 24
    IDENTIFIER      shift and go to state 118
    STRUCT          shift and go to state 27

    compound_statement             shift and go to state 206
    statement                      shift and go to state 207
    iteration_statement            shift and go to state 163
    declaration                    shift and go to state 164
    selection_statement            shift and go to state 165
    return_statement               shift and go to state 166
    cout_statement                 shift and go to state 167
    cin_statement                  shift and go to state 168
    type                           shift and go to state 122
    assignment                     shift and go to state 123
    function_call                  shift and go to state 124
    array_usage                    shift and go to state 125
    struct                         shift and go to state 126

state 199

    (57) cout_statement -> COUT LESS LESS expression . SEMICOLON
    (58) cout_statement -> COUT LESS LESS expression . LESS LESS expression SEMICOLON
    (103) math_expression -> expression . PLUS expression
    (104) math_expression -> expression . MINUS expression
    (105) math_expression -> expression . TIMES expression
    (106) math_expression -> expression . DIVIDE expression
    (107) math_expression -> expression . MODULUS expression
    (108) math_expression -> expression . PLUS PLUS
    (109) math_expression -> expression . MINUS MINUS
    (79) conditional_expression -> expression . ISEQUAL expression
    (80) conditional_expression -> expression . NOT EQUALS expression
    (81) conditional_expression -> expression . LESS expression
    (82) conditional_expression -> expression . LESS EQUALS expression
    (83) conditional_expression -> expression . GREATER expression
    (84) conditional_expression -> expression . GREATER EQUALS expression
    (85) conditional_expression -> expression . AND expression
    (86) conditional_expression -> expression . OR expression

    SEMICOLON       shift and go to state 209
    LESS            shift and go to state 208
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULUS         shift and go to state 39
    ISEQUAL         shift and go to state 40
    NOT             shift and go to state 41
    GREATER         shift and go to state 43
    AND             shift and go to state 44
    OR              shift and go to state 45


state 200

    (56) cin_statement -> CIN GREATER GREATER IDENTIFIER . SEMICOLON

    SEMICOLON       shift and go to state 210


state 201

    (63) iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .

    RBRACE          reduce using rule 63 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    WHILE           reduce using rule 63 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    DO              reduce using rule 63 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    FOR             reduce using rule 63 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    IF              reduce using rule 63 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    RETURN          reduce using rule 63 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    COUT            reduce using rule 63 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    CIN             reduce using rule 63 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    BOOL            reduce using rule 63 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    INT             reduce using rule 63 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    FLOAT           reduce using rule 63 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    CHAR            reduce using rule 63 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    VOID            reduce using rule 63 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    IDENTIFIER      reduce using rule 63 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    STRUCT          reduce using rule 63 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    ELSE            reduce using rule 63 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)


state 202

    (64) iteration_statement -> WHILE LPAREN expression RPAREN statement .

    RBRACE          reduce using rule 64 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 64 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    DO              reduce using rule 64 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    FOR             reduce using rule 64 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    IF              reduce using rule 64 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 64 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    COUT            reduce using rule 64 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    CIN             reduce using rule 64 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    BOOL            reduce using rule 64 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    INT             reduce using rule 64 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    FLOAT           reduce using rule 64 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    CHAR            reduce using rule 64 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    VOID            reduce using rule 64 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    IDENTIFIER      reduce using rule 64 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    STRUCT          reduce using rule 64 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    ELSE            reduce using rule 64 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)


state 203

    (65) iteration_statement -> DO compound_statement WHILE LPAREN expression . RPAREN SEMICOLON
    (103) math_expression -> expression . PLUS expression
    (104) math_expression -> expression . MINUS expression
    (105) math_expression -> expression . TIMES expression
    (106) math_expression -> expression . DIVIDE expression
    (107) math_expression -> expression . MODULUS expression
    (108) math_expression -> expression . PLUS PLUS
    (109) math_expression -> expression . MINUS MINUS
    (79) conditional_expression -> expression . ISEQUAL expression
    (80) conditional_expression -> expression . NOT EQUALS expression
    (81) conditional_expression -> expression . LESS expression
    (82) conditional_expression -> expression . LESS EQUALS expression
    (83) conditional_expression -> expression . GREATER expression
    (84) conditional_expression -> expression . GREATER EQUALS expression
    (85) conditional_expression -> expression . AND expression
    (86) conditional_expression -> expression . OR expression

    RPAREN          shift and go to state 211
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULUS         shift and go to state 39
    ISEQUAL         shift and go to state 40
    NOT             shift and go to state 41
    LESS            shift and go to state 42
    GREATER         shift and go to state 43
    AND             shift and go to state 44
    OR              shift and go to state 45


state 204

    (66) iteration_statement -> DO statement WHILE LPAREN expression . RPAREN SEMICOLON
    (103) math_expression -> expression . PLUS expression
    (104) math_expression -> expression . MINUS expression
    (105) math_expression -> expression . TIMES expression
    (106) math_expression -> expression . DIVIDE expression
    (107) math_expression -> expression . MODULUS expression
    (108) math_expression -> expression . PLUS PLUS
    (109) math_expression -> expression . MINUS MINUS
    (79) conditional_expression -> expression . ISEQUAL expression
    (80) conditional_expression -> expression . NOT EQUALS expression
    (81) conditional_expression -> expression . LESS expression
    (82) conditional_expression -> expression . LESS EQUALS expression
    (83) conditional_expression -> expression . GREATER expression
    (84) conditional_expression -> expression . GREATER EQUALS expression
    (85) conditional_expression -> expression . AND expression
    (86) conditional_expression -> expression . OR expression

    RPAREN          shift and go to state 212
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULUS         shift and go to state 39
    ISEQUAL         shift and go to state 40
    NOT             shift and go to state 41
    LESS            shift and go to state 42
    GREATER         shift and go to state 43
    AND             shift and go to state 44
    OR              shift and go to state 45


state 205

    (67) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS . number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN compound_statement
    (68) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS . number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN statement
    (69) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS . number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN compound_statement
    (70) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS . number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN statement
    (32) number -> . INTEGER
    (33) number -> . FLOATINGPOINT

    INTEGER         shift and go to state 28
    FLOATINGPOINT   shift and go to state 29

    number                         shift and go to state 213

state 206

    (71) selection_statement -> IF LPAREN expression RPAREN compound_statement .
    (73) selection_statement -> IF LPAREN expression RPAREN compound_statement . ELSE compound_statement
    (74) selection_statement -> IF LPAREN expression RPAREN compound_statement . ELSE statement

  ! shift/reduce conflict for ELSE resolved as shift
    RBRACE          reduce using rule 71 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    WHILE           reduce using rule 71 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    DO              reduce using rule 71 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    FOR             reduce using rule 71 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    IF              reduce using rule 71 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    RETURN          reduce using rule 71 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    COUT            reduce using rule 71 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    CIN             reduce using rule 71 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    BOOL            reduce using rule 71 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    INT             reduce using rule 71 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    FLOAT           reduce using rule 71 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    CHAR            reduce using rule 71 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    VOID            reduce using rule 71 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    IDENTIFIER      reduce using rule 71 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    STRUCT          reduce using rule 71 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    ELSE            shift and go to state 214

  ! ELSE            [ reduce using rule 71 (selection_statement -> IF LPAREN expression RPAREN compound_statement .) ]


state 207

    (72) selection_statement -> IF LPAREN expression RPAREN statement .
    (75) selection_statement -> IF LPAREN expression RPAREN statement . ELSE compound_statement
    (76) selection_statement -> IF LPAREN expression RPAREN statement . ELSE statement

  ! shift/reduce conflict for ELSE resolved as shift
    RBRACE          reduce using rule 72 (selection_statement -> IF LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 72 (selection_statement -> IF LPAREN expression RPAREN statement .)
    DO              reduce using rule 72 (selection_statement -> IF LPAREN expression RPAREN statement .)
    FOR             reduce using rule 72 (selection_statement -> IF LPAREN expression RPAREN statement .)
    IF              reduce using rule 72 (selection_statement -> IF LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 72 (selection_statement -> IF LPAREN expression RPAREN statement .)
    COUT            reduce using rule 72 (selection_statement -> IF LPAREN expression RPAREN statement .)
    CIN             reduce using rule 72 (selection_statement -> IF LPAREN expression RPAREN statement .)
    BOOL            reduce using rule 72 (selection_statement -> IF LPAREN expression RPAREN statement .)
    INT             reduce using rule 72 (selection_statement -> IF LPAREN expression RPAREN statement .)
    FLOAT           reduce using rule 72 (selection_statement -> IF LPAREN expression RPAREN statement .)
    CHAR            reduce using rule 72 (selection_statement -> IF LPAREN expression RPAREN statement .)
    VOID            reduce using rule 72 (selection_statement -> IF LPAREN expression RPAREN statement .)
    IDENTIFIER      reduce using rule 72 (selection_statement -> IF LPAREN expression RPAREN statement .)
    STRUCT          reduce using rule 72 (selection_statement -> IF LPAREN expression RPAREN statement .)
    ELSE            shift and go to state 215

  ! ELSE            [ reduce using rule 72 (selection_statement -> IF LPAREN expression RPAREN statement .) ]


state 208

    (58) cout_statement -> COUT LESS LESS expression LESS . LESS expression SEMICOLON
    (81) conditional_expression -> expression LESS . expression
    (82) conditional_expression -> expression LESS . EQUALS expression
    (88) expression -> . BOOLEAN
    (89) expression -> . number
    (90) expression -> . STRING
    (91) expression -> . IDENTIFIER
    (92) expression -> . LETTER
    (93) expression -> . assignment
    (94) expression -> . array_usage
    (95) expression -> . function_call
    (96) expression -> . math_expression
    (97) expression -> . conditional_expression
    (32) number -> . INTEGER
    (33) number -> . FLOATINGPOINT
    (21) assignment -> . IDENTIFIER EQUALS expression
    (22) assignment -> . IDENTIFIER PLUS EQUALS expression
    (23) assignment -> . IDENTIFIER MINUS EQUALS expression
    (34) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (35) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN RPAREN
    (28) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (29) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (103) math_expression -> . expression PLUS expression
    (104) math_expression -> . expression MINUS expression
    (105) math_expression -> . expression TIMES expression
    (106) math_expression -> . expression DIVIDE expression
    (107) math_expression -> . expression MODULUS expression
    (108) math_expression -> . expression PLUS PLUS
    (109) math_expression -> . expression MINUS MINUS
    (110) math_expression -> . PLUS PLUS expression
    (111) math_expression -> . MINUS MINUS expression
    (79) conditional_expression -> . expression ISEQUAL expression
    (80) conditional_expression -> . expression NOT EQUALS expression
    (81) conditional_expression -> . expression LESS expression
    (82) conditional_expression -> . expression LESS EQUALS expression
    (83) conditional_expression -> . expression GREATER expression
    (84) conditional_expression -> . expression GREATER EQUALS expression
    (85) conditional_expression -> . expression AND expression
    (86) conditional_expression -> . expression OR expression
    (87) conditional_expression -> . NOT expression

    LESS            shift and go to state 216
    EQUALS          shift and go to state 74
    BOOLEAN         shift and go to state 13
    STRING          shift and go to state 15
    IDENTIFIER      shift and go to state 62
    LETTER          shift and go to state 16
    INTEGER         shift and go to state 28
    FLOATINGPOINT   shift and go to state 29
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    NOT             shift and go to state 32

    expression                     shift and go to state 73
    number                         shift and go to state 14
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 63
    function_call                  shift and go to state 17
    math_expression                shift and go to state 18
    conditional_expression         shift and go to state 19

state 209

    (57) cout_statement -> COUT LESS LESS expression SEMICOLON .

    RBRACE          reduce using rule 57 (cout_statement -> COUT LESS LESS expression SEMICOLON .)
    WHILE           reduce using rule 57 (cout_statement -> COUT LESS LESS expression SEMICOLON .)
    DO              reduce using rule 57 (cout_statement -> COUT LESS LESS expression SEMICOLON .)
    FOR             reduce using rule 57 (cout_statement -> COUT LESS LESS expression SEMICOLON .)
    IF              reduce using rule 57 (cout_statement -> COUT LESS LESS expression SEMICOLON .)
    RETURN          reduce using rule 57 (cout_statement -> COUT LESS LESS expression SEMICOLON .)
    COUT            reduce using rule 57 (cout_statement -> COUT LESS LESS expression SEMICOLON .)
    CIN             reduce using rule 57 (cout_statement -> COUT LESS LESS expression SEMICOLON .)
    BOOL            reduce using rule 57 (cout_statement -> COUT LESS LESS expression SEMICOLON .)
    INT             reduce using rule 57 (cout_statement -> COUT LESS LESS expression SEMICOLON .)
    FLOAT           reduce using rule 57 (cout_statement -> COUT LESS LESS expression SEMICOLON .)
    CHAR            reduce using rule 57 (cout_statement -> COUT LESS LESS expression SEMICOLON .)
    VOID            reduce using rule 57 (cout_statement -> COUT LESS LESS expression SEMICOLON .)
    IDENTIFIER      reduce using rule 57 (cout_statement -> COUT LESS LESS expression SEMICOLON .)
    STRUCT          reduce using rule 57 (cout_statement -> COUT LESS LESS expression SEMICOLON .)
    ELSE            reduce using rule 57 (cout_statement -> COUT LESS LESS expression SEMICOLON .)


state 210

    (56) cin_statement -> CIN GREATER GREATER IDENTIFIER SEMICOLON .

    RBRACE          reduce using rule 56 (cin_statement -> CIN GREATER GREATER IDENTIFIER SEMICOLON .)
    WHILE           reduce using rule 56 (cin_statement -> CIN GREATER GREATER IDENTIFIER SEMICOLON .)
    DO              reduce using rule 56 (cin_statement -> CIN GREATER GREATER IDENTIFIER SEMICOLON .)
    FOR             reduce using rule 56 (cin_statement -> CIN GREATER GREATER IDENTIFIER SEMICOLON .)
    IF              reduce using rule 56 (cin_statement -> CIN GREATER GREATER IDENTIFIER SEMICOLON .)
    RETURN          reduce using rule 56 (cin_statement -> CIN GREATER GREATER IDENTIFIER SEMICOLON .)
    COUT            reduce using rule 56 (cin_statement -> CIN GREATER GREATER IDENTIFIER SEMICOLON .)
    CIN             reduce using rule 56 (cin_statement -> CIN GREATER GREATER IDENTIFIER SEMICOLON .)
    BOOL            reduce using rule 56 (cin_statement -> CIN GREATER GREATER IDENTIFIER SEMICOLON .)
    INT             reduce using rule 56 (cin_statement -> CIN GREATER GREATER IDENTIFIER SEMICOLON .)
    FLOAT           reduce using rule 56 (cin_statement -> CIN GREATER GREATER IDENTIFIER SEMICOLON .)
    CHAR            reduce using rule 56 (cin_statement -> CIN GREATER GREATER IDENTIFIER SEMICOLON .)
    VOID            reduce using rule 56 (cin_statement -> CIN GREATER GREATER IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 56 (cin_statement -> CIN GREATER GREATER IDENTIFIER SEMICOLON .)
    STRUCT          reduce using rule 56 (cin_statement -> CIN GREATER GREATER IDENTIFIER SEMICOLON .)
    ELSE            reduce using rule 56 (cin_statement -> CIN GREATER GREATER IDENTIFIER SEMICOLON .)


state 211

    (65) iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 217


state 212

    (66) iteration_statement -> DO statement WHILE LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 218


state 213

    (67) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number . SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN compound_statement
    (68) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number . SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN statement
    (69) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number . SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN compound_statement
    (70) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number . SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN statement

    SEMICOLON       shift and go to state 219


state 214

    (73) selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE . compound_statement
    (74) selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE . statement
    (42) compound_statement -> . LBRACE statement_list RBRACE
    (45) statement -> . iteration_statement
    (46) statement -> . declaration
    (47) statement -> . selection_statement
    (48) statement -> . return_statement
    (49) statement -> . cout_statement
    (50) statement -> . cin_statement
    (63) iteration_statement -> . WHILE LPAREN expression RPAREN compound_statement
    (64) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (65) iteration_statement -> . DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON
    (66) iteration_statement -> . DO statement WHILE LPAREN expression RPAREN SEMICOLON
    (67) iteration_statement -> . FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN compound_statement
    (68) iteration_statement -> . FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN statement
    (69) iteration_statement -> . FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN compound_statement
    (70) iteration_statement -> . FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN statement
    (13) declaration -> . type IDENTIFIER SEMICOLON
    (14) declaration -> . type IDENTIFIER identifiers SEMICOLON
    (15) declaration -> . type assignment SEMICOLON
    (16) declaration -> . assignment SEMICOLON
    (17) declaration -> . function_call SEMICOLON
    (18) declaration -> . array_usage SEMICOLON
    (19) declaration -> . type array_usage SEMICOLON
    (20) declaration -> . struct
    (71) selection_statement -> . IF LPAREN expression RPAREN compound_statement
    (72) selection_statement -> . IF LPAREN expression RPAREN statement
    (73) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE compound_statement
    (74) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE statement
    (75) selection_statement -> . IF LPAREN expression RPAREN statement ELSE compound_statement
    (76) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (77) return_statement -> . RETURN SEMICOLON
    (78) return_statement -> . RETURN expression SEMICOLON
    (57) cout_statement -> . COUT LESS LESS expression SEMICOLON
    (58) cout_statement -> . COUT LESS LESS expression LESS LESS expression SEMICOLON
    (56) cin_statement -> . CIN GREATER GREATER IDENTIFIER SEMICOLON
    (98) type -> . BOOL
    (99) type -> . INT
    (100) type -> . FLOAT
    (101) type -> . CHAR
    (102) type -> . VOID
    (21) assignment -> . IDENTIFIER EQUALS expression
    (22) assignment -> . IDENTIFIER PLUS EQUALS expression
    (23) assignment -> . IDENTIFIER MINUS EQUALS expression
    (27) function_call -> . IDENTIFIER LPAREN RPAREN
    (28) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (29) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (34) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (35) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE
    (51) struct -> . STRUCT IDENTIFIER LBRACE declaration_list RBRACE
    (52) struct -> . STRUCT IDENTIFIER LBRACE declaration_list RBRACE IDENTIFIER SEMICOLON

    LBRACE          shift and go to state 145
    WHILE           shift and go to state 169
    DO              shift and go to state 170
    FOR             shift and go to state 171
    IF              shift and go to state 172
    RETURN          shift and go to state 173
    COUT            shift and go to state 174
    CIN             shift and go to state 175
    BOOL            shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    CHAR            shift and go to state 23
    VOID            shift and go to state 24
    IDENTIFIER      shift and go to state 118
    STRUCT          shift and go to state 27

    compound_statement             shift and go to state 220
    statement                      shift and go to state 221
    iteration_statement            shift and go to state 163
    declaration                    shift and go to state 164
    selection_statement            shift and go to state 165
    return_statement               shift and go to state 166
    cout_statement                 shift and go to state 167
    cin_statement                  shift and go to state 168
    type                           shift and go to state 122
    assignment                     shift and go to state 123
    function_call                  shift and go to state 124
    array_usage                    shift and go to state 125
    struct                         shift and go to state 126

state 215

    (75) selection_statement -> IF LPAREN expression RPAREN statement ELSE . compound_statement
    (76) selection_statement -> IF LPAREN expression RPAREN statement ELSE . statement
    (42) compound_statement -> . LBRACE statement_list RBRACE
    (45) statement -> . iteration_statement
    (46) statement -> . declaration
    (47) statement -> . selection_statement
    (48) statement -> . return_statement
    (49) statement -> . cout_statement
    (50) statement -> . cin_statement
    (63) iteration_statement -> . WHILE LPAREN expression RPAREN compound_statement
    (64) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (65) iteration_statement -> . DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON
    (66) iteration_statement -> . DO statement WHILE LPAREN expression RPAREN SEMICOLON
    (67) iteration_statement -> . FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN compound_statement
    (68) iteration_statement -> . FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN statement
    (69) iteration_statement -> . FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN compound_statement
    (70) iteration_statement -> . FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN statement
    (13) declaration -> . type IDENTIFIER SEMICOLON
    (14) declaration -> . type IDENTIFIER identifiers SEMICOLON
    (15) declaration -> . type assignment SEMICOLON
    (16) declaration -> . assignment SEMICOLON
    (17) declaration -> . function_call SEMICOLON
    (18) declaration -> . array_usage SEMICOLON
    (19) declaration -> . type array_usage SEMICOLON
    (20) declaration -> . struct
    (71) selection_statement -> . IF LPAREN expression RPAREN compound_statement
    (72) selection_statement -> . IF LPAREN expression RPAREN statement
    (73) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE compound_statement
    (74) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE statement
    (75) selection_statement -> . IF LPAREN expression RPAREN statement ELSE compound_statement
    (76) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (77) return_statement -> . RETURN SEMICOLON
    (78) return_statement -> . RETURN expression SEMICOLON
    (57) cout_statement -> . COUT LESS LESS expression SEMICOLON
    (58) cout_statement -> . COUT LESS LESS expression LESS LESS expression SEMICOLON
    (56) cin_statement -> . CIN GREATER GREATER IDENTIFIER SEMICOLON
    (98) type -> . BOOL
    (99) type -> . INT
    (100) type -> . FLOAT
    (101) type -> . CHAR
    (102) type -> . VOID
    (21) assignment -> . IDENTIFIER EQUALS expression
    (22) assignment -> . IDENTIFIER PLUS EQUALS expression
    (23) assignment -> . IDENTIFIER MINUS EQUALS expression
    (27) function_call -> . IDENTIFIER LPAREN RPAREN
    (28) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (29) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (34) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (35) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE
    (51) struct -> . STRUCT IDENTIFIER LBRACE declaration_list RBRACE
    (52) struct -> . STRUCT IDENTIFIER LBRACE declaration_list RBRACE IDENTIFIER SEMICOLON

    LBRACE          shift and go to state 145
    WHILE           shift and go to state 169
    DO              shift and go to state 170
    FOR             shift and go to state 171
    IF              shift and go to state 172
    RETURN          shift and go to state 173
    COUT            shift and go to state 174
    CIN             shift and go to state 175
    BOOL            shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    CHAR            shift and go to state 23
    VOID            shift and go to state 24
    IDENTIFIER      shift and go to state 118
    STRUCT          shift and go to state 27

    statement                      shift and go to state 222
    compound_statement             shift and go to state 223
    iteration_statement            shift and go to state 163
    declaration                    shift and go to state 164
    selection_statement            shift and go to state 165
    return_statement               shift and go to state 166
    cout_statement                 shift and go to state 167
    cin_statement                  shift and go to state 168
    type                           shift and go to state 122
    assignment                     shift and go to state 123
    function_call                  shift and go to state 124
    array_usage                    shift and go to state 125
    struct                         shift and go to state 126

state 216

    (58) cout_statement -> COUT LESS LESS expression LESS LESS . expression SEMICOLON
    (88) expression -> . BOOLEAN
    (89) expression -> . number
    (90) expression -> . STRING
    (91) expression -> . IDENTIFIER
    (92) expression -> . LETTER
    (93) expression -> . assignment
    (94) expression -> . array_usage
    (95) expression -> . function_call
    (96) expression -> . math_expression
    (97) expression -> . conditional_expression
    (32) number -> . INTEGER
    (33) number -> . FLOATINGPOINT
    (21) assignment -> . IDENTIFIER EQUALS expression
    (22) assignment -> . IDENTIFIER PLUS EQUALS expression
    (23) assignment -> . IDENTIFIER MINUS EQUALS expression
    (34) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (35) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN RPAREN
    (28) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (29) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (103) math_expression -> . expression PLUS expression
    (104) math_expression -> . expression MINUS expression
    (105) math_expression -> . expression TIMES expression
    (106) math_expression -> . expression DIVIDE expression
    (107) math_expression -> . expression MODULUS expression
    (108) math_expression -> . expression PLUS PLUS
    (109) math_expression -> . expression MINUS MINUS
    (110) math_expression -> . PLUS PLUS expression
    (111) math_expression -> . MINUS MINUS expression
    (79) conditional_expression -> . expression ISEQUAL expression
    (80) conditional_expression -> . expression NOT EQUALS expression
    (81) conditional_expression -> . expression LESS expression
    (82) conditional_expression -> . expression LESS EQUALS expression
    (83) conditional_expression -> . expression GREATER expression
    (84) conditional_expression -> . expression GREATER EQUALS expression
    (85) conditional_expression -> . expression AND expression
    (86) conditional_expression -> . expression OR expression
    (87) conditional_expression -> . NOT expression

    BOOLEAN         shift and go to state 13
    STRING          shift and go to state 15
    IDENTIFIER      shift and go to state 62
    LETTER          shift and go to state 16
    INTEGER         shift and go to state 28
    FLOATINGPOINT   shift and go to state 29
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    NOT             shift and go to state 32

    expression                     shift and go to state 224
    number                         shift and go to state 14
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 63
    function_call                  shift and go to state 17
    math_expression                shift and go to state 18
    conditional_expression         shift and go to state 19

state 217

    (65) iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .

    RBRACE          reduce using rule 65 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 65 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    DO              reduce using rule 65 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    FOR             reduce using rule 65 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 65 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 65 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    COUT            reduce using rule 65 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    CIN             reduce using rule 65 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    BOOL            reduce using rule 65 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    INT             reduce using rule 65 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    FLOAT           reduce using rule 65 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    CHAR            reduce using rule 65 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    VOID            reduce using rule 65 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 65 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    STRUCT          reduce using rule 65 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    ELSE            reduce using rule 65 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)


state 218

    (66) iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .

    RBRACE          reduce using rule 66 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 66 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    DO              reduce using rule 66 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    FOR             reduce using rule 66 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 66 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 66 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    COUT            reduce using rule 66 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    CIN             reduce using rule 66 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    BOOL            reduce using rule 66 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    INT             reduce using rule 66 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    FLOAT           reduce using rule 66 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    CHAR            reduce using rule 66 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    VOID            reduce using rule 66 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 66 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    STRUCT          reduce using rule 66 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    ELSE            reduce using rule 66 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)


state 219

    (67) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON . IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN compound_statement
    (68) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON . IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN statement
    (69) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON . IDENTIFIER comparators expression SEMICOLON math_expression RPAREN compound_statement
    (70) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON . IDENTIFIER comparators expression SEMICOLON math_expression RPAREN statement

    IDENTIFIER      shift and go to state 225


state 220

    (73) selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .

    RBRACE          reduce using rule 73 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    WHILE           reduce using rule 73 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    DO              reduce using rule 73 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    FOR             reduce using rule 73 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    IF              reduce using rule 73 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    RETURN          reduce using rule 73 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    COUT            reduce using rule 73 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    CIN             reduce using rule 73 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    BOOL            reduce using rule 73 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    INT             reduce using rule 73 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    FLOAT           reduce using rule 73 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    CHAR            reduce using rule 73 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    VOID            reduce using rule 73 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    IDENTIFIER      reduce using rule 73 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    STRUCT          reduce using rule 73 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    ELSE            reduce using rule 73 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)


state 221

    (74) selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .

    RBRACE          reduce using rule 74 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    WHILE           reduce using rule 74 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    DO              reduce using rule 74 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    FOR             reduce using rule 74 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    IF              reduce using rule 74 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    RETURN          reduce using rule 74 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    COUT            reduce using rule 74 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    CIN             reduce using rule 74 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    BOOL            reduce using rule 74 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    INT             reduce using rule 74 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    FLOAT           reduce using rule 74 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    CHAR            reduce using rule 74 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    VOID            reduce using rule 74 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    IDENTIFIER      reduce using rule 74 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    STRUCT          reduce using rule 74 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    ELSE            reduce using rule 74 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)


state 222

    (76) selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .

    RBRACE          reduce using rule 76 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    WHILE           reduce using rule 76 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    DO              reduce using rule 76 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    FOR             reduce using rule 76 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    IF              reduce using rule 76 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    RETURN          reduce using rule 76 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    COUT            reduce using rule 76 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    CIN             reduce using rule 76 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    BOOL            reduce using rule 76 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    INT             reduce using rule 76 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    FLOAT           reduce using rule 76 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    CHAR            reduce using rule 76 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    VOID            reduce using rule 76 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    IDENTIFIER      reduce using rule 76 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    STRUCT          reduce using rule 76 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    ELSE            reduce using rule 76 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)


state 223

    (75) selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .

    RBRACE          reduce using rule 75 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    WHILE           reduce using rule 75 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    DO              reduce using rule 75 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    FOR             reduce using rule 75 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    IF              reduce using rule 75 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    RETURN          reduce using rule 75 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    COUT            reduce using rule 75 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    CIN             reduce using rule 75 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    BOOL            reduce using rule 75 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    INT             reduce using rule 75 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    FLOAT           reduce using rule 75 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    CHAR            reduce using rule 75 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    VOID            reduce using rule 75 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    IDENTIFIER      reduce using rule 75 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    STRUCT          reduce using rule 75 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    ELSE            reduce using rule 75 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)


state 224

    (58) cout_statement -> COUT LESS LESS expression LESS LESS expression . SEMICOLON
    (103) math_expression -> expression . PLUS expression
    (104) math_expression -> expression . MINUS expression
    (105) math_expression -> expression . TIMES expression
    (106) math_expression -> expression . DIVIDE expression
    (107) math_expression -> expression . MODULUS expression
    (108) math_expression -> expression . PLUS PLUS
    (109) math_expression -> expression . MINUS MINUS
    (79) conditional_expression -> expression . ISEQUAL expression
    (80) conditional_expression -> expression . NOT EQUALS expression
    (81) conditional_expression -> expression . LESS expression
    (82) conditional_expression -> expression . LESS EQUALS expression
    (83) conditional_expression -> expression . GREATER expression
    (84) conditional_expression -> expression . GREATER EQUALS expression
    (85) conditional_expression -> expression . AND expression
    (86) conditional_expression -> expression . OR expression

    SEMICOLON       shift and go to state 226
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULUS         shift and go to state 39
    ISEQUAL         shift and go to state 40
    NOT             shift and go to state 41
    LESS            shift and go to state 42
    GREATER         shift and go to state 43
    AND             shift and go to state 44
    OR              shift and go to state 45


state 225

    (67) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER . comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN compound_statement
    (68) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER . comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN statement
    (69) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER . comparators expression SEMICOLON math_expression RPAREN compound_statement
    (70) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER . comparators expression SEMICOLON math_expression RPAREN statement
    (59) comparators -> . LESS
    (60) comparators -> . GREATER
    (61) comparators -> . GREATER EQUALS
    (62) comparators -> . LESS EQUALS

    LESS            shift and go to state 228
    GREATER         shift and go to state 229

    comparators                    shift and go to state 227

state 226

    (58) cout_statement -> COUT LESS LESS expression LESS LESS expression SEMICOLON .

    RBRACE          reduce using rule 58 (cout_statement -> COUT LESS LESS expression LESS LESS expression SEMICOLON .)
    WHILE           reduce using rule 58 (cout_statement -> COUT LESS LESS expression LESS LESS expression SEMICOLON .)
    DO              reduce using rule 58 (cout_statement -> COUT LESS LESS expression LESS LESS expression SEMICOLON .)
    FOR             reduce using rule 58 (cout_statement -> COUT LESS LESS expression LESS LESS expression SEMICOLON .)
    IF              reduce using rule 58 (cout_statement -> COUT LESS LESS expression LESS LESS expression SEMICOLON .)
    RETURN          reduce using rule 58 (cout_statement -> COUT LESS LESS expression LESS LESS expression SEMICOLON .)
    COUT            reduce using rule 58 (cout_statement -> COUT LESS LESS expression LESS LESS expression SEMICOLON .)
    CIN             reduce using rule 58 (cout_statement -> COUT LESS LESS expression LESS LESS expression SEMICOLON .)
    BOOL            reduce using rule 58 (cout_statement -> COUT LESS LESS expression LESS LESS expression SEMICOLON .)
    INT             reduce using rule 58 (cout_statement -> COUT LESS LESS expression LESS LESS expression SEMICOLON .)
    FLOAT           reduce using rule 58 (cout_statement -> COUT LESS LESS expression LESS LESS expression SEMICOLON .)
    CHAR            reduce using rule 58 (cout_statement -> COUT LESS LESS expression LESS LESS expression SEMICOLON .)
    VOID            reduce using rule 58 (cout_statement -> COUT LESS LESS expression LESS LESS expression SEMICOLON .)
    IDENTIFIER      reduce using rule 58 (cout_statement -> COUT LESS LESS expression LESS LESS expression SEMICOLON .)
    STRUCT          reduce using rule 58 (cout_statement -> COUT LESS LESS expression LESS LESS expression SEMICOLON .)
    ELSE            reduce using rule 58 (cout_statement -> COUT LESS LESS expression LESS LESS expression SEMICOLON .)


state 227

    (67) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators . expression SEMICOLON expression EQUALS expression PLUS expression RPAREN compound_statement
    (68) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators . expression SEMICOLON expression EQUALS expression PLUS expression RPAREN statement
    (69) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators . expression SEMICOLON math_expression RPAREN compound_statement
    (70) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators . expression SEMICOLON math_expression RPAREN statement
    (88) expression -> . BOOLEAN
    (89) expression -> . number
    (90) expression -> . STRING
    (91) expression -> . IDENTIFIER
    (92) expression -> . LETTER
    (93) expression -> . assignment
    (94) expression -> . array_usage
    (95) expression -> . function_call
    (96) expression -> . math_expression
    (97) expression -> . conditional_expression
    (32) number -> . INTEGER
    (33) number -> . FLOATINGPOINT
    (21) assignment -> . IDENTIFIER EQUALS expression
    (22) assignment -> . IDENTIFIER PLUS EQUALS expression
    (23) assignment -> . IDENTIFIER MINUS EQUALS expression
    (34) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (35) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN RPAREN
    (28) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (29) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (103) math_expression -> . expression PLUS expression
    (104) math_expression -> . expression MINUS expression
    (105) math_expression -> . expression TIMES expression
    (106) math_expression -> . expression DIVIDE expression
    (107) math_expression -> . expression MODULUS expression
    (108) math_expression -> . expression PLUS PLUS
    (109) math_expression -> . expression MINUS MINUS
    (110) math_expression -> . PLUS PLUS expression
    (111) math_expression -> . MINUS MINUS expression
    (79) conditional_expression -> . expression ISEQUAL expression
    (80) conditional_expression -> . expression NOT EQUALS expression
    (81) conditional_expression -> . expression LESS expression
    (82) conditional_expression -> . expression LESS EQUALS expression
    (83) conditional_expression -> . expression GREATER expression
    (84) conditional_expression -> . expression GREATER EQUALS expression
    (85) conditional_expression -> . expression AND expression
    (86) conditional_expression -> . expression OR expression
    (87) conditional_expression -> . NOT expression

    BOOLEAN         shift and go to state 13
    STRING          shift and go to state 15
    IDENTIFIER      shift and go to state 62
    LETTER          shift and go to state 16
    INTEGER         shift and go to state 28
    FLOATINGPOINT   shift and go to state 29
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    NOT             shift and go to state 32

    number                         shift and go to state 14
    expression                     shift and go to state 230
    math_expression                shift and go to state 18
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 63
    function_call                  shift and go to state 17
    conditional_expression         shift and go to state 19

state 228

    (59) comparators -> LESS .
    (62) comparators -> LESS . EQUALS

    BOOLEAN         reduce using rule 59 (comparators -> LESS .)
    STRING          reduce using rule 59 (comparators -> LESS .)
    IDENTIFIER      reduce using rule 59 (comparators -> LESS .)
    LETTER          reduce using rule 59 (comparators -> LESS .)
    INTEGER         reduce using rule 59 (comparators -> LESS .)
    FLOATINGPOINT   reduce using rule 59 (comparators -> LESS .)
    PLUS            reduce using rule 59 (comparators -> LESS .)
    MINUS           reduce using rule 59 (comparators -> LESS .)
    NOT             reduce using rule 59 (comparators -> LESS .)
    EQUALS          shift and go to state 231


state 229

    (60) comparators -> GREATER .
    (61) comparators -> GREATER . EQUALS

    BOOLEAN         reduce using rule 60 (comparators -> GREATER .)
    STRING          reduce using rule 60 (comparators -> GREATER .)
    IDENTIFIER      reduce using rule 60 (comparators -> GREATER .)
    LETTER          reduce using rule 60 (comparators -> GREATER .)
    INTEGER         reduce using rule 60 (comparators -> GREATER .)
    FLOATINGPOINT   reduce using rule 60 (comparators -> GREATER .)
    PLUS            reduce using rule 60 (comparators -> GREATER .)
    MINUS           reduce using rule 60 (comparators -> GREATER .)
    NOT             reduce using rule 60 (comparators -> GREATER .)
    EQUALS          shift and go to state 232


state 230

    (67) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression . SEMICOLON expression EQUALS expression PLUS expression RPAREN compound_statement
    (68) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression . SEMICOLON expression EQUALS expression PLUS expression RPAREN statement
    (69) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression . SEMICOLON math_expression RPAREN compound_statement
    (70) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression . SEMICOLON math_expression RPAREN statement
    (103) math_expression -> expression . PLUS expression
    (104) math_expression -> expression . MINUS expression
    (105) math_expression -> expression . TIMES expression
    (106) math_expression -> expression . DIVIDE expression
    (107) math_expression -> expression . MODULUS expression
    (108) math_expression -> expression . PLUS PLUS
    (109) math_expression -> expression . MINUS MINUS
    (79) conditional_expression -> expression . ISEQUAL expression
    (80) conditional_expression -> expression . NOT EQUALS expression
    (81) conditional_expression -> expression . LESS expression
    (82) conditional_expression -> expression . LESS EQUALS expression
    (83) conditional_expression -> expression . GREATER expression
    (84) conditional_expression -> expression . GREATER EQUALS expression
    (85) conditional_expression -> expression . AND expression
    (86) conditional_expression -> expression . OR expression

    SEMICOLON       shift and go to state 233
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULUS         shift and go to state 39
    ISEQUAL         shift and go to state 40
    NOT             shift and go to state 41
    LESS            shift and go to state 42
    GREATER         shift and go to state 43
    AND             shift and go to state 44
    OR              shift and go to state 45


state 231

    (62) comparators -> LESS EQUALS .

    BOOLEAN         reduce using rule 62 (comparators -> LESS EQUALS .)
    STRING          reduce using rule 62 (comparators -> LESS EQUALS .)
    IDENTIFIER      reduce using rule 62 (comparators -> LESS EQUALS .)
    LETTER          reduce using rule 62 (comparators -> LESS EQUALS .)
    INTEGER         reduce using rule 62 (comparators -> LESS EQUALS .)
    FLOATINGPOINT   reduce using rule 62 (comparators -> LESS EQUALS .)
    PLUS            reduce using rule 62 (comparators -> LESS EQUALS .)
    MINUS           reduce using rule 62 (comparators -> LESS EQUALS .)
    NOT             reduce using rule 62 (comparators -> LESS EQUALS .)


state 232

    (61) comparators -> GREATER EQUALS .

    BOOLEAN         reduce using rule 61 (comparators -> GREATER EQUALS .)
    STRING          reduce using rule 61 (comparators -> GREATER EQUALS .)
    IDENTIFIER      reduce using rule 61 (comparators -> GREATER EQUALS .)
    LETTER          reduce using rule 61 (comparators -> GREATER EQUALS .)
    INTEGER         reduce using rule 61 (comparators -> GREATER EQUALS .)
    FLOATINGPOINT   reduce using rule 61 (comparators -> GREATER EQUALS .)
    PLUS            reduce using rule 61 (comparators -> GREATER EQUALS .)
    MINUS           reduce using rule 61 (comparators -> GREATER EQUALS .)
    NOT             reduce using rule 61 (comparators -> GREATER EQUALS .)


state 233

    (67) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON . expression EQUALS expression PLUS expression RPAREN compound_statement
    (68) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON . expression EQUALS expression PLUS expression RPAREN statement
    (69) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON . math_expression RPAREN compound_statement
    (70) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON . math_expression RPAREN statement
    (88) expression -> . BOOLEAN
    (89) expression -> . number
    (90) expression -> . STRING
    (91) expression -> . IDENTIFIER
    (92) expression -> . LETTER
    (93) expression -> . assignment
    (94) expression -> . array_usage
    (95) expression -> . function_call
    (96) expression -> . math_expression
    (97) expression -> . conditional_expression
    (103) math_expression -> . expression PLUS expression
    (104) math_expression -> . expression MINUS expression
    (105) math_expression -> . expression TIMES expression
    (106) math_expression -> . expression DIVIDE expression
    (107) math_expression -> . expression MODULUS expression
    (108) math_expression -> . expression PLUS PLUS
    (109) math_expression -> . expression MINUS MINUS
    (110) math_expression -> . PLUS PLUS expression
    (111) math_expression -> . MINUS MINUS expression
    (32) number -> . INTEGER
    (33) number -> . FLOATINGPOINT
    (21) assignment -> . IDENTIFIER EQUALS expression
    (22) assignment -> . IDENTIFIER PLUS EQUALS expression
    (23) assignment -> . IDENTIFIER MINUS EQUALS expression
    (34) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (35) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN RPAREN
    (28) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (29) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (79) conditional_expression -> . expression ISEQUAL expression
    (80) conditional_expression -> . expression NOT EQUALS expression
    (81) conditional_expression -> . expression LESS expression
    (82) conditional_expression -> . expression LESS EQUALS expression
    (83) conditional_expression -> . expression GREATER expression
    (84) conditional_expression -> . expression GREATER EQUALS expression
    (85) conditional_expression -> . expression AND expression
    (86) conditional_expression -> . expression OR expression
    (87) conditional_expression -> . NOT expression

    BOOLEAN         shift and go to state 13
    STRING          shift and go to state 15
    IDENTIFIER      shift and go to state 62
    LETTER          shift and go to state 16
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    INTEGER         shift and go to state 28
    FLOATINGPOINT   shift and go to state 29
    NOT             shift and go to state 32

    number                         shift and go to state 14
    expression                     shift and go to state 234
    math_expression                shift and go to state 235
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 63
    function_call                  shift and go to state 17
    conditional_expression         shift and go to state 19

state 234

    (67) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression . EQUALS expression PLUS expression RPAREN compound_statement
    (68) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression . EQUALS expression PLUS expression RPAREN statement
    (103) math_expression -> expression . PLUS expression
    (104) math_expression -> expression . MINUS expression
    (105) math_expression -> expression . TIMES expression
    (106) math_expression -> expression . DIVIDE expression
    (107) math_expression -> expression . MODULUS expression
    (108) math_expression -> expression . PLUS PLUS
    (109) math_expression -> expression . MINUS MINUS
    (79) conditional_expression -> expression . ISEQUAL expression
    (80) conditional_expression -> expression . NOT EQUALS expression
    (81) conditional_expression -> expression . LESS expression
    (82) conditional_expression -> expression . LESS EQUALS expression
    (83) conditional_expression -> expression . GREATER expression
    (84) conditional_expression -> expression . GREATER EQUALS expression
    (85) conditional_expression -> expression . AND expression
    (86) conditional_expression -> expression . OR expression

    EQUALS          shift and go to state 236
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULUS         shift and go to state 39
    ISEQUAL         shift and go to state 40
    NOT             shift and go to state 41
    LESS            shift and go to state 42
    GREATER         shift and go to state 43
    AND             shift and go to state 44
    OR              shift and go to state 45


state 235

    (69) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression . RPAREN compound_statement
    (70) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression . RPAREN statement
    (96) expression -> math_expression .

    RPAREN          shift and go to state 237
    EQUALS          reduce using rule 96 (expression -> math_expression .)
    PLUS            reduce using rule 96 (expression -> math_expression .)
    MINUS           reduce using rule 96 (expression -> math_expression .)
    TIMES           reduce using rule 96 (expression -> math_expression .)
    DIVIDE          reduce using rule 96 (expression -> math_expression .)
    MODULUS         reduce using rule 96 (expression -> math_expression .)
    ISEQUAL         reduce using rule 96 (expression -> math_expression .)
    NOT             reduce using rule 96 (expression -> math_expression .)
    LESS            reduce using rule 96 (expression -> math_expression .)
    GREATER         reduce using rule 96 (expression -> math_expression .)
    AND             reduce using rule 96 (expression -> math_expression .)
    OR              reduce using rule 96 (expression -> math_expression .)


state 236

    (67) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS . expression PLUS expression RPAREN compound_statement
    (68) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS . expression PLUS expression RPAREN statement
    (88) expression -> . BOOLEAN
    (89) expression -> . number
    (90) expression -> . STRING
    (91) expression -> . IDENTIFIER
    (92) expression -> . LETTER
    (93) expression -> . assignment
    (94) expression -> . array_usage
    (95) expression -> . function_call
    (96) expression -> . math_expression
    (97) expression -> . conditional_expression
    (32) number -> . INTEGER
    (33) number -> . FLOATINGPOINT
    (21) assignment -> . IDENTIFIER EQUALS expression
    (22) assignment -> . IDENTIFIER PLUS EQUALS expression
    (23) assignment -> . IDENTIFIER MINUS EQUALS expression
    (34) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (35) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN RPAREN
    (28) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (29) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (103) math_expression -> . expression PLUS expression
    (104) math_expression -> . expression MINUS expression
    (105) math_expression -> . expression TIMES expression
    (106) math_expression -> . expression DIVIDE expression
    (107) math_expression -> . expression MODULUS expression
    (108) math_expression -> . expression PLUS PLUS
    (109) math_expression -> . expression MINUS MINUS
    (110) math_expression -> . PLUS PLUS expression
    (111) math_expression -> . MINUS MINUS expression
    (79) conditional_expression -> . expression ISEQUAL expression
    (80) conditional_expression -> . expression NOT EQUALS expression
    (81) conditional_expression -> . expression LESS expression
    (82) conditional_expression -> . expression LESS EQUALS expression
    (83) conditional_expression -> . expression GREATER expression
    (84) conditional_expression -> . expression GREATER EQUALS expression
    (85) conditional_expression -> . expression AND expression
    (86) conditional_expression -> . expression OR expression
    (87) conditional_expression -> . NOT expression

    BOOLEAN         shift and go to state 13
    STRING          shift and go to state 15
    IDENTIFIER      shift and go to state 62
    LETTER          shift and go to state 16
    INTEGER         shift and go to state 28
    FLOATINGPOINT   shift and go to state 29
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    NOT             shift and go to state 32

    number                         shift and go to state 14
    expression                     shift and go to state 238
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 63
    function_call                  shift and go to state 17
    math_expression                shift and go to state 18
    conditional_expression         shift and go to state 19

state 237

    (69) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN . compound_statement
    (70) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN . statement
    (42) compound_statement -> . LBRACE statement_list RBRACE
    (45) statement -> . iteration_statement
    (46) statement -> . declaration
    (47) statement -> . selection_statement
    (48) statement -> . return_statement
    (49) statement -> . cout_statement
    (50) statement -> . cin_statement
    (63) iteration_statement -> . WHILE LPAREN expression RPAREN compound_statement
    (64) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (65) iteration_statement -> . DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON
    (66) iteration_statement -> . DO statement WHILE LPAREN expression RPAREN SEMICOLON
    (67) iteration_statement -> . FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN compound_statement
    (68) iteration_statement -> . FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN statement
    (69) iteration_statement -> . FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN compound_statement
    (70) iteration_statement -> . FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN statement
    (13) declaration -> . type IDENTIFIER SEMICOLON
    (14) declaration -> . type IDENTIFIER identifiers SEMICOLON
    (15) declaration -> . type assignment SEMICOLON
    (16) declaration -> . assignment SEMICOLON
    (17) declaration -> . function_call SEMICOLON
    (18) declaration -> . array_usage SEMICOLON
    (19) declaration -> . type array_usage SEMICOLON
    (20) declaration -> . struct
    (71) selection_statement -> . IF LPAREN expression RPAREN compound_statement
    (72) selection_statement -> . IF LPAREN expression RPAREN statement
    (73) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE compound_statement
    (74) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE statement
    (75) selection_statement -> . IF LPAREN expression RPAREN statement ELSE compound_statement
    (76) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (77) return_statement -> . RETURN SEMICOLON
    (78) return_statement -> . RETURN expression SEMICOLON
    (57) cout_statement -> . COUT LESS LESS expression SEMICOLON
    (58) cout_statement -> . COUT LESS LESS expression LESS LESS expression SEMICOLON
    (56) cin_statement -> . CIN GREATER GREATER IDENTIFIER SEMICOLON
    (98) type -> . BOOL
    (99) type -> . INT
    (100) type -> . FLOAT
    (101) type -> . CHAR
    (102) type -> . VOID
    (21) assignment -> . IDENTIFIER EQUALS expression
    (22) assignment -> . IDENTIFIER PLUS EQUALS expression
    (23) assignment -> . IDENTIFIER MINUS EQUALS expression
    (27) function_call -> . IDENTIFIER LPAREN RPAREN
    (28) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (29) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (34) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (35) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE
    (51) struct -> . STRUCT IDENTIFIER LBRACE declaration_list RBRACE
    (52) struct -> . STRUCT IDENTIFIER LBRACE declaration_list RBRACE IDENTIFIER SEMICOLON

    LBRACE          shift and go to state 145
    WHILE           shift and go to state 169
    DO              shift and go to state 170
    FOR             shift and go to state 171
    IF              shift and go to state 172
    RETURN          shift and go to state 173
    COUT            shift and go to state 174
    CIN             shift and go to state 175
    BOOL            shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    CHAR            shift and go to state 23
    VOID            shift and go to state 24
    IDENTIFIER      shift and go to state 118
    STRUCT          shift and go to state 27

    type                           shift and go to state 122
    compound_statement             shift and go to state 239
    statement                      shift and go to state 240
    iteration_statement            shift and go to state 163
    declaration                    shift and go to state 164
    selection_statement            shift and go to state 165
    return_statement               shift and go to state 166
    cout_statement                 shift and go to state 167
    cin_statement                  shift and go to state 168
    assignment                     shift and go to state 123
    function_call                  shift and go to state 124
    array_usage                    shift and go to state 125
    struct                         shift and go to state 126

state 238

    (67) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression . PLUS expression RPAREN compound_statement
    (68) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression . PLUS expression RPAREN statement
    (103) math_expression -> expression . PLUS expression
    (104) math_expression -> expression . MINUS expression
    (105) math_expression -> expression . TIMES expression
    (106) math_expression -> expression . DIVIDE expression
    (107) math_expression -> expression . MODULUS expression
    (108) math_expression -> expression . PLUS PLUS
    (109) math_expression -> expression . MINUS MINUS
    (79) conditional_expression -> expression . ISEQUAL expression
    (80) conditional_expression -> expression . NOT EQUALS expression
    (81) conditional_expression -> expression . LESS expression
    (82) conditional_expression -> expression . LESS EQUALS expression
    (83) conditional_expression -> expression . GREATER expression
    (84) conditional_expression -> expression . GREATER EQUALS expression
    (85) conditional_expression -> expression . AND expression
    (86) conditional_expression -> expression . OR expression

    PLUS            shift and go to state 241
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULUS         shift and go to state 39
    ISEQUAL         shift and go to state 40
    NOT             shift and go to state 41
    LESS            shift and go to state 42
    GREATER         shift and go to state 43
    AND             shift and go to state 44
    OR              shift and go to state 45


state 239

    (69) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN compound_statement .

    RBRACE          reduce using rule 69 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN compound_statement .)
    WHILE           reduce using rule 69 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN compound_statement .)
    DO              reduce using rule 69 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN compound_statement .)
    FOR             reduce using rule 69 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN compound_statement .)
    IF              reduce using rule 69 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN compound_statement .)
    RETURN          reduce using rule 69 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN compound_statement .)
    COUT            reduce using rule 69 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN compound_statement .)
    CIN             reduce using rule 69 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN compound_statement .)
    BOOL            reduce using rule 69 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN compound_statement .)
    INT             reduce using rule 69 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN compound_statement .)
    FLOAT           reduce using rule 69 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN compound_statement .)
    CHAR            reduce using rule 69 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN compound_statement .)
    VOID            reduce using rule 69 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN compound_statement .)
    IDENTIFIER      reduce using rule 69 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN compound_statement .)
    STRUCT          reduce using rule 69 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN compound_statement .)
    ELSE            reduce using rule 69 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN compound_statement .)


state 240

    (70) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN statement .

    RBRACE          reduce using rule 70 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN statement .)
    WHILE           reduce using rule 70 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN statement .)
    DO              reduce using rule 70 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN statement .)
    FOR             reduce using rule 70 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN statement .)
    IF              reduce using rule 70 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN statement .)
    RETURN          reduce using rule 70 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN statement .)
    COUT            reduce using rule 70 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN statement .)
    CIN             reduce using rule 70 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN statement .)
    BOOL            reduce using rule 70 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN statement .)
    INT             reduce using rule 70 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN statement .)
    FLOAT           reduce using rule 70 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN statement .)
    CHAR            reduce using rule 70 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN statement .)
    VOID            reduce using rule 70 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN statement .)
    IDENTIFIER      reduce using rule 70 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN statement .)
    STRUCT          reduce using rule 70 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN statement .)
    ELSE            reduce using rule 70 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN statement .)


state 241

    (67) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS . expression RPAREN compound_statement
    (68) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS . expression RPAREN statement
    (103) math_expression -> expression PLUS . expression
    (108) math_expression -> expression PLUS . PLUS
    (88) expression -> . BOOLEAN
    (89) expression -> . number
    (90) expression -> . STRING
    (91) expression -> . IDENTIFIER
    (92) expression -> . LETTER
    (93) expression -> . assignment
    (94) expression -> . array_usage
    (95) expression -> . function_call
    (96) expression -> . math_expression
    (97) expression -> . conditional_expression
    (32) number -> . INTEGER
    (33) number -> . FLOATINGPOINT
    (21) assignment -> . IDENTIFIER EQUALS expression
    (22) assignment -> . IDENTIFIER PLUS EQUALS expression
    (23) assignment -> . IDENTIFIER MINUS EQUALS expression
    (34) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (35) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE
    (27) function_call -> . IDENTIFIER LPAREN RPAREN
    (28) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (29) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (103) math_expression -> . expression PLUS expression
    (104) math_expression -> . expression MINUS expression
    (105) math_expression -> . expression TIMES expression
    (106) math_expression -> . expression DIVIDE expression
    (107) math_expression -> . expression MODULUS expression
    (108) math_expression -> . expression PLUS PLUS
    (109) math_expression -> . expression MINUS MINUS
    (110) math_expression -> . PLUS PLUS expression
    (111) math_expression -> . MINUS MINUS expression
    (79) conditional_expression -> . expression ISEQUAL expression
    (80) conditional_expression -> . expression NOT EQUALS expression
    (81) conditional_expression -> . expression LESS expression
    (82) conditional_expression -> . expression LESS EQUALS expression
    (83) conditional_expression -> . expression GREATER expression
    (84) conditional_expression -> . expression GREATER EQUALS expression
    (85) conditional_expression -> . expression AND expression
    (86) conditional_expression -> . expression OR expression
    (87) conditional_expression -> . NOT expression

    PLUS            shift and go to state 65
    BOOLEAN         shift and go to state 13
    STRING          shift and go to state 15
    IDENTIFIER      shift and go to state 62
    LETTER          shift and go to state 16
    INTEGER         shift and go to state 28
    FLOATINGPOINT   shift and go to state 29
    MINUS           shift and go to state 31
    NOT             shift and go to state 32

    number                         shift and go to state 14
    expression                     shift and go to state 242
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 63
    function_call                  shift and go to state 17
    math_expression                shift and go to state 18
    conditional_expression         shift and go to state 19

state 242

    (67) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression . RPAREN compound_statement
    (68) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression . RPAREN statement
    (103) math_expression -> expression PLUS expression .
    (103) math_expression -> expression . PLUS expression
    (104) math_expression -> expression . MINUS expression
    (105) math_expression -> expression . TIMES expression
    (106) math_expression -> expression . DIVIDE expression
    (107) math_expression -> expression . MODULUS expression
    (108) math_expression -> expression . PLUS PLUS
    (109) math_expression -> expression . MINUS MINUS
    (79) conditional_expression -> expression . ISEQUAL expression
    (80) conditional_expression -> expression . NOT EQUALS expression
    (81) conditional_expression -> expression . LESS expression
    (82) conditional_expression -> expression . LESS EQUALS expression
    (83) conditional_expression -> expression . GREATER expression
    (84) conditional_expression -> expression . GREATER EQUALS expression
    (85) conditional_expression -> expression . AND expression
    (86) conditional_expression -> expression . OR expression

    RPAREN          shift and go to state 243
    PLUS            reduce using rule 103 (math_expression -> expression PLUS expression .)
    MINUS           reduce using rule 103 (math_expression -> expression PLUS expression .)
    MODULUS         reduce using rule 103 (math_expression -> expression PLUS expression .)
    ISEQUAL         reduce using rule 103 (math_expression -> expression PLUS expression .)
    NOT             reduce using rule 103 (math_expression -> expression PLUS expression .)
    LESS            reduce using rule 103 (math_expression -> expression PLUS expression .)
    GREATER         reduce using rule 103 (math_expression -> expression PLUS expression .)
    AND             reduce using rule 103 (math_expression -> expression PLUS expression .)
    OR              reduce using rule 103 (math_expression -> expression PLUS expression .)
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38

  ! TIMES           [ reduce using rule 103 (math_expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 103 (math_expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 35 ]
  ! MINUS           [ shift and go to state 36 ]
  ! MODULUS         [ shift and go to state 39 ]
  ! ISEQUAL         [ shift and go to state 40 ]
  ! NOT             [ shift and go to state 41 ]
  ! LESS            [ shift and go to state 42 ]
  ! GREATER         [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]
  ! OR              [ shift and go to state 45 ]


state 243

    (67) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN . compound_statement
    (68) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN . statement
    (42) compound_statement -> . LBRACE statement_list RBRACE
    (45) statement -> . iteration_statement
    (46) statement -> . declaration
    (47) statement -> . selection_statement
    (48) statement -> . return_statement
    (49) statement -> . cout_statement
    (50) statement -> . cin_statement
    (63) iteration_statement -> . WHILE LPAREN expression RPAREN compound_statement
    (64) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (65) iteration_statement -> . DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON
    (66) iteration_statement -> . DO statement WHILE LPAREN expression RPAREN SEMICOLON
    (67) iteration_statement -> . FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN compound_statement
    (68) iteration_statement -> . FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN statement
    (69) iteration_statement -> . FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN compound_statement
    (70) iteration_statement -> . FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON math_expression RPAREN statement
    (13) declaration -> . type IDENTIFIER SEMICOLON
    (14) declaration -> . type IDENTIFIER identifiers SEMICOLON
    (15) declaration -> . type assignment SEMICOLON
    (16) declaration -> . assignment SEMICOLON
    (17) declaration -> . function_call SEMICOLON
    (18) declaration -> . array_usage SEMICOLON
    (19) declaration -> . type array_usage SEMICOLON
    (20) declaration -> . struct
    (71) selection_statement -> . IF LPAREN expression RPAREN compound_statement
    (72) selection_statement -> . IF LPAREN expression RPAREN statement
    (73) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE compound_statement
    (74) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE statement
    (75) selection_statement -> . IF LPAREN expression RPAREN statement ELSE compound_statement
    (76) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (77) return_statement -> . RETURN SEMICOLON
    (78) return_statement -> . RETURN expression SEMICOLON
    (57) cout_statement -> . COUT LESS LESS expression SEMICOLON
    (58) cout_statement -> . COUT LESS LESS expression LESS LESS expression SEMICOLON
    (56) cin_statement -> . CIN GREATER GREATER IDENTIFIER SEMICOLON
    (98) type -> . BOOL
    (99) type -> . INT
    (100) type -> . FLOAT
    (101) type -> . CHAR
    (102) type -> . VOID
    (21) assignment -> . IDENTIFIER EQUALS expression
    (22) assignment -> . IDENTIFIER PLUS EQUALS expression
    (23) assignment -> . IDENTIFIER MINUS EQUALS expression
    (27) function_call -> . IDENTIFIER LPAREN RPAREN
    (28) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (29) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (34) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (35) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET LBRACE elements RBRACE
    (51) struct -> . STRUCT IDENTIFIER LBRACE declaration_list RBRACE
    (52) struct -> . STRUCT IDENTIFIER LBRACE declaration_list RBRACE IDENTIFIER SEMICOLON

    LBRACE          shift and go to state 145
    WHILE           shift and go to state 169
    DO              shift and go to state 170
    FOR             shift and go to state 171
    IF              shift and go to state 172
    RETURN          shift and go to state 173
    COUT            shift and go to state 174
    CIN             shift and go to state 175
    BOOL            shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    CHAR            shift and go to state 23
    VOID            shift and go to state 24
    IDENTIFIER      shift and go to state 118
    STRUCT          shift and go to state 27

    type                           shift and go to state 122
    compound_statement             shift and go to state 244
    statement                      shift and go to state 245
    iteration_statement            shift and go to state 163
    declaration                    shift and go to state 164
    selection_statement            shift and go to state 165
    return_statement               shift and go to state 166
    cout_statement                 shift and go to state 167
    cin_statement                  shift and go to state 168
    assignment                     shift and go to state 123
    function_call                  shift and go to state 124
    array_usage                    shift and go to state 125
    struct                         shift and go to state 126

state 244

    (67) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN compound_statement .

    RBRACE          reduce using rule 67 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN compound_statement .)
    WHILE           reduce using rule 67 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN compound_statement .)
    DO              reduce using rule 67 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN compound_statement .)
    FOR             reduce using rule 67 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN compound_statement .)
    IF              reduce using rule 67 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN compound_statement .)
    RETURN          reduce using rule 67 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN compound_statement .)
    COUT            reduce using rule 67 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN compound_statement .)
    CIN             reduce using rule 67 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN compound_statement .)
    BOOL            reduce using rule 67 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN compound_statement .)
    INT             reduce using rule 67 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN compound_statement .)
    FLOAT           reduce using rule 67 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN compound_statement .)
    CHAR            reduce using rule 67 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN compound_statement .)
    VOID            reduce using rule 67 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN compound_statement .)
    IDENTIFIER      reduce using rule 67 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN compound_statement .)
    STRUCT          reduce using rule 67 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN compound_statement .)
    ELSE            reduce using rule 67 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN compound_statement .)


state 245

    (68) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN statement .

    RBRACE          reduce using rule 68 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN statement .)
    WHILE           reduce using rule 68 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN statement .)
    DO              reduce using rule 68 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN statement .)
    FOR             reduce using rule 68 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN statement .)
    IF              reduce using rule 68 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN statement .)
    RETURN          reduce using rule 68 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN statement .)
    COUT            reduce using rule 68 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN statement .)
    CIN             reduce using rule 68 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN statement .)
    BOOL            reduce using rule 68 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN statement .)
    INT             reduce using rule 68 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN statement .)
    FLOAT           reduce using rule 68 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN statement .)
    CHAR            reduce using rule 68 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN statement .)
    VOID            reduce using rule 68 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN statement .)
    IDENTIFIER      reduce using rule 68 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN statement .)
    STRUCT          reduce using rule 68 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN statement .)
    ELSE            reduce using rule 68 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER comparators expression SEMICOLON expression EQUALS expression PLUS expression RPAREN statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 6 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 6 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 61 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 61 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 61 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 61 resolved as shift
WARNING: shift/reduce conflict for MODULUS in state 61 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 61 resolved as shift
WARNING: shift/reduce conflict for NOT in state 61 resolved as shift
WARNING: shift/reduce conflict for LESS in state 61 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 61 resolved as shift
WARNING: shift/reduce conflict for AND in state 61 resolved as shift
WARNING: shift/reduce conflict for OR in state 61 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 62 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 62 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 62 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 70 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 70 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 70 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 70 resolved as shift
WARNING: shift/reduce conflict for MODULUS in state 70 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 70 resolved as shift
WARNING: shift/reduce conflict for NOT in state 70 resolved as shift
WARNING: shift/reduce conflict for LESS in state 70 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 70 resolved as shift
WARNING: shift/reduce conflict for AND in state 70 resolved as shift
WARNING: shift/reduce conflict for OR in state 70 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 136 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 206 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 207 resolved as shift
