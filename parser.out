Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    APOST
    COMMENT
    COMMENTBLOCK
    EOF

Grammar

Rule 0     S' -> program
Rule 1     program -> function
Rule 2     program -> function program
Rule 3     program -> external-declaration program
Rule 4     program -> external-declaration
Rule 5     program -> expression
Rule 6     external-declaration -> type assignment SEMICOLON
Rule 7     external-declaration -> array_usage SEMICOLON
Rule 8     external-declaration -> type array_usage SEMICOLON
Rule 9     external-declaration -> macro_definition
Rule 10    external-declaration -> file_inclusion
Rule 11    external-declaration -> namespace_statement
Rule 12    declaration -> type IDENTIFIER SEMICOLON
Rule 13    declaration -> type IDENTIFIER identifiers SEMICOLON
Rule 14    declaration -> type assignment SEMICOLON
Rule 15    declaration -> assignment SEMICOLON
Rule 16    declaration -> function_call SEMICOLON
Rule 17    declaration -> array_usage SEMICOLON
Rule 18    declaration -> type array_usage SEMICOLON
Rule 19    assignment -> IDENTIFIER EQUALS expression
Rule 20    assignment -> IDENTIFIER PLUS EQUALS expression
Rule 21    assignment -> IDENTIFIER MINUS EQUALS expression
Rule 22    identifiers -> COMMA IDENTIFIER
Rule 23    identifiers -> COMMA assignment
Rule 24    identifiers -> COMMA IDENTIFIER identifiers
Rule 25    function_call -> IDENTIFIER LPAREN RPAREN
Rule 26    function_call -> IDENTIFIER LPAREN expression RPAREN
Rule 27    function_call -> IDENTIFIER LPAREN elements RPAREN
Rule 28    elements -> COMMA expression
Rule 29    elements -> COMMA expression elements
Rule 30    number -> INTEGER
Rule 31    number -> FLOATINGPOINT
Rule 32    array_usage -> IDENTIFIER LBRACKET elements RBRACKET
Rule 33    array_usage -> IDENTIFIER LBRACKET expression RBRACKET
Rule 34    function -> type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement
Rule 35    argument_list_option -> argument_list
Rule 36    argument_list_option -> empty
Rule 37    argument_list -> argument_list COMMA argument
Rule 38    argument_list -> argument
Rule 39    argument -> type IDENTIFIER
Rule 40    compound_statement -> LBRACE statement_list RBRACE
Rule 41    statement_list -> statement_list statement
Rule 42    statement_list -> empty
Rule 43    statement -> iteration_statement
Rule 44    statement -> declaration
Rule 45    statement -> selection_statement
Rule 46    statement -> return_statement
Rule 47    statement -> cout_statement
Rule 48    statement -> cin_statement
Rule 49    namespace_statement -> USING NAMESPACE IDENTIFIER SEMICOLON
Rule 50    cin_statement -> CIN GREATER GREATER IDENTIFIER SEMICOLON
Rule 51    cout_statement -> COUT LESS LESS expression SEMICOLON
Rule 52    cout_statement -> COUT LESS LESS expression LESS LESS expression SEMICOLON
Rule 53    iteration_statement -> WHILE LPAREN expression RPAREN compound_statement
Rule 54    iteration_statement -> WHILE LPAREN expression RPAREN statement
Rule 55    iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON
Rule 56    iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON
Rule 57    iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN compound_statement
Rule 58    iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN statement
Rule 59    selection_statement -> IF LPAREN expression RPAREN compound_statement
Rule 60    selection_statement -> IF LPAREN expression RPAREN statement
Rule 61    selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement
Rule 62    selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement
Rule 63    selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement
Rule 64    selection_statement -> IF LPAREN expression RPAREN statement ELSE statement
Rule 65    return_statement -> RETURN SEMICOLON
Rule 66    return_statement -> RETURN expression SEMICOLON
Rule 67    conditional_expression -> expression ISEQUAL expression
Rule 68    conditional_expression -> expression NOT EQUALS expression
Rule 69    conditional_expression -> expression LESS expression
Rule 70    conditional_expression -> expression LESS EQUALS expression
Rule 71    conditional_expression -> expression GREATER expression
Rule 72    conditional_expression -> expression GREATER EQUALS expression
Rule 73    conditional_expression -> expression AND expression
Rule 74    conditional_expression -> expression OR expression
Rule 75    conditional_expression -> NOT expression
Rule 76    expression -> BOOLEAN
Rule 77    expression -> number
Rule 78    expression -> STRING
Rule 79    expression -> IDENTIFIER
Rule 80    expression -> LETTER
Rule 81    expression -> assignment
Rule 82    expression -> array_usage
Rule 83    expression -> function_call
Rule 84    expression -> math_expression
Rule 85    expression -> conditional_expression
Rule 86    type -> BOOL
Rule 87    type -> INT
Rule 88    type -> FLOAT
Rule 89    type -> CHAR
Rule 90    type -> VOID
Rule 91    math_expression -> expression PLUS expression
Rule 92    math_expression -> expression MINUS expression
Rule 93    math_expression -> expression TIMES expression
Rule 94    math_expression -> expression DIVIDE expression
Rule 95    math_expression -> expression MODULUS expression
Rule 96    math_expression -> expression PLUS PLUS
Rule 97    math_expression -> expression MINUS MINUS
Rule 98    macro_definition -> POUND DEFINE IDENTIFIER assignment
Rule 99    file_inclusion -> POUND INCLUDE LESS HEADER GREATER
Rule 100   file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE
Rule 101   file_inclusion -> POUND INCLUDE LESS IDENTIFIER GREATER
Rule 102   file_inclusion -> POUND INCLUDE QUOTE IDENTIFIER QUOTE
Rule 103   empty -> <empty>

Terminals, with rules where they appear

AND                  : 73
APOST                : 
BOOL                 : 86
BOOLEAN              : 76
CHAR                 : 89
CIN                  : 50
COMMA                : 22 23 24 28 29 37
COMMENT              : 
COMMENTBLOCK         : 
COUT                 : 51 52
DEFINE               : 98
DIVIDE               : 94
DO                   : 55 56
ELSE                 : 61 62 63 64
EOF                  : 
EQUALS               : 19 20 21 57 57 57 58 58 58 68 70 72
FLOAT                : 88
FLOATINGPOINT        : 31
FOR                  : 57 58
GREATER              : 50 50 71 72 99 101
HEADER               : 99 100
IDENTIFIER           : 12 13 19 20 21 22 24 25 26 27 32 33 34 39 49 50 57 57 57 57 58 58 58 58 79 98 101 102
IF                   : 59 60 61 62 63 64
INCLUDE              : 99 100 101 102
INT                  : 87
INTEGER              : 30 57 58
ISEQUAL              : 67
LBRACE               : 40
LBRACKET             : 32 33
LESS                 : 51 51 52 52 52 52 57 58 69 70 99 101
LETTER               : 80
LPAREN               : 25 26 27 34 53 54 55 56 57 57 58 58 59 60 61 62 63 64
MINUS                : 21 92 97 97
MODULUS              : 95
NAMESPACE            : 49
NOT                  : 68 75
OR                   : 74
PLUS                 : 20 57 58 91 96 96
POUND                : 98 99 100 101 102
QUOTE                : 100 100 102 102
RBRACE               : 40
RBRACKET             : 32 33
RETURN               : 65 66
RPAREN               : 25 26 27 34 53 54 55 56 59 60 61 62 63 64
SEMICOLON            : 6 7 8 12 13 14 15 16 17 18 49 50 51 52 55 56 57 57 58 58 65 66
STRING               : 78
TIMES                : 93
USING                : 49
VOID                 : 90
WHILE                : 53 54 55 56
error                : 

Nonterminals, with rules where they appear

argument             : 37 38
argument_list        : 35 37
argument_list_option : 34
array_usage          : 7 8 17 18 82
assignment           : 6 14 15 23 81 98
cin_statement        : 48
compound_statement   : 34 53 55 57 59 61 61 62 63
conditional_expression : 85
cout_statement       : 47
declaration          : 44
elements             : 27 29 32
empty                : 36 42
expression           : 5 19 20 21 26 28 29 33 51 52 52 53 54 55 56 57 58 59 60 61 62 63 64 66 67 67 68 68 69 69 70 70 71 71 72 72 73 73 74 74 75 91 91 92 92 93 93 94 94 95 95 96 97
external-declaration : 3 4
file_inclusion       : 10
function             : 1 2
function_call        : 16 83
identifiers          : 13 24
iteration_statement  : 43
macro_definition     : 9
math_expression      : 84
namespace_statement  : 11
number               : 57 58 77
program              : 2 3 0
return_statement     : 46
selection_statement  : 45
statement            : 41 54 56 58 60 62 63 64 64
statement_list       : 40 41
type                 : 6 8 12 13 14 18 34 39 57 58

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . function
    (2) program -> . function program
    (3) program -> . external-declaration program
    (4) program -> . external-declaration
    (5) program -> . expression
    (34) function -> . type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement
    (6) external-declaration -> . type assignment SEMICOLON
    (7) external-declaration -> . array_usage SEMICOLON
    (8) external-declaration -> . type array_usage SEMICOLON
    (9) external-declaration -> . macro_definition
    (10) external-declaration -> . file_inclusion
    (11) external-declaration -> . namespace_statement
    (76) expression -> . BOOLEAN
    (77) expression -> . number
    (78) expression -> . STRING
    (79) expression -> . IDENTIFIER
    (80) expression -> . LETTER
    (81) expression -> . assignment
    (82) expression -> . array_usage
    (83) expression -> . function_call
    (84) expression -> . math_expression
    (85) expression -> . conditional_expression
    (86) type -> . BOOL
    (87) type -> . INT
    (88) type -> . FLOAT
    (89) type -> . CHAR
    (90) type -> . VOID
    (32) array_usage -> . IDENTIFIER LBRACKET elements RBRACKET
    (33) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (98) macro_definition -> . POUND DEFINE IDENTIFIER assignment
    (99) file_inclusion -> . POUND INCLUDE LESS HEADER GREATER
    (100) file_inclusion -> . POUND INCLUDE QUOTE HEADER QUOTE
    (101) file_inclusion -> . POUND INCLUDE LESS IDENTIFIER GREATER
    (102) file_inclusion -> . POUND INCLUDE QUOTE IDENTIFIER QUOTE
    (49) namespace_statement -> . USING NAMESPACE IDENTIFIER SEMICOLON
    (30) number -> . INTEGER
    (31) number -> . FLOATINGPOINT
    (19) assignment -> . IDENTIFIER EQUALS expression
    (20) assignment -> . IDENTIFIER PLUS EQUALS expression
    (21) assignment -> . IDENTIFIER MINUS EQUALS expression
    (25) function_call -> . IDENTIFIER LPAREN RPAREN
    (26) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (27) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (91) math_expression -> . expression PLUS expression
    (92) math_expression -> . expression MINUS expression
    (93) math_expression -> . expression TIMES expression
    (94) math_expression -> . expression DIVIDE expression
    (95) math_expression -> . expression MODULUS expression
    (96) math_expression -> . expression PLUS PLUS
    (97) math_expression -> . expression MINUS MINUS
    (67) conditional_expression -> . expression ISEQUAL expression
    (68) conditional_expression -> . expression NOT EQUALS expression
    (69) conditional_expression -> . expression LESS expression
    (70) conditional_expression -> . expression LESS EQUALS expression
    (71) conditional_expression -> . expression GREATER expression
    (72) conditional_expression -> . expression GREATER EQUALS expression
    (73) conditional_expression -> . expression AND expression
    (74) conditional_expression -> . expression OR expression
    (75) conditional_expression -> . NOT expression

    BOOLEAN         shift and go to state 12
    STRING          shift and go to state 14
    IDENTIFIER      shift and go to state 6
    LETTER          shift and go to state 15
    BOOL            shift and go to state 19
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22
    VOID            shift and go to state 23
    POUND           shift and go to state 24
    USING           shift and go to state 25
    INTEGER         shift and go to state 26
    FLOATINGPOINT   shift and go to state 27
    NOT             shift and go to state 28

    program                        shift and go to state 1
    function                       shift and go to state 2
    external-declaration           shift and go to state 3
    expression                     shift and go to state 4
    type                           shift and go to state 5
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 8
    macro_definition               shift and go to state 9
    file_inclusion                 shift and go to state 10
    namespace_statement            shift and go to state 11
    number                         shift and go to state 13
    function_call                  shift and go to state 16
    math_expression                shift and go to state 17
    conditional_expression         shift and go to state 18

state 1

    (0) S' -> program .



state 2

    (1) program -> function .
    (2) program -> function . program
    (1) program -> . function
    (2) program -> . function program
    (3) program -> . external-declaration program
    (4) program -> . external-declaration
    (5) program -> . expression
    (34) function -> . type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement
    (6) external-declaration -> . type assignment SEMICOLON
    (7) external-declaration -> . array_usage SEMICOLON
    (8) external-declaration -> . type array_usage SEMICOLON
    (9) external-declaration -> . macro_definition
    (10) external-declaration -> . file_inclusion
    (11) external-declaration -> . namespace_statement
    (76) expression -> . BOOLEAN
    (77) expression -> . number
    (78) expression -> . STRING
    (79) expression -> . IDENTIFIER
    (80) expression -> . LETTER
    (81) expression -> . assignment
    (82) expression -> . array_usage
    (83) expression -> . function_call
    (84) expression -> . math_expression
    (85) expression -> . conditional_expression
    (86) type -> . BOOL
    (87) type -> . INT
    (88) type -> . FLOAT
    (89) type -> . CHAR
    (90) type -> . VOID
    (32) array_usage -> . IDENTIFIER LBRACKET elements RBRACKET
    (33) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (98) macro_definition -> . POUND DEFINE IDENTIFIER assignment
    (99) file_inclusion -> . POUND INCLUDE LESS HEADER GREATER
    (100) file_inclusion -> . POUND INCLUDE QUOTE HEADER QUOTE
    (101) file_inclusion -> . POUND INCLUDE LESS IDENTIFIER GREATER
    (102) file_inclusion -> . POUND INCLUDE QUOTE IDENTIFIER QUOTE
    (49) namespace_statement -> . USING NAMESPACE IDENTIFIER SEMICOLON
    (30) number -> . INTEGER
    (31) number -> . FLOATINGPOINT
    (19) assignment -> . IDENTIFIER EQUALS expression
    (20) assignment -> . IDENTIFIER PLUS EQUALS expression
    (21) assignment -> . IDENTIFIER MINUS EQUALS expression
    (25) function_call -> . IDENTIFIER LPAREN RPAREN
    (26) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (27) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (91) math_expression -> . expression PLUS expression
    (92) math_expression -> . expression MINUS expression
    (93) math_expression -> . expression TIMES expression
    (94) math_expression -> . expression DIVIDE expression
    (95) math_expression -> . expression MODULUS expression
    (96) math_expression -> . expression PLUS PLUS
    (97) math_expression -> . expression MINUS MINUS
    (67) conditional_expression -> . expression ISEQUAL expression
    (68) conditional_expression -> . expression NOT EQUALS expression
    (69) conditional_expression -> . expression LESS expression
    (70) conditional_expression -> . expression LESS EQUALS expression
    (71) conditional_expression -> . expression GREATER expression
    (72) conditional_expression -> . expression GREATER EQUALS expression
    (73) conditional_expression -> . expression AND expression
    (74) conditional_expression -> . expression OR expression
    (75) conditional_expression -> . NOT expression

    $end            reduce using rule 1 (program -> function .)
    BOOLEAN         shift and go to state 12
    STRING          shift and go to state 14
    IDENTIFIER      shift and go to state 6
    LETTER          shift and go to state 15
    BOOL            shift and go to state 19
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22
    VOID            shift and go to state 23
    POUND           shift and go to state 24
    USING           shift and go to state 25
    INTEGER         shift and go to state 26
    FLOATINGPOINT   shift and go to state 27
    NOT             shift and go to state 28

    function                       shift and go to state 2
    program                        shift and go to state 29
    external-declaration           shift and go to state 3
    expression                     shift and go to state 4
    type                           shift and go to state 5
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 8
    macro_definition               shift and go to state 9
    file_inclusion                 shift and go to state 10
    namespace_statement            shift and go to state 11
    number                         shift and go to state 13
    function_call                  shift and go to state 16
    math_expression                shift and go to state 17
    conditional_expression         shift and go to state 18

state 3

    (3) program -> external-declaration . program
    (4) program -> external-declaration .
    (1) program -> . function
    (2) program -> . function program
    (3) program -> . external-declaration program
    (4) program -> . external-declaration
    (5) program -> . expression
    (34) function -> . type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement
    (6) external-declaration -> . type assignment SEMICOLON
    (7) external-declaration -> . array_usage SEMICOLON
    (8) external-declaration -> . type array_usage SEMICOLON
    (9) external-declaration -> . macro_definition
    (10) external-declaration -> . file_inclusion
    (11) external-declaration -> . namespace_statement
    (76) expression -> . BOOLEAN
    (77) expression -> . number
    (78) expression -> . STRING
    (79) expression -> . IDENTIFIER
    (80) expression -> . LETTER
    (81) expression -> . assignment
    (82) expression -> . array_usage
    (83) expression -> . function_call
    (84) expression -> . math_expression
    (85) expression -> . conditional_expression
    (86) type -> . BOOL
    (87) type -> . INT
    (88) type -> . FLOAT
    (89) type -> . CHAR
    (90) type -> . VOID
    (32) array_usage -> . IDENTIFIER LBRACKET elements RBRACKET
    (33) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (98) macro_definition -> . POUND DEFINE IDENTIFIER assignment
    (99) file_inclusion -> . POUND INCLUDE LESS HEADER GREATER
    (100) file_inclusion -> . POUND INCLUDE QUOTE HEADER QUOTE
    (101) file_inclusion -> . POUND INCLUDE LESS IDENTIFIER GREATER
    (102) file_inclusion -> . POUND INCLUDE QUOTE IDENTIFIER QUOTE
    (49) namespace_statement -> . USING NAMESPACE IDENTIFIER SEMICOLON
    (30) number -> . INTEGER
    (31) number -> . FLOATINGPOINT
    (19) assignment -> . IDENTIFIER EQUALS expression
    (20) assignment -> . IDENTIFIER PLUS EQUALS expression
    (21) assignment -> . IDENTIFIER MINUS EQUALS expression
    (25) function_call -> . IDENTIFIER LPAREN RPAREN
    (26) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (27) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (91) math_expression -> . expression PLUS expression
    (92) math_expression -> . expression MINUS expression
    (93) math_expression -> . expression TIMES expression
    (94) math_expression -> . expression DIVIDE expression
    (95) math_expression -> . expression MODULUS expression
    (96) math_expression -> . expression PLUS PLUS
    (97) math_expression -> . expression MINUS MINUS
    (67) conditional_expression -> . expression ISEQUAL expression
    (68) conditional_expression -> . expression NOT EQUALS expression
    (69) conditional_expression -> . expression LESS expression
    (70) conditional_expression -> . expression LESS EQUALS expression
    (71) conditional_expression -> . expression GREATER expression
    (72) conditional_expression -> . expression GREATER EQUALS expression
    (73) conditional_expression -> . expression AND expression
    (74) conditional_expression -> . expression OR expression
    (75) conditional_expression -> . NOT expression

    $end            reduce using rule 4 (program -> external-declaration .)
    BOOLEAN         shift and go to state 12
    STRING          shift and go to state 14
    IDENTIFIER      shift and go to state 6
    LETTER          shift and go to state 15
    BOOL            shift and go to state 19
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22
    VOID            shift and go to state 23
    POUND           shift and go to state 24
    USING           shift and go to state 25
    INTEGER         shift and go to state 26
    FLOATINGPOINT   shift and go to state 27
    NOT             shift and go to state 28

    external-declaration           shift and go to state 3
    program                        shift and go to state 30
    function                       shift and go to state 2
    expression                     shift and go to state 4
    type                           shift and go to state 5
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 8
    macro_definition               shift and go to state 9
    file_inclusion                 shift and go to state 10
    namespace_statement            shift and go to state 11
    number                         shift and go to state 13
    function_call                  shift and go to state 16
    math_expression                shift and go to state 17
    conditional_expression         shift and go to state 18

state 4

    (5) program -> expression .
    (91) math_expression -> expression . PLUS expression
    (92) math_expression -> expression . MINUS expression
    (93) math_expression -> expression . TIMES expression
    (94) math_expression -> expression . DIVIDE expression
    (95) math_expression -> expression . MODULUS expression
    (96) math_expression -> expression . PLUS PLUS
    (97) math_expression -> expression . MINUS MINUS
    (67) conditional_expression -> expression . ISEQUAL expression
    (68) conditional_expression -> expression . NOT EQUALS expression
    (69) conditional_expression -> expression . LESS expression
    (70) conditional_expression -> expression . LESS EQUALS expression
    (71) conditional_expression -> expression . GREATER expression
    (72) conditional_expression -> expression . GREATER EQUALS expression
    (73) conditional_expression -> expression . AND expression
    (74) conditional_expression -> expression . OR expression

    $end            reduce using rule 5 (program -> expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    MODULUS         shift and go to state 35
    ISEQUAL         shift and go to state 36
    NOT             shift and go to state 37
    LESS            shift and go to state 38
    GREATER         shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41


state 5

    (34) function -> type . IDENTIFIER LPAREN argument_list_option RPAREN compound_statement
    (6) external-declaration -> type . assignment SEMICOLON
    (8) external-declaration -> type . array_usage SEMICOLON
    (19) assignment -> . IDENTIFIER EQUALS expression
    (20) assignment -> . IDENTIFIER PLUS EQUALS expression
    (21) assignment -> . IDENTIFIER MINUS EQUALS expression
    (32) array_usage -> . IDENTIFIER LBRACKET elements RBRACKET
    (33) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET

    IDENTIFIER      shift and go to state 42

    assignment                     shift and go to state 43
    array_usage                    shift and go to state 44

state 6

    (79) expression -> IDENTIFIER .
    (32) array_usage -> IDENTIFIER . LBRACKET elements RBRACKET
    (33) array_usage -> IDENTIFIER . LBRACKET expression RBRACKET
    (19) assignment -> IDENTIFIER . EQUALS expression
    (20) assignment -> IDENTIFIER . PLUS EQUALS expression
    (21) assignment -> IDENTIFIER . MINUS EQUALS expression
    (25) function_call -> IDENTIFIER . LPAREN RPAREN
    (26) function_call -> IDENTIFIER . LPAREN expression RPAREN
    (27) function_call -> IDENTIFIER . LPAREN elements RPAREN

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    TIMES           reduce using rule 79 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 79 (expression -> IDENTIFIER .)
    MODULUS         reduce using rule 79 (expression -> IDENTIFIER .)
    ISEQUAL         reduce using rule 79 (expression -> IDENTIFIER .)
    NOT             reduce using rule 79 (expression -> IDENTIFIER .)
    LESS            reduce using rule 79 (expression -> IDENTIFIER .)
    GREATER         reduce using rule 79 (expression -> IDENTIFIER .)
    AND             reduce using rule 79 (expression -> IDENTIFIER .)
    OR              reduce using rule 79 (expression -> IDENTIFIER .)
    $end            reduce using rule 79 (expression -> IDENTIFIER .)
    LBRACKET        shift and go to state 45
    EQUALS          shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    LPAREN          shift and go to state 49

  ! PLUS            [ reduce using rule 79 (expression -> IDENTIFIER .) ]
  ! MINUS           [ reduce using rule 79 (expression -> IDENTIFIER .) ]


state 7

    (81) expression -> assignment .

    PLUS            reduce using rule 81 (expression -> assignment .)
    MINUS           reduce using rule 81 (expression -> assignment .)
    TIMES           reduce using rule 81 (expression -> assignment .)
    DIVIDE          reduce using rule 81 (expression -> assignment .)
    MODULUS         reduce using rule 81 (expression -> assignment .)
    ISEQUAL         reduce using rule 81 (expression -> assignment .)
    NOT             reduce using rule 81 (expression -> assignment .)
    LESS            reduce using rule 81 (expression -> assignment .)
    GREATER         reduce using rule 81 (expression -> assignment .)
    AND             reduce using rule 81 (expression -> assignment .)
    OR              reduce using rule 81 (expression -> assignment .)
    $end            reduce using rule 81 (expression -> assignment .)
    RBRACKET        reduce using rule 81 (expression -> assignment .)
    SEMICOLON       reduce using rule 81 (expression -> assignment .)
    RPAREN          reduce using rule 81 (expression -> assignment .)
    COMMA           reduce using rule 81 (expression -> assignment .)
    BOOLEAN         reduce using rule 81 (expression -> assignment .)
    STRING          reduce using rule 81 (expression -> assignment .)
    IDENTIFIER      reduce using rule 81 (expression -> assignment .)
    LETTER          reduce using rule 81 (expression -> assignment .)
    BOOL            reduce using rule 81 (expression -> assignment .)
    INT             reduce using rule 81 (expression -> assignment .)
    FLOAT           reduce using rule 81 (expression -> assignment .)
    CHAR            reduce using rule 81 (expression -> assignment .)
    VOID            reduce using rule 81 (expression -> assignment .)
    POUND           reduce using rule 81 (expression -> assignment .)
    USING           reduce using rule 81 (expression -> assignment .)
    INTEGER         reduce using rule 81 (expression -> assignment .)
    FLOATINGPOINT   reduce using rule 81 (expression -> assignment .)


state 8

    (7) external-declaration -> array_usage . SEMICOLON
    (82) expression -> array_usage .

    SEMICOLON       shift and go to state 50
    PLUS            reduce using rule 82 (expression -> array_usage .)
    MINUS           reduce using rule 82 (expression -> array_usage .)
    TIMES           reduce using rule 82 (expression -> array_usage .)
    DIVIDE          reduce using rule 82 (expression -> array_usage .)
    MODULUS         reduce using rule 82 (expression -> array_usage .)
    ISEQUAL         reduce using rule 82 (expression -> array_usage .)
    NOT             reduce using rule 82 (expression -> array_usage .)
    LESS            reduce using rule 82 (expression -> array_usage .)
    GREATER         reduce using rule 82 (expression -> array_usage .)
    AND             reduce using rule 82 (expression -> array_usage .)
    OR              reduce using rule 82 (expression -> array_usage .)
    $end            reduce using rule 82 (expression -> array_usage .)


state 9

    (9) external-declaration -> macro_definition .

    BOOLEAN         reduce using rule 9 (external-declaration -> macro_definition .)
    STRING          reduce using rule 9 (external-declaration -> macro_definition .)
    IDENTIFIER      reduce using rule 9 (external-declaration -> macro_definition .)
    LETTER          reduce using rule 9 (external-declaration -> macro_definition .)
    BOOL            reduce using rule 9 (external-declaration -> macro_definition .)
    INT             reduce using rule 9 (external-declaration -> macro_definition .)
    FLOAT           reduce using rule 9 (external-declaration -> macro_definition .)
    CHAR            reduce using rule 9 (external-declaration -> macro_definition .)
    VOID            reduce using rule 9 (external-declaration -> macro_definition .)
    POUND           reduce using rule 9 (external-declaration -> macro_definition .)
    USING           reduce using rule 9 (external-declaration -> macro_definition .)
    INTEGER         reduce using rule 9 (external-declaration -> macro_definition .)
    FLOATINGPOINT   reduce using rule 9 (external-declaration -> macro_definition .)
    NOT             reduce using rule 9 (external-declaration -> macro_definition .)
    $end            reduce using rule 9 (external-declaration -> macro_definition .)


state 10

    (10) external-declaration -> file_inclusion .

    BOOLEAN         reduce using rule 10 (external-declaration -> file_inclusion .)
    STRING          reduce using rule 10 (external-declaration -> file_inclusion .)
    IDENTIFIER      reduce using rule 10 (external-declaration -> file_inclusion .)
    LETTER          reduce using rule 10 (external-declaration -> file_inclusion .)
    BOOL            reduce using rule 10 (external-declaration -> file_inclusion .)
    INT             reduce using rule 10 (external-declaration -> file_inclusion .)
    FLOAT           reduce using rule 10 (external-declaration -> file_inclusion .)
    CHAR            reduce using rule 10 (external-declaration -> file_inclusion .)
    VOID            reduce using rule 10 (external-declaration -> file_inclusion .)
    POUND           reduce using rule 10 (external-declaration -> file_inclusion .)
    USING           reduce using rule 10 (external-declaration -> file_inclusion .)
    INTEGER         reduce using rule 10 (external-declaration -> file_inclusion .)
    FLOATINGPOINT   reduce using rule 10 (external-declaration -> file_inclusion .)
    NOT             reduce using rule 10 (external-declaration -> file_inclusion .)
    $end            reduce using rule 10 (external-declaration -> file_inclusion .)


state 11

    (11) external-declaration -> namespace_statement .

    BOOLEAN         reduce using rule 11 (external-declaration -> namespace_statement .)
    STRING          reduce using rule 11 (external-declaration -> namespace_statement .)
    IDENTIFIER      reduce using rule 11 (external-declaration -> namespace_statement .)
    LETTER          reduce using rule 11 (external-declaration -> namespace_statement .)
    BOOL            reduce using rule 11 (external-declaration -> namespace_statement .)
    INT             reduce using rule 11 (external-declaration -> namespace_statement .)
    FLOAT           reduce using rule 11 (external-declaration -> namespace_statement .)
    CHAR            reduce using rule 11 (external-declaration -> namespace_statement .)
    VOID            reduce using rule 11 (external-declaration -> namespace_statement .)
    POUND           reduce using rule 11 (external-declaration -> namespace_statement .)
    USING           reduce using rule 11 (external-declaration -> namespace_statement .)
    INTEGER         reduce using rule 11 (external-declaration -> namespace_statement .)
    FLOATINGPOINT   reduce using rule 11 (external-declaration -> namespace_statement .)
    NOT             reduce using rule 11 (external-declaration -> namespace_statement .)
    $end            reduce using rule 11 (external-declaration -> namespace_statement .)


state 12

    (76) expression -> BOOLEAN .

    PLUS            reduce using rule 76 (expression -> BOOLEAN .)
    MINUS           reduce using rule 76 (expression -> BOOLEAN .)
    TIMES           reduce using rule 76 (expression -> BOOLEAN .)
    DIVIDE          reduce using rule 76 (expression -> BOOLEAN .)
    MODULUS         reduce using rule 76 (expression -> BOOLEAN .)
    ISEQUAL         reduce using rule 76 (expression -> BOOLEAN .)
    NOT             reduce using rule 76 (expression -> BOOLEAN .)
    LESS            reduce using rule 76 (expression -> BOOLEAN .)
    GREATER         reduce using rule 76 (expression -> BOOLEAN .)
    AND             reduce using rule 76 (expression -> BOOLEAN .)
    OR              reduce using rule 76 (expression -> BOOLEAN .)
    $end            reduce using rule 76 (expression -> BOOLEAN .)
    RBRACKET        reduce using rule 76 (expression -> BOOLEAN .)
    SEMICOLON       reduce using rule 76 (expression -> BOOLEAN .)
    RPAREN          reduce using rule 76 (expression -> BOOLEAN .)
    COMMA           reduce using rule 76 (expression -> BOOLEAN .)
    BOOLEAN         reduce using rule 76 (expression -> BOOLEAN .)
    STRING          reduce using rule 76 (expression -> BOOLEAN .)
    IDENTIFIER      reduce using rule 76 (expression -> BOOLEAN .)
    LETTER          reduce using rule 76 (expression -> BOOLEAN .)
    BOOL            reduce using rule 76 (expression -> BOOLEAN .)
    INT             reduce using rule 76 (expression -> BOOLEAN .)
    FLOAT           reduce using rule 76 (expression -> BOOLEAN .)
    CHAR            reduce using rule 76 (expression -> BOOLEAN .)
    VOID            reduce using rule 76 (expression -> BOOLEAN .)
    POUND           reduce using rule 76 (expression -> BOOLEAN .)
    USING           reduce using rule 76 (expression -> BOOLEAN .)
    INTEGER         reduce using rule 76 (expression -> BOOLEAN .)
    FLOATINGPOINT   reduce using rule 76 (expression -> BOOLEAN .)


state 13

    (77) expression -> number .

    PLUS            reduce using rule 77 (expression -> number .)
    MINUS           reduce using rule 77 (expression -> number .)
    TIMES           reduce using rule 77 (expression -> number .)
    DIVIDE          reduce using rule 77 (expression -> number .)
    MODULUS         reduce using rule 77 (expression -> number .)
    ISEQUAL         reduce using rule 77 (expression -> number .)
    NOT             reduce using rule 77 (expression -> number .)
    LESS            reduce using rule 77 (expression -> number .)
    GREATER         reduce using rule 77 (expression -> number .)
    AND             reduce using rule 77 (expression -> number .)
    OR              reduce using rule 77 (expression -> number .)
    $end            reduce using rule 77 (expression -> number .)
    RBRACKET        reduce using rule 77 (expression -> number .)
    SEMICOLON       reduce using rule 77 (expression -> number .)
    RPAREN          reduce using rule 77 (expression -> number .)
    COMMA           reduce using rule 77 (expression -> number .)
    BOOLEAN         reduce using rule 77 (expression -> number .)
    STRING          reduce using rule 77 (expression -> number .)
    IDENTIFIER      reduce using rule 77 (expression -> number .)
    LETTER          reduce using rule 77 (expression -> number .)
    BOOL            reduce using rule 77 (expression -> number .)
    INT             reduce using rule 77 (expression -> number .)
    FLOAT           reduce using rule 77 (expression -> number .)
    CHAR            reduce using rule 77 (expression -> number .)
    VOID            reduce using rule 77 (expression -> number .)
    POUND           reduce using rule 77 (expression -> number .)
    USING           reduce using rule 77 (expression -> number .)
    INTEGER         reduce using rule 77 (expression -> number .)
    FLOATINGPOINT   reduce using rule 77 (expression -> number .)


state 14

    (78) expression -> STRING .

    PLUS            reduce using rule 78 (expression -> STRING .)
    MINUS           reduce using rule 78 (expression -> STRING .)
    TIMES           reduce using rule 78 (expression -> STRING .)
    DIVIDE          reduce using rule 78 (expression -> STRING .)
    MODULUS         reduce using rule 78 (expression -> STRING .)
    ISEQUAL         reduce using rule 78 (expression -> STRING .)
    NOT             reduce using rule 78 (expression -> STRING .)
    LESS            reduce using rule 78 (expression -> STRING .)
    GREATER         reduce using rule 78 (expression -> STRING .)
    AND             reduce using rule 78 (expression -> STRING .)
    OR              reduce using rule 78 (expression -> STRING .)
    $end            reduce using rule 78 (expression -> STRING .)
    RBRACKET        reduce using rule 78 (expression -> STRING .)
    SEMICOLON       reduce using rule 78 (expression -> STRING .)
    RPAREN          reduce using rule 78 (expression -> STRING .)
    COMMA           reduce using rule 78 (expression -> STRING .)
    BOOLEAN         reduce using rule 78 (expression -> STRING .)
    STRING          reduce using rule 78 (expression -> STRING .)
    IDENTIFIER      reduce using rule 78 (expression -> STRING .)
    LETTER          reduce using rule 78 (expression -> STRING .)
    BOOL            reduce using rule 78 (expression -> STRING .)
    INT             reduce using rule 78 (expression -> STRING .)
    FLOAT           reduce using rule 78 (expression -> STRING .)
    CHAR            reduce using rule 78 (expression -> STRING .)
    VOID            reduce using rule 78 (expression -> STRING .)
    POUND           reduce using rule 78 (expression -> STRING .)
    USING           reduce using rule 78 (expression -> STRING .)
    INTEGER         reduce using rule 78 (expression -> STRING .)
    FLOATINGPOINT   reduce using rule 78 (expression -> STRING .)


state 15

    (80) expression -> LETTER .

    PLUS            reduce using rule 80 (expression -> LETTER .)
    MINUS           reduce using rule 80 (expression -> LETTER .)
    TIMES           reduce using rule 80 (expression -> LETTER .)
    DIVIDE          reduce using rule 80 (expression -> LETTER .)
    MODULUS         reduce using rule 80 (expression -> LETTER .)
    ISEQUAL         reduce using rule 80 (expression -> LETTER .)
    NOT             reduce using rule 80 (expression -> LETTER .)
    LESS            reduce using rule 80 (expression -> LETTER .)
    GREATER         reduce using rule 80 (expression -> LETTER .)
    AND             reduce using rule 80 (expression -> LETTER .)
    OR              reduce using rule 80 (expression -> LETTER .)
    $end            reduce using rule 80 (expression -> LETTER .)
    RBRACKET        reduce using rule 80 (expression -> LETTER .)
    SEMICOLON       reduce using rule 80 (expression -> LETTER .)
    RPAREN          reduce using rule 80 (expression -> LETTER .)
    COMMA           reduce using rule 80 (expression -> LETTER .)
    BOOLEAN         reduce using rule 80 (expression -> LETTER .)
    STRING          reduce using rule 80 (expression -> LETTER .)
    IDENTIFIER      reduce using rule 80 (expression -> LETTER .)
    LETTER          reduce using rule 80 (expression -> LETTER .)
    BOOL            reduce using rule 80 (expression -> LETTER .)
    INT             reduce using rule 80 (expression -> LETTER .)
    FLOAT           reduce using rule 80 (expression -> LETTER .)
    CHAR            reduce using rule 80 (expression -> LETTER .)
    VOID            reduce using rule 80 (expression -> LETTER .)
    POUND           reduce using rule 80 (expression -> LETTER .)
    USING           reduce using rule 80 (expression -> LETTER .)
    INTEGER         reduce using rule 80 (expression -> LETTER .)
    FLOATINGPOINT   reduce using rule 80 (expression -> LETTER .)


state 16

    (83) expression -> function_call .

    PLUS            reduce using rule 83 (expression -> function_call .)
    MINUS           reduce using rule 83 (expression -> function_call .)
    TIMES           reduce using rule 83 (expression -> function_call .)
    DIVIDE          reduce using rule 83 (expression -> function_call .)
    MODULUS         reduce using rule 83 (expression -> function_call .)
    ISEQUAL         reduce using rule 83 (expression -> function_call .)
    NOT             reduce using rule 83 (expression -> function_call .)
    LESS            reduce using rule 83 (expression -> function_call .)
    GREATER         reduce using rule 83 (expression -> function_call .)
    AND             reduce using rule 83 (expression -> function_call .)
    OR              reduce using rule 83 (expression -> function_call .)
    $end            reduce using rule 83 (expression -> function_call .)
    RBRACKET        reduce using rule 83 (expression -> function_call .)
    SEMICOLON       reduce using rule 83 (expression -> function_call .)
    RPAREN          reduce using rule 83 (expression -> function_call .)
    COMMA           reduce using rule 83 (expression -> function_call .)
    BOOLEAN         reduce using rule 83 (expression -> function_call .)
    STRING          reduce using rule 83 (expression -> function_call .)
    IDENTIFIER      reduce using rule 83 (expression -> function_call .)
    LETTER          reduce using rule 83 (expression -> function_call .)
    BOOL            reduce using rule 83 (expression -> function_call .)
    INT             reduce using rule 83 (expression -> function_call .)
    FLOAT           reduce using rule 83 (expression -> function_call .)
    CHAR            reduce using rule 83 (expression -> function_call .)
    VOID            reduce using rule 83 (expression -> function_call .)
    POUND           reduce using rule 83 (expression -> function_call .)
    USING           reduce using rule 83 (expression -> function_call .)
    INTEGER         reduce using rule 83 (expression -> function_call .)
    FLOATINGPOINT   reduce using rule 83 (expression -> function_call .)


state 17

    (84) expression -> math_expression .

    PLUS            reduce using rule 84 (expression -> math_expression .)
    MINUS           reduce using rule 84 (expression -> math_expression .)
    TIMES           reduce using rule 84 (expression -> math_expression .)
    DIVIDE          reduce using rule 84 (expression -> math_expression .)
    MODULUS         reduce using rule 84 (expression -> math_expression .)
    ISEQUAL         reduce using rule 84 (expression -> math_expression .)
    NOT             reduce using rule 84 (expression -> math_expression .)
    LESS            reduce using rule 84 (expression -> math_expression .)
    GREATER         reduce using rule 84 (expression -> math_expression .)
    AND             reduce using rule 84 (expression -> math_expression .)
    OR              reduce using rule 84 (expression -> math_expression .)
    $end            reduce using rule 84 (expression -> math_expression .)
    RBRACKET        reduce using rule 84 (expression -> math_expression .)
    SEMICOLON       reduce using rule 84 (expression -> math_expression .)
    RPAREN          reduce using rule 84 (expression -> math_expression .)
    COMMA           reduce using rule 84 (expression -> math_expression .)
    BOOLEAN         reduce using rule 84 (expression -> math_expression .)
    STRING          reduce using rule 84 (expression -> math_expression .)
    IDENTIFIER      reduce using rule 84 (expression -> math_expression .)
    LETTER          reduce using rule 84 (expression -> math_expression .)
    BOOL            reduce using rule 84 (expression -> math_expression .)
    INT             reduce using rule 84 (expression -> math_expression .)
    FLOAT           reduce using rule 84 (expression -> math_expression .)
    CHAR            reduce using rule 84 (expression -> math_expression .)
    VOID            reduce using rule 84 (expression -> math_expression .)
    POUND           reduce using rule 84 (expression -> math_expression .)
    USING           reduce using rule 84 (expression -> math_expression .)
    INTEGER         reduce using rule 84 (expression -> math_expression .)
    FLOATINGPOINT   reduce using rule 84 (expression -> math_expression .)


state 18

    (85) expression -> conditional_expression .

    PLUS            reduce using rule 85 (expression -> conditional_expression .)
    MINUS           reduce using rule 85 (expression -> conditional_expression .)
    TIMES           reduce using rule 85 (expression -> conditional_expression .)
    DIVIDE          reduce using rule 85 (expression -> conditional_expression .)
    MODULUS         reduce using rule 85 (expression -> conditional_expression .)
    ISEQUAL         reduce using rule 85 (expression -> conditional_expression .)
    NOT             reduce using rule 85 (expression -> conditional_expression .)
    LESS            reduce using rule 85 (expression -> conditional_expression .)
    GREATER         reduce using rule 85 (expression -> conditional_expression .)
    AND             reduce using rule 85 (expression -> conditional_expression .)
    OR              reduce using rule 85 (expression -> conditional_expression .)
    $end            reduce using rule 85 (expression -> conditional_expression .)
    RBRACKET        reduce using rule 85 (expression -> conditional_expression .)
    SEMICOLON       reduce using rule 85 (expression -> conditional_expression .)
    RPAREN          reduce using rule 85 (expression -> conditional_expression .)
    COMMA           reduce using rule 85 (expression -> conditional_expression .)
    BOOLEAN         reduce using rule 85 (expression -> conditional_expression .)
    STRING          reduce using rule 85 (expression -> conditional_expression .)
    IDENTIFIER      reduce using rule 85 (expression -> conditional_expression .)
    LETTER          reduce using rule 85 (expression -> conditional_expression .)
    BOOL            reduce using rule 85 (expression -> conditional_expression .)
    INT             reduce using rule 85 (expression -> conditional_expression .)
    FLOAT           reduce using rule 85 (expression -> conditional_expression .)
    CHAR            reduce using rule 85 (expression -> conditional_expression .)
    VOID            reduce using rule 85 (expression -> conditional_expression .)
    POUND           reduce using rule 85 (expression -> conditional_expression .)
    USING           reduce using rule 85 (expression -> conditional_expression .)
    INTEGER         reduce using rule 85 (expression -> conditional_expression .)
    FLOATINGPOINT   reduce using rule 85 (expression -> conditional_expression .)


state 19

    (86) type -> BOOL .

    IDENTIFIER      reduce using rule 86 (type -> BOOL .)


state 20

    (87) type -> INT .

    IDENTIFIER      reduce using rule 87 (type -> INT .)


state 21

    (88) type -> FLOAT .

    IDENTIFIER      reduce using rule 88 (type -> FLOAT .)


state 22

    (89) type -> CHAR .

    IDENTIFIER      reduce using rule 89 (type -> CHAR .)


state 23

    (90) type -> VOID .

    IDENTIFIER      reduce using rule 90 (type -> VOID .)


state 24

    (98) macro_definition -> POUND . DEFINE IDENTIFIER assignment
    (99) file_inclusion -> POUND . INCLUDE LESS HEADER GREATER
    (100) file_inclusion -> POUND . INCLUDE QUOTE HEADER QUOTE
    (101) file_inclusion -> POUND . INCLUDE LESS IDENTIFIER GREATER
    (102) file_inclusion -> POUND . INCLUDE QUOTE IDENTIFIER QUOTE

    DEFINE          shift and go to state 51
    INCLUDE         shift and go to state 52


state 25

    (49) namespace_statement -> USING . NAMESPACE IDENTIFIER SEMICOLON

    NAMESPACE       shift and go to state 53


state 26

    (30) number -> INTEGER .

    PLUS            reduce using rule 30 (number -> INTEGER .)
    MINUS           reduce using rule 30 (number -> INTEGER .)
    TIMES           reduce using rule 30 (number -> INTEGER .)
    DIVIDE          reduce using rule 30 (number -> INTEGER .)
    MODULUS         reduce using rule 30 (number -> INTEGER .)
    ISEQUAL         reduce using rule 30 (number -> INTEGER .)
    NOT             reduce using rule 30 (number -> INTEGER .)
    LESS            reduce using rule 30 (number -> INTEGER .)
    GREATER         reduce using rule 30 (number -> INTEGER .)
    AND             reduce using rule 30 (number -> INTEGER .)
    OR              reduce using rule 30 (number -> INTEGER .)
    $end            reduce using rule 30 (number -> INTEGER .)
    RBRACKET        reduce using rule 30 (number -> INTEGER .)
    SEMICOLON       reduce using rule 30 (number -> INTEGER .)
    RPAREN          reduce using rule 30 (number -> INTEGER .)
    COMMA           reduce using rule 30 (number -> INTEGER .)
    BOOLEAN         reduce using rule 30 (number -> INTEGER .)
    STRING          reduce using rule 30 (number -> INTEGER .)
    IDENTIFIER      reduce using rule 30 (number -> INTEGER .)
    LETTER          reduce using rule 30 (number -> INTEGER .)
    BOOL            reduce using rule 30 (number -> INTEGER .)
    INT             reduce using rule 30 (number -> INTEGER .)
    FLOAT           reduce using rule 30 (number -> INTEGER .)
    CHAR            reduce using rule 30 (number -> INTEGER .)
    VOID            reduce using rule 30 (number -> INTEGER .)
    POUND           reduce using rule 30 (number -> INTEGER .)
    USING           reduce using rule 30 (number -> INTEGER .)
    INTEGER         reduce using rule 30 (number -> INTEGER .)
    FLOATINGPOINT   reduce using rule 30 (number -> INTEGER .)


state 27

    (31) number -> FLOATINGPOINT .

    PLUS            reduce using rule 31 (number -> FLOATINGPOINT .)
    MINUS           reduce using rule 31 (number -> FLOATINGPOINT .)
    TIMES           reduce using rule 31 (number -> FLOATINGPOINT .)
    DIVIDE          reduce using rule 31 (number -> FLOATINGPOINT .)
    MODULUS         reduce using rule 31 (number -> FLOATINGPOINT .)
    ISEQUAL         reduce using rule 31 (number -> FLOATINGPOINT .)
    NOT             reduce using rule 31 (number -> FLOATINGPOINT .)
    LESS            reduce using rule 31 (number -> FLOATINGPOINT .)
    GREATER         reduce using rule 31 (number -> FLOATINGPOINT .)
    AND             reduce using rule 31 (number -> FLOATINGPOINT .)
    OR              reduce using rule 31 (number -> FLOATINGPOINT .)
    $end            reduce using rule 31 (number -> FLOATINGPOINT .)
    RBRACKET        reduce using rule 31 (number -> FLOATINGPOINT .)
    SEMICOLON       reduce using rule 31 (number -> FLOATINGPOINT .)
    RPAREN          reduce using rule 31 (number -> FLOATINGPOINT .)
    COMMA           reduce using rule 31 (number -> FLOATINGPOINT .)
    BOOLEAN         reduce using rule 31 (number -> FLOATINGPOINT .)
    STRING          reduce using rule 31 (number -> FLOATINGPOINT .)
    IDENTIFIER      reduce using rule 31 (number -> FLOATINGPOINT .)
    LETTER          reduce using rule 31 (number -> FLOATINGPOINT .)
    BOOL            reduce using rule 31 (number -> FLOATINGPOINT .)
    INT             reduce using rule 31 (number -> FLOATINGPOINT .)
    FLOAT           reduce using rule 31 (number -> FLOATINGPOINT .)
    CHAR            reduce using rule 31 (number -> FLOATINGPOINT .)
    VOID            reduce using rule 31 (number -> FLOATINGPOINT .)
    POUND           reduce using rule 31 (number -> FLOATINGPOINT .)
    USING           reduce using rule 31 (number -> FLOATINGPOINT .)
    INTEGER         reduce using rule 31 (number -> FLOATINGPOINT .)
    FLOATINGPOINT   reduce using rule 31 (number -> FLOATINGPOINT .)


state 28

    (75) conditional_expression -> NOT . expression
    (76) expression -> . BOOLEAN
    (77) expression -> . number
    (78) expression -> . STRING
    (79) expression -> . IDENTIFIER
    (80) expression -> . LETTER
    (81) expression -> . assignment
    (82) expression -> . array_usage
    (83) expression -> . function_call
    (84) expression -> . math_expression
    (85) expression -> . conditional_expression
    (30) number -> . INTEGER
    (31) number -> . FLOATINGPOINT
    (19) assignment -> . IDENTIFIER EQUALS expression
    (20) assignment -> . IDENTIFIER PLUS EQUALS expression
    (21) assignment -> . IDENTIFIER MINUS EQUALS expression
    (32) array_usage -> . IDENTIFIER LBRACKET elements RBRACKET
    (33) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (25) function_call -> . IDENTIFIER LPAREN RPAREN
    (26) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (27) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (91) math_expression -> . expression PLUS expression
    (92) math_expression -> . expression MINUS expression
    (93) math_expression -> . expression TIMES expression
    (94) math_expression -> . expression DIVIDE expression
    (95) math_expression -> . expression MODULUS expression
    (96) math_expression -> . expression PLUS PLUS
    (97) math_expression -> . expression MINUS MINUS
    (67) conditional_expression -> . expression ISEQUAL expression
    (68) conditional_expression -> . expression NOT EQUALS expression
    (69) conditional_expression -> . expression LESS expression
    (70) conditional_expression -> . expression LESS EQUALS expression
    (71) conditional_expression -> . expression GREATER expression
    (72) conditional_expression -> . expression GREATER EQUALS expression
    (73) conditional_expression -> . expression AND expression
    (74) conditional_expression -> . expression OR expression
    (75) conditional_expression -> . NOT expression

    BOOLEAN         shift and go to state 12
    STRING          shift and go to state 14
    IDENTIFIER      shift and go to state 55
    LETTER          shift and go to state 15
    INTEGER         shift and go to state 26
    FLOATINGPOINT   shift and go to state 27
    NOT             shift and go to state 28

    expression                     shift and go to state 54
    number                         shift and go to state 13
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 56
    function_call                  shift and go to state 16
    math_expression                shift and go to state 17
    conditional_expression         shift and go to state 18

state 29

    (2) program -> function program .

    $end            reduce using rule 2 (program -> function program .)


state 30

    (3) program -> external-declaration program .

    $end            reduce using rule 3 (program -> external-declaration program .)


state 31

    (91) math_expression -> expression PLUS . expression
    (96) math_expression -> expression PLUS . PLUS
    (76) expression -> . BOOLEAN
    (77) expression -> . number
    (78) expression -> . STRING
    (79) expression -> . IDENTIFIER
    (80) expression -> . LETTER
    (81) expression -> . assignment
    (82) expression -> . array_usage
    (83) expression -> . function_call
    (84) expression -> . math_expression
    (85) expression -> . conditional_expression
    (30) number -> . INTEGER
    (31) number -> . FLOATINGPOINT
    (19) assignment -> . IDENTIFIER EQUALS expression
    (20) assignment -> . IDENTIFIER PLUS EQUALS expression
    (21) assignment -> . IDENTIFIER MINUS EQUALS expression
    (32) array_usage -> . IDENTIFIER LBRACKET elements RBRACKET
    (33) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (25) function_call -> . IDENTIFIER LPAREN RPAREN
    (26) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (27) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (91) math_expression -> . expression PLUS expression
    (92) math_expression -> . expression MINUS expression
    (93) math_expression -> . expression TIMES expression
    (94) math_expression -> . expression DIVIDE expression
    (95) math_expression -> . expression MODULUS expression
    (96) math_expression -> . expression PLUS PLUS
    (97) math_expression -> . expression MINUS MINUS
    (67) conditional_expression -> . expression ISEQUAL expression
    (68) conditional_expression -> . expression NOT EQUALS expression
    (69) conditional_expression -> . expression LESS expression
    (70) conditional_expression -> . expression LESS EQUALS expression
    (71) conditional_expression -> . expression GREATER expression
    (72) conditional_expression -> . expression GREATER EQUALS expression
    (73) conditional_expression -> . expression AND expression
    (74) conditional_expression -> . expression OR expression
    (75) conditional_expression -> . NOT expression

    PLUS            shift and go to state 58
    BOOLEAN         shift and go to state 12
    STRING          shift and go to state 14
    IDENTIFIER      shift and go to state 55
    LETTER          shift and go to state 15
    INTEGER         shift and go to state 26
    FLOATINGPOINT   shift and go to state 27
    NOT             shift and go to state 28

    expression                     shift and go to state 57
    number                         shift and go to state 13
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 56
    function_call                  shift and go to state 16
    math_expression                shift and go to state 17
    conditional_expression         shift and go to state 18

state 32

    (92) math_expression -> expression MINUS . expression
    (97) math_expression -> expression MINUS . MINUS
    (76) expression -> . BOOLEAN
    (77) expression -> . number
    (78) expression -> . STRING
    (79) expression -> . IDENTIFIER
    (80) expression -> . LETTER
    (81) expression -> . assignment
    (82) expression -> . array_usage
    (83) expression -> . function_call
    (84) expression -> . math_expression
    (85) expression -> . conditional_expression
    (30) number -> . INTEGER
    (31) number -> . FLOATINGPOINT
    (19) assignment -> . IDENTIFIER EQUALS expression
    (20) assignment -> . IDENTIFIER PLUS EQUALS expression
    (21) assignment -> . IDENTIFIER MINUS EQUALS expression
    (32) array_usage -> . IDENTIFIER LBRACKET elements RBRACKET
    (33) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (25) function_call -> . IDENTIFIER LPAREN RPAREN
    (26) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (27) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (91) math_expression -> . expression PLUS expression
    (92) math_expression -> . expression MINUS expression
    (93) math_expression -> . expression TIMES expression
    (94) math_expression -> . expression DIVIDE expression
    (95) math_expression -> . expression MODULUS expression
    (96) math_expression -> . expression PLUS PLUS
    (97) math_expression -> . expression MINUS MINUS
    (67) conditional_expression -> . expression ISEQUAL expression
    (68) conditional_expression -> . expression NOT EQUALS expression
    (69) conditional_expression -> . expression LESS expression
    (70) conditional_expression -> . expression LESS EQUALS expression
    (71) conditional_expression -> . expression GREATER expression
    (72) conditional_expression -> . expression GREATER EQUALS expression
    (73) conditional_expression -> . expression AND expression
    (74) conditional_expression -> . expression OR expression
    (75) conditional_expression -> . NOT expression

    MINUS           shift and go to state 60
    BOOLEAN         shift and go to state 12
    STRING          shift and go to state 14
    IDENTIFIER      shift and go to state 55
    LETTER          shift and go to state 15
    INTEGER         shift and go to state 26
    FLOATINGPOINT   shift and go to state 27
    NOT             shift and go to state 28

    expression                     shift and go to state 59
    number                         shift and go to state 13
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 56
    function_call                  shift and go to state 16
    math_expression                shift and go to state 17
    conditional_expression         shift and go to state 18

state 33

    (93) math_expression -> expression TIMES . expression
    (76) expression -> . BOOLEAN
    (77) expression -> . number
    (78) expression -> . STRING
    (79) expression -> . IDENTIFIER
    (80) expression -> . LETTER
    (81) expression -> . assignment
    (82) expression -> . array_usage
    (83) expression -> . function_call
    (84) expression -> . math_expression
    (85) expression -> . conditional_expression
    (30) number -> . INTEGER
    (31) number -> . FLOATINGPOINT
    (19) assignment -> . IDENTIFIER EQUALS expression
    (20) assignment -> . IDENTIFIER PLUS EQUALS expression
    (21) assignment -> . IDENTIFIER MINUS EQUALS expression
    (32) array_usage -> . IDENTIFIER LBRACKET elements RBRACKET
    (33) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (25) function_call -> . IDENTIFIER LPAREN RPAREN
    (26) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (27) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (91) math_expression -> . expression PLUS expression
    (92) math_expression -> . expression MINUS expression
    (93) math_expression -> . expression TIMES expression
    (94) math_expression -> . expression DIVIDE expression
    (95) math_expression -> . expression MODULUS expression
    (96) math_expression -> . expression PLUS PLUS
    (97) math_expression -> . expression MINUS MINUS
    (67) conditional_expression -> . expression ISEQUAL expression
    (68) conditional_expression -> . expression NOT EQUALS expression
    (69) conditional_expression -> . expression LESS expression
    (70) conditional_expression -> . expression LESS EQUALS expression
    (71) conditional_expression -> . expression GREATER expression
    (72) conditional_expression -> . expression GREATER EQUALS expression
    (73) conditional_expression -> . expression AND expression
    (74) conditional_expression -> . expression OR expression
    (75) conditional_expression -> . NOT expression

    BOOLEAN         shift and go to state 12
    STRING          shift and go to state 14
    IDENTIFIER      shift and go to state 55
    LETTER          shift and go to state 15
    INTEGER         shift and go to state 26
    FLOATINGPOINT   shift and go to state 27
    NOT             shift and go to state 28

    expression                     shift and go to state 61
    number                         shift and go to state 13
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 56
    function_call                  shift and go to state 16
    math_expression                shift and go to state 17
    conditional_expression         shift and go to state 18

state 34

    (94) math_expression -> expression DIVIDE . expression
    (76) expression -> . BOOLEAN
    (77) expression -> . number
    (78) expression -> . STRING
    (79) expression -> . IDENTIFIER
    (80) expression -> . LETTER
    (81) expression -> . assignment
    (82) expression -> . array_usage
    (83) expression -> . function_call
    (84) expression -> . math_expression
    (85) expression -> . conditional_expression
    (30) number -> . INTEGER
    (31) number -> . FLOATINGPOINT
    (19) assignment -> . IDENTIFIER EQUALS expression
    (20) assignment -> . IDENTIFIER PLUS EQUALS expression
    (21) assignment -> . IDENTIFIER MINUS EQUALS expression
    (32) array_usage -> . IDENTIFIER LBRACKET elements RBRACKET
    (33) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (25) function_call -> . IDENTIFIER LPAREN RPAREN
    (26) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (27) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (91) math_expression -> . expression PLUS expression
    (92) math_expression -> . expression MINUS expression
    (93) math_expression -> . expression TIMES expression
    (94) math_expression -> . expression DIVIDE expression
    (95) math_expression -> . expression MODULUS expression
    (96) math_expression -> . expression PLUS PLUS
    (97) math_expression -> . expression MINUS MINUS
    (67) conditional_expression -> . expression ISEQUAL expression
    (68) conditional_expression -> . expression NOT EQUALS expression
    (69) conditional_expression -> . expression LESS expression
    (70) conditional_expression -> . expression LESS EQUALS expression
    (71) conditional_expression -> . expression GREATER expression
    (72) conditional_expression -> . expression GREATER EQUALS expression
    (73) conditional_expression -> . expression AND expression
    (74) conditional_expression -> . expression OR expression
    (75) conditional_expression -> . NOT expression

    BOOLEAN         shift and go to state 12
    STRING          shift and go to state 14
    IDENTIFIER      shift and go to state 55
    LETTER          shift and go to state 15
    INTEGER         shift and go to state 26
    FLOATINGPOINT   shift and go to state 27
    NOT             shift and go to state 28

    expression                     shift and go to state 62
    number                         shift and go to state 13
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 56
    function_call                  shift and go to state 16
    math_expression                shift and go to state 17
    conditional_expression         shift and go to state 18

state 35

    (95) math_expression -> expression MODULUS . expression
    (76) expression -> . BOOLEAN
    (77) expression -> . number
    (78) expression -> . STRING
    (79) expression -> . IDENTIFIER
    (80) expression -> . LETTER
    (81) expression -> . assignment
    (82) expression -> . array_usage
    (83) expression -> . function_call
    (84) expression -> . math_expression
    (85) expression -> . conditional_expression
    (30) number -> . INTEGER
    (31) number -> . FLOATINGPOINT
    (19) assignment -> . IDENTIFIER EQUALS expression
    (20) assignment -> . IDENTIFIER PLUS EQUALS expression
    (21) assignment -> . IDENTIFIER MINUS EQUALS expression
    (32) array_usage -> . IDENTIFIER LBRACKET elements RBRACKET
    (33) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (25) function_call -> . IDENTIFIER LPAREN RPAREN
    (26) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (27) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (91) math_expression -> . expression PLUS expression
    (92) math_expression -> . expression MINUS expression
    (93) math_expression -> . expression TIMES expression
    (94) math_expression -> . expression DIVIDE expression
    (95) math_expression -> . expression MODULUS expression
    (96) math_expression -> . expression PLUS PLUS
    (97) math_expression -> . expression MINUS MINUS
    (67) conditional_expression -> . expression ISEQUAL expression
    (68) conditional_expression -> . expression NOT EQUALS expression
    (69) conditional_expression -> . expression LESS expression
    (70) conditional_expression -> . expression LESS EQUALS expression
    (71) conditional_expression -> . expression GREATER expression
    (72) conditional_expression -> . expression GREATER EQUALS expression
    (73) conditional_expression -> . expression AND expression
    (74) conditional_expression -> . expression OR expression
    (75) conditional_expression -> . NOT expression

    BOOLEAN         shift and go to state 12
    STRING          shift and go to state 14
    IDENTIFIER      shift and go to state 55
    LETTER          shift and go to state 15
    INTEGER         shift and go to state 26
    FLOATINGPOINT   shift and go to state 27
    NOT             shift and go to state 28

    expression                     shift and go to state 63
    number                         shift and go to state 13
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 56
    function_call                  shift and go to state 16
    math_expression                shift and go to state 17
    conditional_expression         shift and go to state 18

state 36

    (67) conditional_expression -> expression ISEQUAL . expression
    (76) expression -> . BOOLEAN
    (77) expression -> . number
    (78) expression -> . STRING
    (79) expression -> . IDENTIFIER
    (80) expression -> . LETTER
    (81) expression -> . assignment
    (82) expression -> . array_usage
    (83) expression -> . function_call
    (84) expression -> . math_expression
    (85) expression -> . conditional_expression
    (30) number -> . INTEGER
    (31) number -> . FLOATINGPOINT
    (19) assignment -> . IDENTIFIER EQUALS expression
    (20) assignment -> . IDENTIFIER PLUS EQUALS expression
    (21) assignment -> . IDENTIFIER MINUS EQUALS expression
    (32) array_usage -> . IDENTIFIER LBRACKET elements RBRACKET
    (33) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (25) function_call -> . IDENTIFIER LPAREN RPAREN
    (26) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (27) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (91) math_expression -> . expression PLUS expression
    (92) math_expression -> . expression MINUS expression
    (93) math_expression -> . expression TIMES expression
    (94) math_expression -> . expression DIVIDE expression
    (95) math_expression -> . expression MODULUS expression
    (96) math_expression -> . expression PLUS PLUS
    (97) math_expression -> . expression MINUS MINUS
    (67) conditional_expression -> . expression ISEQUAL expression
    (68) conditional_expression -> . expression NOT EQUALS expression
    (69) conditional_expression -> . expression LESS expression
    (70) conditional_expression -> . expression LESS EQUALS expression
    (71) conditional_expression -> . expression GREATER expression
    (72) conditional_expression -> . expression GREATER EQUALS expression
    (73) conditional_expression -> . expression AND expression
    (74) conditional_expression -> . expression OR expression
    (75) conditional_expression -> . NOT expression

    BOOLEAN         shift and go to state 12
    STRING          shift and go to state 14
    IDENTIFIER      shift and go to state 55
    LETTER          shift and go to state 15
    INTEGER         shift and go to state 26
    FLOATINGPOINT   shift and go to state 27
    NOT             shift and go to state 28

    expression                     shift and go to state 64
    number                         shift and go to state 13
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 56
    function_call                  shift and go to state 16
    math_expression                shift and go to state 17
    conditional_expression         shift and go to state 18

state 37

    (68) conditional_expression -> expression NOT . EQUALS expression

    EQUALS          shift and go to state 65


state 38

    (69) conditional_expression -> expression LESS . expression
    (70) conditional_expression -> expression LESS . EQUALS expression
    (76) expression -> . BOOLEAN
    (77) expression -> . number
    (78) expression -> . STRING
    (79) expression -> . IDENTIFIER
    (80) expression -> . LETTER
    (81) expression -> . assignment
    (82) expression -> . array_usage
    (83) expression -> . function_call
    (84) expression -> . math_expression
    (85) expression -> . conditional_expression
    (30) number -> . INTEGER
    (31) number -> . FLOATINGPOINT
    (19) assignment -> . IDENTIFIER EQUALS expression
    (20) assignment -> . IDENTIFIER PLUS EQUALS expression
    (21) assignment -> . IDENTIFIER MINUS EQUALS expression
    (32) array_usage -> . IDENTIFIER LBRACKET elements RBRACKET
    (33) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (25) function_call -> . IDENTIFIER LPAREN RPAREN
    (26) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (27) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (91) math_expression -> . expression PLUS expression
    (92) math_expression -> . expression MINUS expression
    (93) math_expression -> . expression TIMES expression
    (94) math_expression -> . expression DIVIDE expression
    (95) math_expression -> . expression MODULUS expression
    (96) math_expression -> . expression PLUS PLUS
    (97) math_expression -> . expression MINUS MINUS
    (67) conditional_expression -> . expression ISEQUAL expression
    (68) conditional_expression -> . expression NOT EQUALS expression
    (69) conditional_expression -> . expression LESS expression
    (70) conditional_expression -> . expression LESS EQUALS expression
    (71) conditional_expression -> . expression GREATER expression
    (72) conditional_expression -> . expression GREATER EQUALS expression
    (73) conditional_expression -> . expression AND expression
    (74) conditional_expression -> . expression OR expression
    (75) conditional_expression -> . NOT expression

    EQUALS          shift and go to state 67
    BOOLEAN         shift and go to state 12
    STRING          shift and go to state 14
    IDENTIFIER      shift and go to state 55
    LETTER          shift and go to state 15
    INTEGER         shift and go to state 26
    FLOATINGPOINT   shift and go to state 27
    NOT             shift and go to state 28

    expression                     shift and go to state 66
    number                         shift and go to state 13
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 56
    function_call                  shift and go to state 16
    math_expression                shift and go to state 17
    conditional_expression         shift and go to state 18

state 39

    (71) conditional_expression -> expression GREATER . expression
    (72) conditional_expression -> expression GREATER . EQUALS expression
    (76) expression -> . BOOLEAN
    (77) expression -> . number
    (78) expression -> . STRING
    (79) expression -> . IDENTIFIER
    (80) expression -> . LETTER
    (81) expression -> . assignment
    (82) expression -> . array_usage
    (83) expression -> . function_call
    (84) expression -> . math_expression
    (85) expression -> . conditional_expression
    (30) number -> . INTEGER
    (31) number -> . FLOATINGPOINT
    (19) assignment -> . IDENTIFIER EQUALS expression
    (20) assignment -> . IDENTIFIER PLUS EQUALS expression
    (21) assignment -> . IDENTIFIER MINUS EQUALS expression
    (32) array_usage -> . IDENTIFIER LBRACKET elements RBRACKET
    (33) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (25) function_call -> . IDENTIFIER LPAREN RPAREN
    (26) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (27) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (91) math_expression -> . expression PLUS expression
    (92) math_expression -> . expression MINUS expression
    (93) math_expression -> . expression TIMES expression
    (94) math_expression -> . expression DIVIDE expression
    (95) math_expression -> . expression MODULUS expression
    (96) math_expression -> . expression PLUS PLUS
    (97) math_expression -> . expression MINUS MINUS
    (67) conditional_expression -> . expression ISEQUAL expression
    (68) conditional_expression -> . expression NOT EQUALS expression
    (69) conditional_expression -> . expression LESS expression
    (70) conditional_expression -> . expression LESS EQUALS expression
    (71) conditional_expression -> . expression GREATER expression
    (72) conditional_expression -> . expression GREATER EQUALS expression
    (73) conditional_expression -> . expression AND expression
    (74) conditional_expression -> . expression OR expression
    (75) conditional_expression -> . NOT expression

    EQUALS          shift and go to state 69
    BOOLEAN         shift and go to state 12
    STRING          shift and go to state 14
    IDENTIFIER      shift and go to state 55
    LETTER          shift and go to state 15
    INTEGER         shift and go to state 26
    FLOATINGPOINT   shift and go to state 27
    NOT             shift and go to state 28

    expression                     shift and go to state 68
    number                         shift and go to state 13
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 56
    function_call                  shift and go to state 16
    math_expression                shift and go to state 17
    conditional_expression         shift and go to state 18

state 40

    (73) conditional_expression -> expression AND . expression
    (76) expression -> . BOOLEAN
    (77) expression -> . number
    (78) expression -> . STRING
    (79) expression -> . IDENTIFIER
    (80) expression -> . LETTER
    (81) expression -> . assignment
    (82) expression -> . array_usage
    (83) expression -> . function_call
    (84) expression -> . math_expression
    (85) expression -> . conditional_expression
    (30) number -> . INTEGER
    (31) number -> . FLOATINGPOINT
    (19) assignment -> . IDENTIFIER EQUALS expression
    (20) assignment -> . IDENTIFIER PLUS EQUALS expression
    (21) assignment -> . IDENTIFIER MINUS EQUALS expression
    (32) array_usage -> . IDENTIFIER LBRACKET elements RBRACKET
    (33) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (25) function_call -> . IDENTIFIER LPAREN RPAREN
    (26) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (27) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (91) math_expression -> . expression PLUS expression
    (92) math_expression -> . expression MINUS expression
    (93) math_expression -> . expression TIMES expression
    (94) math_expression -> . expression DIVIDE expression
    (95) math_expression -> . expression MODULUS expression
    (96) math_expression -> . expression PLUS PLUS
    (97) math_expression -> . expression MINUS MINUS
    (67) conditional_expression -> . expression ISEQUAL expression
    (68) conditional_expression -> . expression NOT EQUALS expression
    (69) conditional_expression -> . expression LESS expression
    (70) conditional_expression -> . expression LESS EQUALS expression
    (71) conditional_expression -> . expression GREATER expression
    (72) conditional_expression -> . expression GREATER EQUALS expression
    (73) conditional_expression -> . expression AND expression
    (74) conditional_expression -> . expression OR expression
    (75) conditional_expression -> . NOT expression

    BOOLEAN         shift and go to state 12
    STRING          shift and go to state 14
    IDENTIFIER      shift and go to state 55
    LETTER          shift and go to state 15
    INTEGER         shift and go to state 26
    FLOATINGPOINT   shift and go to state 27
    NOT             shift and go to state 28

    expression                     shift and go to state 70
    number                         shift and go to state 13
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 56
    function_call                  shift and go to state 16
    math_expression                shift and go to state 17
    conditional_expression         shift and go to state 18

state 41

    (74) conditional_expression -> expression OR . expression
    (76) expression -> . BOOLEAN
    (77) expression -> . number
    (78) expression -> . STRING
    (79) expression -> . IDENTIFIER
    (80) expression -> . LETTER
    (81) expression -> . assignment
    (82) expression -> . array_usage
    (83) expression -> . function_call
    (84) expression -> . math_expression
    (85) expression -> . conditional_expression
    (30) number -> . INTEGER
    (31) number -> . FLOATINGPOINT
    (19) assignment -> . IDENTIFIER EQUALS expression
    (20) assignment -> . IDENTIFIER PLUS EQUALS expression
    (21) assignment -> . IDENTIFIER MINUS EQUALS expression
    (32) array_usage -> . IDENTIFIER LBRACKET elements RBRACKET
    (33) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (25) function_call -> . IDENTIFIER LPAREN RPAREN
    (26) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (27) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (91) math_expression -> . expression PLUS expression
    (92) math_expression -> . expression MINUS expression
    (93) math_expression -> . expression TIMES expression
    (94) math_expression -> . expression DIVIDE expression
    (95) math_expression -> . expression MODULUS expression
    (96) math_expression -> . expression PLUS PLUS
    (97) math_expression -> . expression MINUS MINUS
    (67) conditional_expression -> . expression ISEQUAL expression
    (68) conditional_expression -> . expression NOT EQUALS expression
    (69) conditional_expression -> . expression LESS expression
    (70) conditional_expression -> . expression LESS EQUALS expression
    (71) conditional_expression -> . expression GREATER expression
    (72) conditional_expression -> . expression GREATER EQUALS expression
    (73) conditional_expression -> . expression AND expression
    (74) conditional_expression -> . expression OR expression
    (75) conditional_expression -> . NOT expression

    BOOLEAN         shift and go to state 12
    STRING          shift and go to state 14
    IDENTIFIER      shift and go to state 55
    LETTER          shift and go to state 15
    INTEGER         shift and go to state 26
    FLOATINGPOINT   shift and go to state 27
    NOT             shift and go to state 28

    expression                     shift and go to state 71
    number                         shift and go to state 13
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 56
    function_call                  shift and go to state 16
    math_expression                shift and go to state 17
    conditional_expression         shift and go to state 18

state 42

    (34) function -> type IDENTIFIER . LPAREN argument_list_option RPAREN compound_statement
    (19) assignment -> IDENTIFIER . EQUALS expression
    (20) assignment -> IDENTIFIER . PLUS EQUALS expression
    (21) assignment -> IDENTIFIER . MINUS EQUALS expression
    (32) array_usage -> IDENTIFIER . LBRACKET elements RBRACKET
    (33) array_usage -> IDENTIFIER . LBRACKET expression RBRACKET

    LPAREN          shift and go to state 72
    EQUALS          shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    LBRACKET        shift and go to state 45


state 43

    (6) external-declaration -> type assignment . SEMICOLON

    SEMICOLON       shift and go to state 73


state 44

    (8) external-declaration -> type array_usage . SEMICOLON

    SEMICOLON       shift and go to state 74


state 45

    (32) array_usage -> IDENTIFIER LBRACKET . elements RBRACKET
    (33) array_usage -> IDENTIFIER LBRACKET . expression RBRACKET
    (28) elements -> . COMMA expression
    (29) elements -> . COMMA expression elements
    (76) expression -> . BOOLEAN
    (77) expression -> . number
    (78) expression -> . STRING
    (79) expression -> . IDENTIFIER
    (80) expression -> . LETTER
    (81) expression -> . assignment
    (82) expression -> . array_usage
    (83) expression -> . function_call
    (84) expression -> . math_expression
    (85) expression -> . conditional_expression
    (30) number -> . INTEGER
    (31) number -> . FLOATINGPOINT
    (19) assignment -> . IDENTIFIER EQUALS expression
    (20) assignment -> . IDENTIFIER PLUS EQUALS expression
    (21) assignment -> . IDENTIFIER MINUS EQUALS expression
    (32) array_usage -> . IDENTIFIER LBRACKET elements RBRACKET
    (33) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (25) function_call -> . IDENTIFIER LPAREN RPAREN
    (26) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (27) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (91) math_expression -> . expression PLUS expression
    (92) math_expression -> . expression MINUS expression
    (93) math_expression -> . expression TIMES expression
    (94) math_expression -> . expression DIVIDE expression
    (95) math_expression -> . expression MODULUS expression
    (96) math_expression -> . expression PLUS PLUS
    (97) math_expression -> . expression MINUS MINUS
    (67) conditional_expression -> . expression ISEQUAL expression
    (68) conditional_expression -> . expression NOT EQUALS expression
    (69) conditional_expression -> . expression LESS expression
    (70) conditional_expression -> . expression LESS EQUALS expression
    (71) conditional_expression -> . expression GREATER expression
    (72) conditional_expression -> . expression GREATER EQUALS expression
    (73) conditional_expression -> . expression AND expression
    (74) conditional_expression -> . expression OR expression
    (75) conditional_expression -> . NOT expression

    COMMA           shift and go to state 77
    BOOLEAN         shift and go to state 12
    STRING          shift and go to state 14
    IDENTIFIER      shift and go to state 55
    LETTER          shift and go to state 15
    INTEGER         shift and go to state 26
    FLOATINGPOINT   shift and go to state 27
    NOT             shift and go to state 28

    elements                       shift and go to state 75
    expression                     shift and go to state 76
    number                         shift and go to state 13
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 56
    function_call                  shift and go to state 16
    math_expression                shift and go to state 17
    conditional_expression         shift and go to state 18

state 46

    (19) assignment -> IDENTIFIER EQUALS . expression
    (76) expression -> . BOOLEAN
    (77) expression -> . number
    (78) expression -> . STRING
    (79) expression -> . IDENTIFIER
    (80) expression -> . LETTER
    (81) expression -> . assignment
    (82) expression -> . array_usage
    (83) expression -> . function_call
    (84) expression -> . math_expression
    (85) expression -> . conditional_expression
    (30) number -> . INTEGER
    (31) number -> . FLOATINGPOINT
    (19) assignment -> . IDENTIFIER EQUALS expression
    (20) assignment -> . IDENTIFIER PLUS EQUALS expression
    (21) assignment -> . IDENTIFIER MINUS EQUALS expression
    (32) array_usage -> . IDENTIFIER LBRACKET elements RBRACKET
    (33) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (25) function_call -> . IDENTIFIER LPAREN RPAREN
    (26) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (27) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (91) math_expression -> . expression PLUS expression
    (92) math_expression -> . expression MINUS expression
    (93) math_expression -> . expression TIMES expression
    (94) math_expression -> . expression DIVIDE expression
    (95) math_expression -> . expression MODULUS expression
    (96) math_expression -> . expression PLUS PLUS
    (97) math_expression -> . expression MINUS MINUS
    (67) conditional_expression -> . expression ISEQUAL expression
    (68) conditional_expression -> . expression NOT EQUALS expression
    (69) conditional_expression -> . expression LESS expression
    (70) conditional_expression -> . expression LESS EQUALS expression
    (71) conditional_expression -> . expression GREATER expression
    (72) conditional_expression -> . expression GREATER EQUALS expression
    (73) conditional_expression -> . expression AND expression
    (74) conditional_expression -> . expression OR expression
    (75) conditional_expression -> . NOT expression

    BOOLEAN         shift and go to state 12
    STRING          shift and go to state 14
    IDENTIFIER      shift and go to state 55
    LETTER          shift and go to state 15
    INTEGER         shift and go to state 26
    FLOATINGPOINT   shift and go to state 27
    NOT             shift and go to state 28

    expression                     shift and go to state 78
    number                         shift and go to state 13
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 56
    function_call                  shift and go to state 16
    math_expression                shift and go to state 17
    conditional_expression         shift and go to state 18

state 47

    (20) assignment -> IDENTIFIER PLUS . EQUALS expression

    EQUALS          shift and go to state 79


state 48

    (21) assignment -> IDENTIFIER MINUS . EQUALS expression

    EQUALS          shift and go to state 80


state 49

    (25) function_call -> IDENTIFIER LPAREN . RPAREN
    (26) function_call -> IDENTIFIER LPAREN . expression RPAREN
    (27) function_call -> IDENTIFIER LPAREN . elements RPAREN
    (76) expression -> . BOOLEAN
    (77) expression -> . number
    (78) expression -> . STRING
    (79) expression -> . IDENTIFIER
    (80) expression -> . LETTER
    (81) expression -> . assignment
    (82) expression -> . array_usage
    (83) expression -> . function_call
    (84) expression -> . math_expression
    (85) expression -> . conditional_expression
    (28) elements -> . COMMA expression
    (29) elements -> . COMMA expression elements
    (30) number -> . INTEGER
    (31) number -> . FLOATINGPOINT
    (19) assignment -> . IDENTIFIER EQUALS expression
    (20) assignment -> . IDENTIFIER PLUS EQUALS expression
    (21) assignment -> . IDENTIFIER MINUS EQUALS expression
    (32) array_usage -> . IDENTIFIER LBRACKET elements RBRACKET
    (33) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (25) function_call -> . IDENTIFIER LPAREN RPAREN
    (26) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (27) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (91) math_expression -> . expression PLUS expression
    (92) math_expression -> . expression MINUS expression
    (93) math_expression -> . expression TIMES expression
    (94) math_expression -> . expression DIVIDE expression
    (95) math_expression -> . expression MODULUS expression
    (96) math_expression -> . expression PLUS PLUS
    (97) math_expression -> . expression MINUS MINUS
    (67) conditional_expression -> . expression ISEQUAL expression
    (68) conditional_expression -> . expression NOT EQUALS expression
    (69) conditional_expression -> . expression LESS expression
    (70) conditional_expression -> . expression LESS EQUALS expression
    (71) conditional_expression -> . expression GREATER expression
    (72) conditional_expression -> . expression GREATER EQUALS expression
    (73) conditional_expression -> . expression AND expression
    (74) conditional_expression -> . expression OR expression
    (75) conditional_expression -> . NOT expression

    RPAREN          shift and go to state 81
    BOOLEAN         shift and go to state 12
    STRING          shift and go to state 14
    IDENTIFIER      shift and go to state 55
    LETTER          shift and go to state 15
    COMMA           shift and go to state 77
    INTEGER         shift and go to state 26
    FLOATINGPOINT   shift and go to state 27
    NOT             shift and go to state 28

    expression                     shift and go to state 82
    elements                       shift and go to state 83
    number                         shift and go to state 13
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 56
    function_call                  shift and go to state 16
    math_expression                shift and go to state 17
    conditional_expression         shift and go to state 18

state 50

    (7) external-declaration -> array_usage SEMICOLON .

    BOOLEAN         reduce using rule 7 (external-declaration -> array_usage SEMICOLON .)
    STRING          reduce using rule 7 (external-declaration -> array_usage SEMICOLON .)
    IDENTIFIER      reduce using rule 7 (external-declaration -> array_usage SEMICOLON .)
    LETTER          reduce using rule 7 (external-declaration -> array_usage SEMICOLON .)
    BOOL            reduce using rule 7 (external-declaration -> array_usage SEMICOLON .)
    INT             reduce using rule 7 (external-declaration -> array_usage SEMICOLON .)
    FLOAT           reduce using rule 7 (external-declaration -> array_usage SEMICOLON .)
    CHAR            reduce using rule 7 (external-declaration -> array_usage SEMICOLON .)
    VOID            reduce using rule 7 (external-declaration -> array_usage SEMICOLON .)
    POUND           reduce using rule 7 (external-declaration -> array_usage SEMICOLON .)
    USING           reduce using rule 7 (external-declaration -> array_usage SEMICOLON .)
    INTEGER         reduce using rule 7 (external-declaration -> array_usage SEMICOLON .)
    FLOATINGPOINT   reduce using rule 7 (external-declaration -> array_usage SEMICOLON .)
    NOT             reduce using rule 7 (external-declaration -> array_usage SEMICOLON .)
    $end            reduce using rule 7 (external-declaration -> array_usage SEMICOLON .)


state 51

    (98) macro_definition -> POUND DEFINE . IDENTIFIER assignment

    IDENTIFIER      shift and go to state 84


state 52

    (99) file_inclusion -> POUND INCLUDE . LESS HEADER GREATER
    (100) file_inclusion -> POUND INCLUDE . QUOTE HEADER QUOTE
    (101) file_inclusion -> POUND INCLUDE . LESS IDENTIFIER GREATER
    (102) file_inclusion -> POUND INCLUDE . QUOTE IDENTIFIER QUOTE

    LESS            shift and go to state 85
    QUOTE           shift and go to state 86


state 53

    (49) namespace_statement -> USING NAMESPACE . IDENTIFIER SEMICOLON

    IDENTIFIER      shift and go to state 87


state 54

    (75) conditional_expression -> NOT expression .
    (91) math_expression -> expression . PLUS expression
    (92) math_expression -> expression . MINUS expression
    (93) math_expression -> expression . TIMES expression
    (94) math_expression -> expression . DIVIDE expression
    (95) math_expression -> expression . MODULUS expression
    (96) math_expression -> expression . PLUS PLUS
    (97) math_expression -> expression . MINUS MINUS
    (67) conditional_expression -> expression . ISEQUAL expression
    (68) conditional_expression -> expression . NOT EQUALS expression
    (69) conditional_expression -> expression . LESS expression
    (70) conditional_expression -> expression . LESS EQUALS expression
    (71) conditional_expression -> expression . GREATER expression
    (72) conditional_expression -> expression . GREATER EQUALS expression
    (73) conditional_expression -> expression . AND expression
    (74) conditional_expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULUS resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    $end            reduce using rule 75 (conditional_expression -> NOT expression .)
    RBRACKET        reduce using rule 75 (conditional_expression -> NOT expression .)
    SEMICOLON       reduce using rule 75 (conditional_expression -> NOT expression .)
    RPAREN          reduce using rule 75 (conditional_expression -> NOT expression .)
    COMMA           reduce using rule 75 (conditional_expression -> NOT expression .)
    BOOLEAN         reduce using rule 75 (conditional_expression -> NOT expression .)
    STRING          reduce using rule 75 (conditional_expression -> NOT expression .)
    IDENTIFIER      reduce using rule 75 (conditional_expression -> NOT expression .)
    LETTER          reduce using rule 75 (conditional_expression -> NOT expression .)
    BOOL            reduce using rule 75 (conditional_expression -> NOT expression .)
    INT             reduce using rule 75 (conditional_expression -> NOT expression .)
    FLOAT           reduce using rule 75 (conditional_expression -> NOT expression .)
    CHAR            reduce using rule 75 (conditional_expression -> NOT expression .)
    VOID            reduce using rule 75 (conditional_expression -> NOT expression .)
    POUND           reduce using rule 75 (conditional_expression -> NOT expression .)
    USING           reduce using rule 75 (conditional_expression -> NOT expression .)
    INTEGER         reduce using rule 75 (conditional_expression -> NOT expression .)
    FLOATINGPOINT   reduce using rule 75 (conditional_expression -> NOT expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    MODULUS         shift and go to state 35
    ISEQUAL         shift and go to state 36
    NOT             shift and go to state 37
    LESS            shift and go to state 38
    GREATER         shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41

  ! PLUS            [ reduce using rule 75 (conditional_expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 75 (conditional_expression -> NOT expression .) ]
  ! TIMES           [ reduce using rule 75 (conditional_expression -> NOT expression .) ]
  ! DIVIDE          [ reduce using rule 75 (conditional_expression -> NOT expression .) ]
  ! MODULUS         [ reduce using rule 75 (conditional_expression -> NOT expression .) ]
  ! ISEQUAL         [ reduce using rule 75 (conditional_expression -> NOT expression .) ]
  ! NOT             [ reduce using rule 75 (conditional_expression -> NOT expression .) ]
  ! LESS            [ reduce using rule 75 (conditional_expression -> NOT expression .) ]
  ! GREATER         [ reduce using rule 75 (conditional_expression -> NOT expression .) ]
  ! AND             [ reduce using rule 75 (conditional_expression -> NOT expression .) ]
  ! OR              [ reduce using rule 75 (conditional_expression -> NOT expression .) ]


state 55

    (79) expression -> IDENTIFIER .
    (19) assignment -> IDENTIFIER . EQUALS expression
    (20) assignment -> IDENTIFIER . PLUS EQUALS expression
    (21) assignment -> IDENTIFIER . MINUS EQUALS expression
    (32) array_usage -> IDENTIFIER . LBRACKET elements RBRACKET
    (33) array_usage -> IDENTIFIER . LBRACKET expression RBRACKET
    (25) function_call -> IDENTIFIER . LPAREN RPAREN
    (26) function_call -> IDENTIFIER . LPAREN expression RPAREN
    (27) function_call -> IDENTIFIER . LPAREN elements RPAREN

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    TIMES           reduce using rule 79 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 79 (expression -> IDENTIFIER .)
    MODULUS         reduce using rule 79 (expression -> IDENTIFIER .)
    ISEQUAL         reduce using rule 79 (expression -> IDENTIFIER .)
    NOT             reduce using rule 79 (expression -> IDENTIFIER .)
    LESS            reduce using rule 79 (expression -> IDENTIFIER .)
    GREATER         reduce using rule 79 (expression -> IDENTIFIER .)
    AND             reduce using rule 79 (expression -> IDENTIFIER .)
    OR              reduce using rule 79 (expression -> IDENTIFIER .)
    $end            reduce using rule 79 (expression -> IDENTIFIER .)
    RBRACKET        reduce using rule 79 (expression -> IDENTIFIER .)
    SEMICOLON       reduce using rule 79 (expression -> IDENTIFIER .)
    RPAREN          reduce using rule 79 (expression -> IDENTIFIER .)
    COMMA           reduce using rule 79 (expression -> IDENTIFIER .)
    BOOLEAN         reduce using rule 79 (expression -> IDENTIFIER .)
    STRING          reduce using rule 79 (expression -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 79 (expression -> IDENTIFIER .)
    LETTER          reduce using rule 79 (expression -> IDENTIFIER .)
    BOOL            reduce using rule 79 (expression -> IDENTIFIER .)
    INT             reduce using rule 79 (expression -> IDENTIFIER .)
    FLOAT           reduce using rule 79 (expression -> IDENTIFIER .)
    CHAR            reduce using rule 79 (expression -> IDENTIFIER .)
    VOID            reduce using rule 79 (expression -> IDENTIFIER .)
    POUND           reduce using rule 79 (expression -> IDENTIFIER .)
    USING           reduce using rule 79 (expression -> IDENTIFIER .)
    INTEGER         reduce using rule 79 (expression -> IDENTIFIER .)
    FLOATINGPOINT   reduce using rule 79 (expression -> IDENTIFIER .)
    EQUALS          shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    LBRACKET        shift and go to state 45
    LPAREN          shift and go to state 49

  ! PLUS            [ reduce using rule 79 (expression -> IDENTIFIER .) ]
  ! MINUS           [ reduce using rule 79 (expression -> IDENTIFIER .) ]


state 56

    (82) expression -> array_usage .

    PLUS            reduce using rule 82 (expression -> array_usage .)
    MINUS           reduce using rule 82 (expression -> array_usage .)
    TIMES           reduce using rule 82 (expression -> array_usage .)
    DIVIDE          reduce using rule 82 (expression -> array_usage .)
    MODULUS         reduce using rule 82 (expression -> array_usage .)
    ISEQUAL         reduce using rule 82 (expression -> array_usage .)
    NOT             reduce using rule 82 (expression -> array_usage .)
    LESS            reduce using rule 82 (expression -> array_usage .)
    GREATER         reduce using rule 82 (expression -> array_usage .)
    AND             reduce using rule 82 (expression -> array_usage .)
    OR              reduce using rule 82 (expression -> array_usage .)
    $end            reduce using rule 82 (expression -> array_usage .)
    RBRACKET        reduce using rule 82 (expression -> array_usage .)
    SEMICOLON       reduce using rule 82 (expression -> array_usage .)
    RPAREN          reduce using rule 82 (expression -> array_usage .)
    COMMA           reduce using rule 82 (expression -> array_usage .)
    BOOLEAN         reduce using rule 82 (expression -> array_usage .)
    STRING          reduce using rule 82 (expression -> array_usage .)
    IDENTIFIER      reduce using rule 82 (expression -> array_usage .)
    LETTER          reduce using rule 82 (expression -> array_usage .)
    BOOL            reduce using rule 82 (expression -> array_usage .)
    INT             reduce using rule 82 (expression -> array_usage .)
    FLOAT           reduce using rule 82 (expression -> array_usage .)
    CHAR            reduce using rule 82 (expression -> array_usage .)
    VOID            reduce using rule 82 (expression -> array_usage .)
    POUND           reduce using rule 82 (expression -> array_usage .)
    USING           reduce using rule 82 (expression -> array_usage .)
    INTEGER         reduce using rule 82 (expression -> array_usage .)
    FLOATINGPOINT   reduce using rule 82 (expression -> array_usage .)


state 57

    (91) math_expression -> expression PLUS expression .
    (91) math_expression -> expression . PLUS expression
    (92) math_expression -> expression . MINUS expression
    (93) math_expression -> expression . TIMES expression
    (94) math_expression -> expression . DIVIDE expression
    (95) math_expression -> expression . MODULUS expression
    (96) math_expression -> expression . PLUS PLUS
    (97) math_expression -> expression . MINUS MINUS
    (67) conditional_expression -> expression . ISEQUAL expression
    (68) conditional_expression -> expression . NOT EQUALS expression
    (69) conditional_expression -> expression . LESS expression
    (70) conditional_expression -> expression . LESS EQUALS expression
    (71) conditional_expression -> expression . GREATER expression
    (72) conditional_expression -> expression . GREATER EQUALS expression
    (73) conditional_expression -> expression . AND expression
    (74) conditional_expression -> expression . OR expression

    PLUS            reduce using rule 91 (math_expression -> expression PLUS expression .)
    MINUS           reduce using rule 91 (math_expression -> expression PLUS expression .)
    MODULUS         reduce using rule 91 (math_expression -> expression PLUS expression .)
    ISEQUAL         reduce using rule 91 (math_expression -> expression PLUS expression .)
    NOT             reduce using rule 91 (math_expression -> expression PLUS expression .)
    LESS            reduce using rule 91 (math_expression -> expression PLUS expression .)
    GREATER         reduce using rule 91 (math_expression -> expression PLUS expression .)
    AND             reduce using rule 91 (math_expression -> expression PLUS expression .)
    OR              reduce using rule 91 (math_expression -> expression PLUS expression .)
    $end            reduce using rule 91 (math_expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 91 (math_expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 91 (math_expression -> expression PLUS expression .)
    RPAREN          reduce using rule 91 (math_expression -> expression PLUS expression .)
    COMMA           reduce using rule 91 (math_expression -> expression PLUS expression .)
    BOOLEAN         reduce using rule 91 (math_expression -> expression PLUS expression .)
    STRING          reduce using rule 91 (math_expression -> expression PLUS expression .)
    IDENTIFIER      reduce using rule 91 (math_expression -> expression PLUS expression .)
    LETTER          reduce using rule 91 (math_expression -> expression PLUS expression .)
    BOOL            reduce using rule 91 (math_expression -> expression PLUS expression .)
    INT             reduce using rule 91 (math_expression -> expression PLUS expression .)
    FLOAT           reduce using rule 91 (math_expression -> expression PLUS expression .)
    CHAR            reduce using rule 91 (math_expression -> expression PLUS expression .)
    VOID            reduce using rule 91 (math_expression -> expression PLUS expression .)
    POUND           reduce using rule 91 (math_expression -> expression PLUS expression .)
    USING           reduce using rule 91 (math_expression -> expression PLUS expression .)
    INTEGER         reduce using rule 91 (math_expression -> expression PLUS expression .)
    FLOATINGPOINT   reduce using rule 91 (math_expression -> expression PLUS expression .)
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34

  ! TIMES           [ reduce using rule 91 (math_expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 91 (math_expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 31 ]
  ! MINUS           [ shift and go to state 32 ]
  ! MODULUS         [ shift and go to state 35 ]
  ! ISEQUAL         [ shift and go to state 36 ]
  ! NOT             [ shift and go to state 37 ]
  ! LESS            [ shift and go to state 38 ]
  ! GREATER         [ shift and go to state 39 ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]


state 58

    (96) math_expression -> expression PLUS PLUS .

    PLUS            reduce using rule 96 (math_expression -> expression PLUS PLUS .)
    MINUS           reduce using rule 96 (math_expression -> expression PLUS PLUS .)
    TIMES           reduce using rule 96 (math_expression -> expression PLUS PLUS .)
    DIVIDE          reduce using rule 96 (math_expression -> expression PLUS PLUS .)
    MODULUS         reduce using rule 96 (math_expression -> expression PLUS PLUS .)
    ISEQUAL         reduce using rule 96 (math_expression -> expression PLUS PLUS .)
    NOT             reduce using rule 96 (math_expression -> expression PLUS PLUS .)
    LESS            reduce using rule 96 (math_expression -> expression PLUS PLUS .)
    GREATER         reduce using rule 96 (math_expression -> expression PLUS PLUS .)
    AND             reduce using rule 96 (math_expression -> expression PLUS PLUS .)
    OR              reduce using rule 96 (math_expression -> expression PLUS PLUS .)
    $end            reduce using rule 96 (math_expression -> expression PLUS PLUS .)
    RBRACKET        reduce using rule 96 (math_expression -> expression PLUS PLUS .)
    SEMICOLON       reduce using rule 96 (math_expression -> expression PLUS PLUS .)
    RPAREN          reduce using rule 96 (math_expression -> expression PLUS PLUS .)
    COMMA           reduce using rule 96 (math_expression -> expression PLUS PLUS .)
    BOOLEAN         reduce using rule 96 (math_expression -> expression PLUS PLUS .)
    STRING          reduce using rule 96 (math_expression -> expression PLUS PLUS .)
    IDENTIFIER      reduce using rule 96 (math_expression -> expression PLUS PLUS .)
    LETTER          reduce using rule 96 (math_expression -> expression PLUS PLUS .)
    BOOL            reduce using rule 96 (math_expression -> expression PLUS PLUS .)
    INT             reduce using rule 96 (math_expression -> expression PLUS PLUS .)
    FLOAT           reduce using rule 96 (math_expression -> expression PLUS PLUS .)
    CHAR            reduce using rule 96 (math_expression -> expression PLUS PLUS .)
    VOID            reduce using rule 96 (math_expression -> expression PLUS PLUS .)
    POUND           reduce using rule 96 (math_expression -> expression PLUS PLUS .)
    USING           reduce using rule 96 (math_expression -> expression PLUS PLUS .)
    INTEGER         reduce using rule 96 (math_expression -> expression PLUS PLUS .)
    FLOATINGPOINT   reduce using rule 96 (math_expression -> expression PLUS PLUS .)


state 59

    (92) math_expression -> expression MINUS expression .
    (91) math_expression -> expression . PLUS expression
    (92) math_expression -> expression . MINUS expression
    (93) math_expression -> expression . TIMES expression
    (94) math_expression -> expression . DIVIDE expression
    (95) math_expression -> expression . MODULUS expression
    (96) math_expression -> expression . PLUS PLUS
    (97) math_expression -> expression . MINUS MINUS
    (67) conditional_expression -> expression . ISEQUAL expression
    (68) conditional_expression -> expression . NOT EQUALS expression
    (69) conditional_expression -> expression . LESS expression
    (70) conditional_expression -> expression . LESS EQUALS expression
    (71) conditional_expression -> expression . GREATER expression
    (72) conditional_expression -> expression . GREATER EQUALS expression
    (73) conditional_expression -> expression . AND expression
    (74) conditional_expression -> expression . OR expression

    PLUS            reduce using rule 92 (math_expression -> expression MINUS expression .)
    MINUS           reduce using rule 92 (math_expression -> expression MINUS expression .)
    MODULUS         reduce using rule 92 (math_expression -> expression MINUS expression .)
    ISEQUAL         reduce using rule 92 (math_expression -> expression MINUS expression .)
    NOT             reduce using rule 92 (math_expression -> expression MINUS expression .)
    LESS            reduce using rule 92 (math_expression -> expression MINUS expression .)
    GREATER         reduce using rule 92 (math_expression -> expression MINUS expression .)
    AND             reduce using rule 92 (math_expression -> expression MINUS expression .)
    OR              reduce using rule 92 (math_expression -> expression MINUS expression .)
    $end            reduce using rule 92 (math_expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 92 (math_expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 92 (math_expression -> expression MINUS expression .)
    RPAREN          reduce using rule 92 (math_expression -> expression MINUS expression .)
    COMMA           reduce using rule 92 (math_expression -> expression MINUS expression .)
    BOOLEAN         reduce using rule 92 (math_expression -> expression MINUS expression .)
    STRING          reduce using rule 92 (math_expression -> expression MINUS expression .)
    IDENTIFIER      reduce using rule 92 (math_expression -> expression MINUS expression .)
    LETTER          reduce using rule 92 (math_expression -> expression MINUS expression .)
    BOOL            reduce using rule 92 (math_expression -> expression MINUS expression .)
    INT             reduce using rule 92 (math_expression -> expression MINUS expression .)
    FLOAT           reduce using rule 92 (math_expression -> expression MINUS expression .)
    CHAR            reduce using rule 92 (math_expression -> expression MINUS expression .)
    VOID            reduce using rule 92 (math_expression -> expression MINUS expression .)
    POUND           reduce using rule 92 (math_expression -> expression MINUS expression .)
    USING           reduce using rule 92 (math_expression -> expression MINUS expression .)
    INTEGER         reduce using rule 92 (math_expression -> expression MINUS expression .)
    FLOATINGPOINT   reduce using rule 92 (math_expression -> expression MINUS expression .)
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34

  ! TIMES           [ reduce using rule 92 (math_expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 92 (math_expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 31 ]
  ! MINUS           [ shift and go to state 32 ]
  ! MODULUS         [ shift and go to state 35 ]
  ! ISEQUAL         [ shift and go to state 36 ]
  ! NOT             [ shift and go to state 37 ]
  ! LESS            [ shift and go to state 38 ]
  ! GREATER         [ shift and go to state 39 ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]


state 60

    (97) math_expression -> expression MINUS MINUS .

    PLUS            reduce using rule 97 (math_expression -> expression MINUS MINUS .)
    MINUS           reduce using rule 97 (math_expression -> expression MINUS MINUS .)
    TIMES           reduce using rule 97 (math_expression -> expression MINUS MINUS .)
    DIVIDE          reduce using rule 97 (math_expression -> expression MINUS MINUS .)
    MODULUS         reduce using rule 97 (math_expression -> expression MINUS MINUS .)
    ISEQUAL         reduce using rule 97 (math_expression -> expression MINUS MINUS .)
    NOT             reduce using rule 97 (math_expression -> expression MINUS MINUS .)
    LESS            reduce using rule 97 (math_expression -> expression MINUS MINUS .)
    GREATER         reduce using rule 97 (math_expression -> expression MINUS MINUS .)
    AND             reduce using rule 97 (math_expression -> expression MINUS MINUS .)
    OR              reduce using rule 97 (math_expression -> expression MINUS MINUS .)
    $end            reduce using rule 97 (math_expression -> expression MINUS MINUS .)
    RBRACKET        reduce using rule 97 (math_expression -> expression MINUS MINUS .)
    SEMICOLON       reduce using rule 97 (math_expression -> expression MINUS MINUS .)
    RPAREN          reduce using rule 97 (math_expression -> expression MINUS MINUS .)
    COMMA           reduce using rule 97 (math_expression -> expression MINUS MINUS .)
    BOOLEAN         reduce using rule 97 (math_expression -> expression MINUS MINUS .)
    STRING          reduce using rule 97 (math_expression -> expression MINUS MINUS .)
    IDENTIFIER      reduce using rule 97 (math_expression -> expression MINUS MINUS .)
    LETTER          reduce using rule 97 (math_expression -> expression MINUS MINUS .)
    BOOL            reduce using rule 97 (math_expression -> expression MINUS MINUS .)
    INT             reduce using rule 97 (math_expression -> expression MINUS MINUS .)
    FLOAT           reduce using rule 97 (math_expression -> expression MINUS MINUS .)
    CHAR            reduce using rule 97 (math_expression -> expression MINUS MINUS .)
    VOID            reduce using rule 97 (math_expression -> expression MINUS MINUS .)
    POUND           reduce using rule 97 (math_expression -> expression MINUS MINUS .)
    USING           reduce using rule 97 (math_expression -> expression MINUS MINUS .)
    INTEGER         reduce using rule 97 (math_expression -> expression MINUS MINUS .)
    FLOATINGPOINT   reduce using rule 97 (math_expression -> expression MINUS MINUS .)


state 61

    (93) math_expression -> expression TIMES expression .
    (91) math_expression -> expression . PLUS expression
    (92) math_expression -> expression . MINUS expression
    (93) math_expression -> expression . TIMES expression
    (94) math_expression -> expression . DIVIDE expression
    (95) math_expression -> expression . MODULUS expression
    (96) math_expression -> expression . PLUS PLUS
    (97) math_expression -> expression . MINUS MINUS
    (67) conditional_expression -> expression . ISEQUAL expression
    (68) conditional_expression -> expression . NOT EQUALS expression
    (69) conditional_expression -> expression . LESS expression
    (70) conditional_expression -> expression . LESS EQUALS expression
    (71) conditional_expression -> expression . GREATER expression
    (72) conditional_expression -> expression . GREATER EQUALS expression
    (73) conditional_expression -> expression . AND expression
    (74) conditional_expression -> expression . OR expression

    PLUS            reduce using rule 93 (math_expression -> expression TIMES expression .)
    MINUS           reduce using rule 93 (math_expression -> expression TIMES expression .)
    TIMES           reduce using rule 93 (math_expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 93 (math_expression -> expression TIMES expression .)
    MODULUS         reduce using rule 93 (math_expression -> expression TIMES expression .)
    ISEQUAL         reduce using rule 93 (math_expression -> expression TIMES expression .)
    NOT             reduce using rule 93 (math_expression -> expression TIMES expression .)
    LESS            reduce using rule 93 (math_expression -> expression TIMES expression .)
    GREATER         reduce using rule 93 (math_expression -> expression TIMES expression .)
    AND             reduce using rule 93 (math_expression -> expression TIMES expression .)
    OR              reduce using rule 93 (math_expression -> expression TIMES expression .)
    $end            reduce using rule 93 (math_expression -> expression TIMES expression .)
    RBRACKET        reduce using rule 93 (math_expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 93 (math_expression -> expression TIMES expression .)
    RPAREN          reduce using rule 93 (math_expression -> expression TIMES expression .)
    COMMA           reduce using rule 93 (math_expression -> expression TIMES expression .)
    BOOLEAN         reduce using rule 93 (math_expression -> expression TIMES expression .)
    STRING          reduce using rule 93 (math_expression -> expression TIMES expression .)
    IDENTIFIER      reduce using rule 93 (math_expression -> expression TIMES expression .)
    LETTER          reduce using rule 93 (math_expression -> expression TIMES expression .)
    BOOL            reduce using rule 93 (math_expression -> expression TIMES expression .)
    INT             reduce using rule 93 (math_expression -> expression TIMES expression .)
    FLOAT           reduce using rule 93 (math_expression -> expression TIMES expression .)
    CHAR            reduce using rule 93 (math_expression -> expression TIMES expression .)
    VOID            reduce using rule 93 (math_expression -> expression TIMES expression .)
    POUND           reduce using rule 93 (math_expression -> expression TIMES expression .)
    USING           reduce using rule 93 (math_expression -> expression TIMES expression .)
    INTEGER         reduce using rule 93 (math_expression -> expression TIMES expression .)
    FLOATINGPOINT   reduce using rule 93 (math_expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 31 ]
  ! MINUS           [ shift and go to state 32 ]
  ! TIMES           [ shift and go to state 33 ]
  ! DIVIDE          [ shift and go to state 34 ]
  ! MODULUS         [ shift and go to state 35 ]
  ! ISEQUAL         [ shift and go to state 36 ]
  ! NOT             [ shift and go to state 37 ]
  ! LESS            [ shift and go to state 38 ]
  ! GREATER         [ shift and go to state 39 ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]


state 62

    (94) math_expression -> expression DIVIDE expression .
    (91) math_expression -> expression . PLUS expression
    (92) math_expression -> expression . MINUS expression
    (93) math_expression -> expression . TIMES expression
    (94) math_expression -> expression . DIVIDE expression
    (95) math_expression -> expression . MODULUS expression
    (96) math_expression -> expression . PLUS PLUS
    (97) math_expression -> expression . MINUS MINUS
    (67) conditional_expression -> expression . ISEQUAL expression
    (68) conditional_expression -> expression . NOT EQUALS expression
    (69) conditional_expression -> expression . LESS expression
    (70) conditional_expression -> expression . LESS EQUALS expression
    (71) conditional_expression -> expression . GREATER expression
    (72) conditional_expression -> expression . GREATER EQUALS expression
    (73) conditional_expression -> expression . AND expression
    (74) conditional_expression -> expression . OR expression

    PLUS            reduce using rule 94 (math_expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 94 (math_expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 94 (math_expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 94 (math_expression -> expression DIVIDE expression .)
    MODULUS         reduce using rule 94 (math_expression -> expression DIVIDE expression .)
    ISEQUAL         reduce using rule 94 (math_expression -> expression DIVIDE expression .)
    NOT             reduce using rule 94 (math_expression -> expression DIVIDE expression .)
    LESS            reduce using rule 94 (math_expression -> expression DIVIDE expression .)
    GREATER         reduce using rule 94 (math_expression -> expression DIVIDE expression .)
    AND             reduce using rule 94 (math_expression -> expression DIVIDE expression .)
    OR              reduce using rule 94 (math_expression -> expression DIVIDE expression .)
    $end            reduce using rule 94 (math_expression -> expression DIVIDE expression .)
    RBRACKET        reduce using rule 94 (math_expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 94 (math_expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 94 (math_expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 94 (math_expression -> expression DIVIDE expression .)
    BOOLEAN         reduce using rule 94 (math_expression -> expression DIVIDE expression .)
    STRING          reduce using rule 94 (math_expression -> expression DIVIDE expression .)
    IDENTIFIER      reduce using rule 94 (math_expression -> expression DIVIDE expression .)
    LETTER          reduce using rule 94 (math_expression -> expression DIVIDE expression .)
    BOOL            reduce using rule 94 (math_expression -> expression DIVIDE expression .)
    INT             reduce using rule 94 (math_expression -> expression DIVIDE expression .)
    FLOAT           reduce using rule 94 (math_expression -> expression DIVIDE expression .)
    CHAR            reduce using rule 94 (math_expression -> expression DIVIDE expression .)
    VOID            reduce using rule 94 (math_expression -> expression DIVIDE expression .)
    POUND           reduce using rule 94 (math_expression -> expression DIVIDE expression .)
    USING           reduce using rule 94 (math_expression -> expression DIVIDE expression .)
    INTEGER         reduce using rule 94 (math_expression -> expression DIVIDE expression .)
    FLOATINGPOINT   reduce using rule 94 (math_expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 31 ]
  ! MINUS           [ shift and go to state 32 ]
  ! TIMES           [ shift and go to state 33 ]
  ! DIVIDE          [ shift and go to state 34 ]
  ! MODULUS         [ shift and go to state 35 ]
  ! ISEQUAL         [ shift and go to state 36 ]
  ! NOT             [ shift and go to state 37 ]
  ! LESS            [ shift and go to state 38 ]
  ! GREATER         [ shift and go to state 39 ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]


state 63

    (95) math_expression -> expression MODULUS expression .
    (91) math_expression -> expression . PLUS expression
    (92) math_expression -> expression . MINUS expression
    (93) math_expression -> expression . TIMES expression
    (94) math_expression -> expression . DIVIDE expression
    (95) math_expression -> expression . MODULUS expression
    (96) math_expression -> expression . PLUS PLUS
    (97) math_expression -> expression . MINUS MINUS
    (67) conditional_expression -> expression . ISEQUAL expression
    (68) conditional_expression -> expression . NOT EQUALS expression
    (69) conditional_expression -> expression . LESS expression
    (70) conditional_expression -> expression . LESS EQUALS expression
    (71) conditional_expression -> expression . GREATER expression
    (72) conditional_expression -> expression . GREATER EQUALS expression
    (73) conditional_expression -> expression . AND expression
    (74) conditional_expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULUS resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    $end            reduce using rule 95 (math_expression -> expression MODULUS expression .)
    RBRACKET        reduce using rule 95 (math_expression -> expression MODULUS expression .)
    SEMICOLON       reduce using rule 95 (math_expression -> expression MODULUS expression .)
    RPAREN          reduce using rule 95 (math_expression -> expression MODULUS expression .)
    COMMA           reduce using rule 95 (math_expression -> expression MODULUS expression .)
    BOOLEAN         reduce using rule 95 (math_expression -> expression MODULUS expression .)
    STRING          reduce using rule 95 (math_expression -> expression MODULUS expression .)
    IDENTIFIER      reduce using rule 95 (math_expression -> expression MODULUS expression .)
    LETTER          reduce using rule 95 (math_expression -> expression MODULUS expression .)
    BOOL            reduce using rule 95 (math_expression -> expression MODULUS expression .)
    INT             reduce using rule 95 (math_expression -> expression MODULUS expression .)
    FLOAT           reduce using rule 95 (math_expression -> expression MODULUS expression .)
    CHAR            reduce using rule 95 (math_expression -> expression MODULUS expression .)
    VOID            reduce using rule 95 (math_expression -> expression MODULUS expression .)
    POUND           reduce using rule 95 (math_expression -> expression MODULUS expression .)
    USING           reduce using rule 95 (math_expression -> expression MODULUS expression .)
    INTEGER         reduce using rule 95 (math_expression -> expression MODULUS expression .)
    FLOATINGPOINT   reduce using rule 95 (math_expression -> expression MODULUS expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    MODULUS         shift and go to state 35
    ISEQUAL         shift and go to state 36
    NOT             shift and go to state 37
    LESS            shift and go to state 38
    GREATER         shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41

  ! PLUS            [ reduce using rule 95 (math_expression -> expression MODULUS expression .) ]
  ! MINUS           [ reduce using rule 95 (math_expression -> expression MODULUS expression .) ]
  ! TIMES           [ reduce using rule 95 (math_expression -> expression MODULUS expression .) ]
  ! DIVIDE          [ reduce using rule 95 (math_expression -> expression MODULUS expression .) ]
  ! MODULUS         [ reduce using rule 95 (math_expression -> expression MODULUS expression .) ]
  ! ISEQUAL         [ reduce using rule 95 (math_expression -> expression MODULUS expression .) ]
  ! NOT             [ reduce using rule 95 (math_expression -> expression MODULUS expression .) ]
  ! LESS            [ reduce using rule 95 (math_expression -> expression MODULUS expression .) ]
  ! GREATER         [ reduce using rule 95 (math_expression -> expression MODULUS expression .) ]
  ! AND             [ reduce using rule 95 (math_expression -> expression MODULUS expression .) ]
  ! OR              [ reduce using rule 95 (math_expression -> expression MODULUS expression .) ]


state 64

    (67) conditional_expression -> expression ISEQUAL expression .
    (91) math_expression -> expression . PLUS expression
    (92) math_expression -> expression . MINUS expression
    (93) math_expression -> expression . TIMES expression
    (94) math_expression -> expression . DIVIDE expression
    (95) math_expression -> expression . MODULUS expression
    (96) math_expression -> expression . PLUS PLUS
    (97) math_expression -> expression . MINUS MINUS
    (67) conditional_expression -> expression . ISEQUAL expression
    (68) conditional_expression -> expression . NOT EQUALS expression
    (69) conditional_expression -> expression . LESS expression
    (70) conditional_expression -> expression . LESS EQUALS expression
    (71) conditional_expression -> expression . GREATER expression
    (72) conditional_expression -> expression . GREATER EQUALS expression
    (73) conditional_expression -> expression . AND expression
    (74) conditional_expression -> expression . OR expression

    MODULUS         reduce using rule 67 (conditional_expression -> expression ISEQUAL expression .)
    NOT             reduce using rule 67 (conditional_expression -> expression ISEQUAL expression .)
    $end            reduce using rule 67 (conditional_expression -> expression ISEQUAL expression .)
    RBRACKET        reduce using rule 67 (conditional_expression -> expression ISEQUAL expression .)
    SEMICOLON       reduce using rule 67 (conditional_expression -> expression ISEQUAL expression .)
    RPAREN          reduce using rule 67 (conditional_expression -> expression ISEQUAL expression .)
    COMMA           reduce using rule 67 (conditional_expression -> expression ISEQUAL expression .)
    BOOLEAN         reduce using rule 67 (conditional_expression -> expression ISEQUAL expression .)
    STRING          reduce using rule 67 (conditional_expression -> expression ISEQUAL expression .)
    IDENTIFIER      reduce using rule 67 (conditional_expression -> expression ISEQUAL expression .)
    LETTER          reduce using rule 67 (conditional_expression -> expression ISEQUAL expression .)
    BOOL            reduce using rule 67 (conditional_expression -> expression ISEQUAL expression .)
    INT             reduce using rule 67 (conditional_expression -> expression ISEQUAL expression .)
    FLOAT           reduce using rule 67 (conditional_expression -> expression ISEQUAL expression .)
    CHAR            reduce using rule 67 (conditional_expression -> expression ISEQUAL expression .)
    VOID            reduce using rule 67 (conditional_expression -> expression ISEQUAL expression .)
    POUND           reduce using rule 67 (conditional_expression -> expression ISEQUAL expression .)
    USING           reduce using rule 67 (conditional_expression -> expression ISEQUAL expression .)
    INTEGER         reduce using rule 67 (conditional_expression -> expression ISEQUAL expression .)
    FLOATINGPOINT   reduce using rule 67 (conditional_expression -> expression ISEQUAL expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    ISEQUAL         shift and go to state 36
    LESS            shift and go to state 38
    GREATER         shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41

  ! PLUS            [ reduce using rule 67 (conditional_expression -> expression ISEQUAL expression .) ]
  ! MINUS           [ reduce using rule 67 (conditional_expression -> expression ISEQUAL expression .) ]
  ! TIMES           [ reduce using rule 67 (conditional_expression -> expression ISEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 67 (conditional_expression -> expression ISEQUAL expression .) ]
  ! ISEQUAL         [ reduce using rule 67 (conditional_expression -> expression ISEQUAL expression .) ]
  ! LESS            [ reduce using rule 67 (conditional_expression -> expression ISEQUAL expression .) ]
  ! GREATER         [ reduce using rule 67 (conditional_expression -> expression ISEQUAL expression .) ]
  ! AND             [ reduce using rule 67 (conditional_expression -> expression ISEQUAL expression .) ]
  ! OR              [ reduce using rule 67 (conditional_expression -> expression ISEQUAL expression .) ]
  ! MODULUS         [ shift and go to state 35 ]
  ! NOT             [ shift and go to state 37 ]


state 65

    (68) conditional_expression -> expression NOT EQUALS . expression
    (76) expression -> . BOOLEAN
    (77) expression -> . number
    (78) expression -> . STRING
    (79) expression -> . IDENTIFIER
    (80) expression -> . LETTER
    (81) expression -> . assignment
    (82) expression -> . array_usage
    (83) expression -> . function_call
    (84) expression -> . math_expression
    (85) expression -> . conditional_expression
    (30) number -> . INTEGER
    (31) number -> . FLOATINGPOINT
    (19) assignment -> . IDENTIFIER EQUALS expression
    (20) assignment -> . IDENTIFIER PLUS EQUALS expression
    (21) assignment -> . IDENTIFIER MINUS EQUALS expression
    (32) array_usage -> . IDENTIFIER LBRACKET elements RBRACKET
    (33) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (25) function_call -> . IDENTIFIER LPAREN RPAREN
    (26) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (27) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (91) math_expression -> . expression PLUS expression
    (92) math_expression -> . expression MINUS expression
    (93) math_expression -> . expression TIMES expression
    (94) math_expression -> . expression DIVIDE expression
    (95) math_expression -> . expression MODULUS expression
    (96) math_expression -> . expression PLUS PLUS
    (97) math_expression -> . expression MINUS MINUS
    (67) conditional_expression -> . expression ISEQUAL expression
    (68) conditional_expression -> . expression NOT EQUALS expression
    (69) conditional_expression -> . expression LESS expression
    (70) conditional_expression -> . expression LESS EQUALS expression
    (71) conditional_expression -> . expression GREATER expression
    (72) conditional_expression -> . expression GREATER EQUALS expression
    (73) conditional_expression -> . expression AND expression
    (74) conditional_expression -> . expression OR expression
    (75) conditional_expression -> . NOT expression

    BOOLEAN         shift and go to state 12
    STRING          shift and go to state 14
    IDENTIFIER      shift and go to state 55
    LETTER          shift and go to state 15
    INTEGER         shift and go to state 26
    FLOATINGPOINT   shift and go to state 27
    NOT             shift and go to state 28

    expression                     shift and go to state 88
    number                         shift and go to state 13
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 56
    function_call                  shift and go to state 16
    math_expression                shift and go to state 17
    conditional_expression         shift and go to state 18

state 66

    (69) conditional_expression -> expression LESS expression .
    (91) math_expression -> expression . PLUS expression
    (92) math_expression -> expression . MINUS expression
    (93) math_expression -> expression . TIMES expression
    (94) math_expression -> expression . DIVIDE expression
    (95) math_expression -> expression . MODULUS expression
    (96) math_expression -> expression . PLUS PLUS
    (97) math_expression -> expression . MINUS MINUS
    (67) conditional_expression -> expression . ISEQUAL expression
    (68) conditional_expression -> expression . NOT EQUALS expression
    (69) conditional_expression -> expression . LESS expression
    (70) conditional_expression -> expression . LESS EQUALS expression
    (71) conditional_expression -> expression . GREATER expression
    (72) conditional_expression -> expression . GREATER EQUALS expression
    (73) conditional_expression -> expression . AND expression
    (74) conditional_expression -> expression . OR expression

    MODULUS         reduce using rule 69 (conditional_expression -> expression LESS expression .)
    ISEQUAL         reduce using rule 69 (conditional_expression -> expression LESS expression .)
    NOT             reduce using rule 69 (conditional_expression -> expression LESS expression .)
    LESS            reduce using rule 69 (conditional_expression -> expression LESS expression .)
    GREATER         reduce using rule 69 (conditional_expression -> expression LESS expression .)
    AND             reduce using rule 69 (conditional_expression -> expression LESS expression .)
    OR              reduce using rule 69 (conditional_expression -> expression LESS expression .)
    $end            reduce using rule 69 (conditional_expression -> expression LESS expression .)
    RBRACKET        reduce using rule 69 (conditional_expression -> expression LESS expression .)
    SEMICOLON       reduce using rule 69 (conditional_expression -> expression LESS expression .)
    RPAREN          reduce using rule 69 (conditional_expression -> expression LESS expression .)
    COMMA           reduce using rule 69 (conditional_expression -> expression LESS expression .)
    BOOLEAN         reduce using rule 69 (conditional_expression -> expression LESS expression .)
    STRING          reduce using rule 69 (conditional_expression -> expression LESS expression .)
    IDENTIFIER      reduce using rule 69 (conditional_expression -> expression LESS expression .)
    LETTER          reduce using rule 69 (conditional_expression -> expression LESS expression .)
    BOOL            reduce using rule 69 (conditional_expression -> expression LESS expression .)
    INT             reduce using rule 69 (conditional_expression -> expression LESS expression .)
    FLOAT           reduce using rule 69 (conditional_expression -> expression LESS expression .)
    CHAR            reduce using rule 69 (conditional_expression -> expression LESS expression .)
    VOID            reduce using rule 69 (conditional_expression -> expression LESS expression .)
    POUND           reduce using rule 69 (conditional_expression -> expression LESS expression .)
    USING           reduce using rule 69 (conditional_expression -> expression LESS expression .)
    INTEGER         reduce using rule 69 (conditional_expression -> expression LESS expression .)
    FLOATINGPOINT   reduce using rule 69 (conditional_expression -> expression LESS expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34

  ! PLUS            [ reduce using rule 69 (conditional_expression -> expression LESS expression .) ]
  ! MINUS           [ reduce using rule 69 (conditional_expression -> expression LESS expression .) ]
  ! TIMES           [ reduce using rule 69 (conditional_expression -> expression LESS expression .) ]
  ! DIVIDE          [ reduce using rule 69 (conditional_expression -> expression LESS expression .) ]
  ! MODULUS         [ shift and go to state 35 ]
  ! ISEQUAL         [ shift and go to state 36 ]
  ! NOT             [ shift and go to state 37 ]
  ! LESS            [ shift and go to state 38 ]
  ! GREATER         [ shift and go to state 39 ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]


state 67

    (70) conditional_expression -> expression LESS EQUALS . expression
    (76) expression -> . BOOLEAN
    (77) expression -> . number
    (78) expression -> . STRING
    (79) expression -> . IDENTIFIER
    (80) expression -> . LETTER
    (81) expression -> . assignment
    (82) expression -> . array_usage
    (83) expression -> . function_call
    (84) expression -> . math_expression
    (85) expression -> . conditional_expression
    (30) number -> . INTEGER
    (31) number -> . FLOATINGPOINT
    (19) assignment -> . IDENTIFIER EQUALS expression
    (20) assignment -> . IDENTIFIER PLUS EQUALS expression
    (21) assignment -> . IDENTIFIER MINUS EQUALS expression
    (32) array_usage -> . IDENTIFIER LBRACKET elements RBRACKET
    (33) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (25) function_call -> . IDENTIFIER LPAREN RPAREN
    (26) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (27) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (91) math_expression -> . expression PLUS expression
    (92) math_expression -> . expression MINUS expression
    (93) math_expression -> . expression TIMES expression
    (94) math_expression -> . expression DIVIDE expression
    (95) math_expression -> . expression MODULUS expression
    (96) math_expression -> . expression PLUS PLUS
    (97) math_expression -> . expression MINUS MINUS
    (67) conditional_expression -> . expression ISEQUAL expression
    (68) conditional_expression -> . expression NOT EQUALS expression
    (69) conditional_expression -> . expression LESS expression
    (70) conditional_expression -> . expression LESS EQUALS expression
    (71) conditional_expression -> . expression GREATER expression
    (72) conditional_expression -> . expression GREATER EQUALS expression
    (73) conditional_expression -> . expression AND expression
    (74) conditional_expression -> . expression OR expression
    (75) conditional_expression -> . NOT expression

    BOOLEAN         shift and go to state 12
    STRING          shift and go to state 14
    IDENTIFIER      shift and go to state 55
    LETTER          shift and go to state 15
    INTEGER         shift and go to state 26
    FLOATINGPOINT   shift and go to state 27
    NOT             shift and go to state 28

    expression                     shift and go to state 89
    number                         shift and go to state 13
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 56
    function_call                  shift and go to state 16
    math_expression                shift and go to state 17
    conditional_expression         shift and go to state 18

state 68

    (71) conditional_expression -> expression GREATER expression .
    (91) math_expression -> expression . PLUS expression
    (92) math_expression -> expression . MINUS expression
    (93) math_expression -> expression . TIMES expression
    (94) math_expression -> expression . DIVIDE expression
    (95) math_expression -> expression . MODULUS expression
    (96) math_expression -> expression . PLUS PLUS
    (97) math_expression -> expression . MINUS MINUS
    (67) conditional_expression -> expression . ISEQUAL expression
    (68) conditional_expression -> expression . NOT EQUALS expression
    (69) conditional_expression -> expression . LESS expression
    (70) conditional_expression -> expression . LESS EQUALS expression
    (71) conditional_expression -> expression . GREATER expression
    (72) conditional_expression -> expression . GREATER EQUALS expression
    (73) conditional_expression -> expression . AND expression
    (74) conditional_expression -> expression . OR expression

    MODULUS         reduce using rule 71 (conditional_expression -> expression GREATER expression .)
    ISEQUAL         reduce using rule 71 (conditional_expression -> expression GREATER expression .)
    NOT             reduce using rule 71 (conditional_expression -> expression GREATER expression .)
    LESS            reduce using rule 71 (conditional_expression -> expression GREATER expression .)
    GREATER         reduce using rule 71 (conditional_expression -> expression GREATER expression .)
    AND             reduce using rule 71 (conditional_expression -> expression GREATER expression .)
    OR              reduce using rule 71 (conditional_expression -> expression GREATER expression .)
    $end            reduce using rule 71 (conditional_expression -> expression GREATER expression .)
    RBRACKET        reduce using rule 71 (conditional_expression -> expression GREATER expression .)
    SEMICOLON       reduce using rule 71 (conditional_expression -> expression GREATER expression .)
    RPAREN          reduce using rule 71 (conditional_expression -> expression GREATER expression .)
    COMMA           reduce using rule 71 (conditional_expression -> expression GREATER expression .)
    BOOLEAN         reduce using rule 71 (conditional_expression -> expression GREATER expression .)
    STRING          reduce using rule 71 (conditional_expression -> expression GREATER expression .)
    IDENTIFIER      reduce using rule 71 (conditional_expression -> expression GREATER expression .)
    LETTER          reduce using rule 71 (conditional_expression -> expression GREATER expression .)
    BOOL            reduce using rule 71 (conditional_expression -> expression GREATER expression .)
    INT             reduce using rule 71 (conditional_expression -> expression GREATER expression .)
    FLOAT           reduce using rule 71 (conditional_expression -> expression GREATER expression .)
    CHAR            reduce using rule 71 (conditional_expression -> expression GREATER expression .)
    VOID            reduce using rule 71 (conditional_expression -> expression GREATER expression .)
    POUND           reduce using rule 71 (conditional_expression -> expression GREATER expression .)
    USING           reduce using rule 71 (conditional_expression -> expression GREATER expression .)
    INTEGER         reduce using rule 71 (conditional_expression -> expression GREATER expression .)
    FLOATINGPOINT   reduce using rule 71 (conditional_expression -> expression GREATER expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34

  ! PLUS            [ reduce using rule 71 (conditional_expression -> expression GREATER expression .) ]
  ! MINUS           [ reduce using rule 71 (conditional_expression -> expression GREATER expression .) ]
  ! TIMES           [ reduce using rule 71 (conditional_expression -> expression GREATER expression .) ]
  ! DIVIDE          [ reduce using rule 71 (conditional_expression -> expression GREATER expression .) ]
  ! MODULUS         [ shift and go to state 35 ]
  ! ISEQUAL         [ shift and go to state 36 ]
  ! NOT             [ shift and go to state 37 ]
  ! LESS            [ shift and go to state 38 ]
  ! GREATER         [ shift and go to state 39 ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]


state 69

    (72) conditional_expression -> expression GREATER EQUALS . expression
    (76) expression -> . BOOLEAN
    (77) expression -> . number
    (78) expression -> . STRING
    (79) expression -> . IDENTIFIER
    (80) expression -> . LETTER
    (81) expression -> . assignment
    (82) expression -> . array_usage
    (83) expression -> . function_call
    (84) expression -> . math_expression
    (85) expression -> . conditional_expression
    (30) number -> . INTEGER
    (31) number -> . FLOATINGPOINT
    (19) assignment -> . IDENTIFIER EQUALS expression
    (20) assignment -> . IDENTIFIER PLUS EQUALS expression
    (21) assignment -> . IDENTIFIER MINUS EQUALS expression
    (32) array_usage -> . IDENTIFIER LBRACKET elements RBRACKET
    (33) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (25) function_call -> . IDENTIFIER LPAREN RPAREN
    (26) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (27) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (91) math_expression -> . expression PLUS expression
    (92) math_expression -> . expression MINUS expression
    (93) math_expression -> . expression TIMES expression
    (94) math_expression -> . expression DIVIDE expression
    (95) math_expression -> . expression MODULUS expression
    (96) math_expression -> . expression PLUS PLUS
    (97) math_expression -> . expression MINUS MINUS
    (67) conditional_expression -> . expression ISEQUAL expression
    (68) conditional_expression -> . expression NOT EQUALS expression
    (69) conditional_expression -> . expression LESS expression
    (70) conditional_expression -> . expression LESS EQUALS expression
    (71) conditional_expression -> . expression GREATER expression
    (72) conditional_expression -> . expression GREATER EQUALS expression
    (73) conditional_expression -> . expression AND expression
    (74) conditional_expression -> . expression OR expression
    (75) conditional_expression -> . NOT expression

    BOOLEAN         shift and go to state 12
    STRING          shift and go to state 14
    IDENTIFIER      shift and go to state 55
    LETTER          shift and go to state 15
    INTEGER         shift and go to state 26
    FLOATINGPOINT   shift and go to state 27
    NOT             shift and go to state 28

    expression                     shift and go to state 90
    number                         shift and go to state 13
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 56
    function_call                  shift and go to state 16
    math_expression                shift and go to state 17
    conditional_expression         shift and go to state 18

state 70

    (73) conditional_expression -> expression AND expression .
    (91) math_expression -> expression . PLUS expression
    (92) math_expression -> expression . MINUS expression
    (93) math_expression -> expression . TIMES expression
    (94) math_expression -> expression . DIVIDE expression
    (95) math_expression -> expression . MODULUS expression
    (96) math_expression -> expression . PLUS PLUS
    (97) math_expression -> expression . MINUS MINUS
    (67) conditional_expression -> expression . ISEQUAL expression
    (68) conditional_expression -> expression . NOT EQUALS expression
    (69) conditional_expression -> expression . LESS expression
    (70) conditional_expression -> expression . LESS EQUALS expression
    (71) conditional_expression -> expression . GREATER expression
    (72) conditional_expression -> expression . GREATER EQUALS expression
    (73) conditional_expression -> expression . AND expression
    (74) conditional_expression -> expression . OR expression

    MODULUS         reduce using rule 73 (conditional_expression -> expression AND expression .)
    ISEQUAL         reduce using rule 73 (conditional_expression -> expression AND expression .)
    NOT             reduce using rule 73 (conditional_expression -> expression AND expression .)
    AND             reduce using rule 73 (conditional_expression -> expression AND expression .)
    OR              reduce using rule 73 (conditional_expression -> expression AND expression .)
    $end            reduce using rule 73 (conditional_expression -> expression AND expression .)
    RBRACKET        reduce using rule 73 (conditional_expression -> expression AND expression .)
    SEMICOLON       reduce using rule 73 (conditional_expression -> expression AND expression .)
    RPAREN          reduce using rule 73 (conditional_expression -> expression AND expression .)
    COMMA           reduce using rule 73 (conditional_expression -> expression AND expression .)
    BOOLEAN         reduce using rule 73 (conditional_expression -> expression AND expression .)
    STRING          reduce using rule 73 (conditional_expression -> expression AND expression .)
    IDENTIFIER      reduce using rule 73 (conditional_expression -> expression AND expression .)
    LETTER          reduce using rule 73 (conditional_expression -> expression AND expression .)
    BOOL            reduce using rule 73 (conditional_expression -> expression AND expression .)
    INT             reduce using rule 73 (conditional_expression -> expression AND expression .)
    FLOAT           reduce using rule 73 (conditional_expression -> expression AND expression .)
    CHAR            reduce using rule 73 (conditional_expression -> expression AND expression .)
    VOID            reduce using rule 73 (conditional_expression -> expression AND expression .)
    POUND           reduce using rule 73 (conditional_expression -> expression AND expression .)
    USING           reduce using rule 73 (conditional_expression -> expression AND expression .)
    INTEGER         reduce using rule 73 (conditional_expression -> expression AND expression .)
    FLOATINGPOINT   reduce using rule 73 (conditional_expression -> expression AND expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    LESS            shift and go to state 38
    GREATER         shift and go to state 39

  ! PLUS            [ reduce using rule 73 (conditional_expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 73 (conditional_expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 73 (conditional_expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 73 (conditional_expression -> expression AND expression .) ]
  ! LESS            [ reduce using rule 73 (conditional_expression -> expression AND expression .) ]
  ! GREATER         [ reduce using rule 73 (conditional_expression -> expression AND expression .) ]
  ! MODULUS         [ shift and go to state 35 ]
  ! ISEQUAL         [ shift and go to state 36 ]
  ! NOT             [ shift and go to state 37 ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]


state 71

    (74) conditional_expression -> expression OR expression .
    (91) math_expression -> expression . PLUS expression
    (92) math_expression -> expression . MINUS expression
    (93) math_expression -> expression . TIMES expression
    (94) math_expression -> expression . DIVIDE expression
    (95) math_expression -> expression . MODULUS expression
    (96) math_expression -> expression . PLUS PLUS
    (97) math_expression -> expression . MINUS MINUS
    (67) conditional_expression -> expression . ISEQUAL expression
    (68) conditional_expression -> expression . NOT EQUALS expression
    (69) conditional_expression -> expression . LESS expression
    (70) conditional_expression -> expression . LESS EQUALS expression
    (71) conditional_expression -> expression . GREATER expression
    (72) conditional_expression -> expression . GREATER EQUALS expression
    (73) conditional_expression -> expression . AND expression
    (74) conditional_expression -> expression . OR expression

    MODULUS         reduce using rule 74 (conditional_expression -> expression OR expression .)
    ISEQUAL         reduce using rule 74 (conditional_expression -> expression OR expression .)
    NOT             reduce using rule 74 (conditional_expression -> expression OR expression .)
    AND             reduce using rule 74 (conditional_expression -> expression OR expression .)
    OR              reduce using rule 74 (conditional_expression -> expression OR expression .)
    $end            reduce using rule 74 (conditional_expression -> expression OR expression .)
    RBRACKET        reduce using rule 74 (conditional_expression -> expression OR expression .)
    SEMICOLON       reduce using rule 74 (conditional_expression -> expression OR expression .)
    RPAREN          reduce using rule 74 (conditional_expression -> expression OR expression .)
    COMMA           reduce using rule 74 (conditional_expression -> expression OR expression .)
    BOOLEAN         reduce using rule 74 (conditional_expression -> expression OR expression .)
    STRING          reduce using rule 74 (conditional_expression -> expression OR expression .)
    IDENTIFIER      reduce using rule 74 (conditional_expression -> expression OR expression .)
    LETTER          reduce using rule 74 (conditional_expression -> expression OR expression .)
    BOOL            reduce using rule 74 (conditional_expression -> expression OR expression .)
    INT             reduce using rule 74 (conditional_expression -> expression OR expression .)
    FLOAT           reduce using rule 74 (conditional_expression -> expression OR expression .)
    CHAR            reduce using rule 74 (conditional_expression -> expression OR expression .)
    VOID            reduce using rule 74 (conditional_expression -> expression OR expression .)
    POUND           reduce using rule 74 (conditional_expression -> expression OR expression .)
    USING           reduce using rule 74 (conditional_expression -> expression OR expression .)
    INTEGER         reduce using rule 74 (conditional_expression -> expression OR expression .)
    FLOATINGPOINT   reduce using rule 74 (conditional_expression -> expression OR expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    LESS            shift and go to state 38
    GREATER         shift and go to state 39

  ! PLUS            [ reduce using rule 74 (conditional_expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 74 (conditional_expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 74 (conditional_expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 74 (conditional_expression -> expression OR expression .) ]
  ! LESS            [ reduce using rule 74 (conditional_expression -> expression OR expression .) ]
  ! GREATER         [ reduce using rule 74 (conditional_expression -> expression OR expression .) ]
  ! MODULUS         [ shift and go to state 35 ]
  ! ISEQUAL         [ shift and go to state 36 ]
  ! NOT             [ shift and go to state 37 ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]


state 72

    (34) function -> type IDENTIFIER LPAREN . argument_list_option RPAREN compound_statement
    (35) argument_list_option -> . argument_list
    (36) argument_list_option -> . empty
    (37) argument_list -> . argument_list COMMA argument
    (38) argument_list -> . argument
    (103) empty -> .
    (39) argument -> . type IDENTIFIER
    (86) type -> . BOOL
    (87) type -> . INT
    (88) type -> . FLOAT
    (89) type -> . CHAR
    (90) type -> . VOID

    RPAREN          reduce using rule 103 (empty -> .)
    BOOL            shift and go to state 19
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22
    VOID            shift and go to state 23

    type                           shift and go to state 91
    argument_list_option           shift and go to state 92
    argument_list                  shift and go to state 93
    empty                          shift and go to state 94
    argument                       shift and go to state 95

state 73

    (6) external-declaration -> type assignment SEMICOLON .

    BOOLEAN         reduce using rule 6 (external-declaration -> type assignment SEMICOLON .)
    STRING          reduce using rule 6 (external-declaration -> type assignment SEMICOLON .)
    IDENTIFIER      reduce using rule 6 (external-declaration -> type assignment SEMICOLON .)
    LETTER          reduce using rule 6 (external-declaration -> type assignment SEMICOLON .)
    BOOL            reduce using rule 6 (external-declaration -> type assignment SEMICOLON .)
    INT             reduce using rule 6 (external-declaration -> type assignment SEMICOLON .)
    FLOAT           reduce using rule 6 (external-declaration -> type assignment SEMICOLON .)
    CHAR            reduce using rule 6 (external-declaration -> type assignment SEMICOLON .)
    VOID            reduce using rule 6 (external-declaration -> type assignment SEMICOLON .)
    POUND           reduce using rule 6 (external-declaration -> type assignment SEMICOLON .)
    USING           reduce using rule 6 (external-declaration -> type assignment SEMICOLON .)
    INTEGER         reduce using rule 6 (external-declaration -> type assignment SEMICOLON .)
    FLOATINGPOINT   reduce using rule 6 (external-declaration -> type assignment SEMICOLON .)
    NOT             reduce using rule 6 (external-declaration -> type assignment SEMICOLON .)
    $end            reduce using rule 6 (external-declaration -> type assignment SEMICOLON .)


state 74

    (8) external-declaration -> type array_usage SEMICOLON .

    BOOLEAN         reduce using rule 8 (external-declaration -> type array_usage SEMICOLON .)
    STRING          reduce using rule 8 (external-declaration -> type array_usage SEMICOLON .)
    IDENTIFIER      reduce using rule 8 (external-declaration -> type array_usage SEMICOLON .)
    LETTER          reduce using rule 8 (external-declaration -> type array_usage SEMICOLON .)
    BOOL            reduce using rule 8 (external-declaration -> type array_usage SEMICOLON .)
    INT             reduce using rule 8 (external-declaration -> type array_usage SEMICOLON .)
    FLOAT           reduce using rule 8 (external-declaration -> type array_usage SEMICOLON .)
    CHAR            reduce using rule 8 (external-declaration -> type array_usage SEMICOLON .)
    VOID            reduce using rule 8 (external-declaration -> type array_usage SEMICOLON .)
    POUND           reduce using rule 8 (external-declaration -> type array_usage SEMICOLON .)
    USING           reduce using rule 8 (external-declaration -> type array_usage SEMICOLON .)
    INTEGER         reduce using rule 8 (external-declaration -> type array_usage SEMICOLON .)
    FLOATINGPOINT   reduce using rule 8 (external-declaration -> type array_usage SEMICOLON .)
    NOT             reduce using rule 8 (external-declaration -> type array_usage SEMICOLON .)
    $end            reduce using rule 8 (external-declaration -> type array_usage SEMICOLON .)


state 75

    (32) array_usage -> IDENTIFIER LBRACKET elements . RBRACKET

    RBRACKET        shift and go to state 96


state 76

    (33) array_usage -> IDENTIFIER LBRACKET expression . RBRACKET
    (91) math_expression -> expression . PLUS expression
    (92) math_expression -> expression . MINUS expression
    (93) math_expression -> expression . TIMES expression
    (94) math_expression -> expression . DIVIDE expression
    (95) math_expression -> expression . MODULUS expression
    (96) math_expression -> expression . PLUS PLUS
    (97) math_expression -> expression . MINUS MINUS
    (67) conditional_expression -> expression . ISEQUAL expression
    (68) conditional_expression -> expression . NOT EQUALS expression
    (69) conditional_expression -> expression . LESS expression
    (70) conditional_expression -> expression . LESS EQUALS expression
    (71) conditional_expression -> expression . GREATER expression
    (72) conditional_expression -> expression . GREATER EQUALS expression
    (73) conditional_expression -> expression . AND expression
    (74) conditional_expression -> expression . OR expression

    RBRACKET        shift and go to state 97
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    MODULUS         shift and go to state 35
    ISEQUAL         shift and go to state 36
    NOT             shift and go to state 37
    LESS            shift and go to state 38
    GREATER         shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41


state 77

    (28) elements -> COMMA . expression
    (29) elements -> COMMA . expression elements
    (76) expression -> . BOOLEAN
    (77) expression -> . number
    (78) expression -> . STRING
    (79) expression -> . IDENTIFIER
    (80) expression -> . LETTER
    (81) expression -> . assignment
    (82) expression -> . array_usage
    (83) expression -> . function_call
    (84) expression -> . math_expression
    (85) expression -> . conditional_expression
    (30) number -> . INTEGER
    (31) number -> . FLOATINGPOINT
    (19) assignment -> . IDENTIFIER EQUALS expression
    (20) assignment -> . IDENTIFIER PLUS EQUALS expression
    (21) assignment -> . IDENTIFIER MINUS EQUALS expression
    (32) array_usage -> . IDENTIFIER LBRACKET elements RBRACKET
    (33) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (25) function_call -> . IDENTIFIER LPAREN RPAREN
    (26) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (27) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (91) math_expression -> . expression PLUS expression
    (92) math_expression -> . expression MINUS expression
    (93) math_expression -> . expression TIMES expression
    (94) math_expression -> . expression DIVIDE expression
    (95) math_expression -> . expression MODULUS expression
    (96) math_expression -> . expression PLUS PLUS
    (97) math_expression -> . expression MINUS MINUS
    (67) conditional_expression -> . expression ISEQUAL expression
    (68) conditional_expression -> . expression NOT EQUALS expression
    (69) conditional_expression -> . expression LESS expression
    (70) conditional_expression -> . expression LESS EQUALS expression
    (71) conditional_expression -> . expression GREATER expression
    (72) conditional_expression -> . expression GREATER EQUALS expression
    (73) conditional_expression -> . expression AND expression
    (74) conditional_expression -> . expression OR expression
    (75) conditional_expression -> . NOT expression

    BOOLEAN         shift and go to state 12
    STRING          shift and go to state 14
    IDENTIFIER      shift and go to state 55
    LETTER          shift and go to state 15
    INTEGER         shift and go to state 26
    FLOATINGPOINT   shift and go to state 27
    NOT             shift and go to state 28

    expression                     shift and go to state 98
    number                         shift and go to state 13
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 56
    function_call                  shift and go to state 16
    math_expression                shift and go to state 17
    conditional_expression         shift and go to state 18

state 78

    (19) assignment -> IDENTIFIER EQUALS expression .
    (91) math_expression -> expression . PLUS expression
    (92) math_expression -> expression . MINUS expression
    (93) math_expression -> expression . TIMES expression
    (94) math_expression -> expression . DIVIDE expression
    (95) math_expression -> expression . MODULUS expression
    (96) math_expression -> expression . PLUS PLUS
    (97) math_expression -> expression . MINUS MINUS
    (67) conditional_expression -> expression . ISEQUAL expression
    (68) conditional_expression -> expression . NOT EQUALS expression
    (69) conditional_expression -> expression . LESS expression
    (70) conditional_expression -> expression . LESS EQUALS expression
    (71) conditional_expression -> expression . GREATER expression
    (72) conditional_expression -> expression . GREATER EQUALS expression
    (73) conditional_expression -> expression . AND expression
    (74) conditional_expression -> expression . OR expression

    MODULUS         reduce using rule 19 (assignment -> IDENTIFIER EQUALS expression .)
    ISEQUAL         reduce using rule 19 (assignment -> IDENTIFIER EQUALS expression .)
    NOT             reduce using rule 19 (assignment -> IDENTIFIER EQUALS expression .)
    LESS            reduce using rule 19 (assignment -> IDENTIFIER EQUALS expression .)
    GREATER         reduce using rule 19 (assignment -> IDENTIFIER EQUALS expression .)
    AND             reduce using rule 19 (assignment -> IDENTIFIER EQUALS expression .)
    OR              reduce using rule 19 (assignment -> IDENTIFIER EQUALS expression .)
    $end            reduce using rule 19 (assignment -> IDENTIFIER EQUALS expression .)
    SEMICOLON       reduce using rule 19 (assignment -> IDENTIFIER EQUALS expression .)
    RBRACKET        reduce using rule 19 (assignment -> IDENTIFIER EQUALS expression .)
    RPAREN          reduce using rule 19 (assignment -> IDENTIFIER EQUALS expression .)
    COMMA           reduce using rule 19 (assignment -> IDENTIFIER EQUALS expression .)
    BOOLEAN         reduce using rule 19 (assignment -> IDENTIFIER EQUALS expression .)
    STRING          reduce using rule 19 (assignment -> IDENTIFIER EQUALS expression .)
    IDENTIFIER      reduce using rule 19 (assignment -> IDENTIFIER EQUALS expression .)
    LETTER          reduce using rule 19 (assignment -> IDENTIFIER EQUALS expression .)
    BOOL            reduce using rule 19 (assignment -> IDENTIFIER EQUALS expression .)
    INT             reduce using rule 19 (assignment -> IDENTIFIER EQUALS expression .)
    FLOAT           reduce using rule 19 (assignment -> IDENTIFIER EQUALS expression .)
    CHAR            reduce using rule 19 (assignment -> IDENTIFIER EQUALS expression .)
    VOID            reduce using rule 19 (assignment -> IDENTIFIER EQUALS expression .)
    POUND           reduce using rule 19 (assignment -> IDENTIFIER EQUALS expression .)
    USING           reduce using rule 19 (assignment -> IDENTIFIER EQUALS expression .)
    INTEGER         reduce using rule 19 (assignment -> IDENTIFIER EQUALS expression .)
    FLOATINGPOINT   reduce using rule 19 (assignment -> IDENTIFIER EQUALS expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34

  ! PLUS            [ reduce using rule 19 (assignment -> IDENTIFIER EQUALS expression .) ]
  ! MINUS           [ reduce using rule 19 (assignment -> IDENTIFIER EQUALS expression .) ]
  ! TIMES           [ reduce using rule 19 (assignment -> IDENTIFIER EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 19 (assignment -> IDENTIFIER EQUALS expression .) ]
  ! MODULUS         [ shift and go to state 35 ]
  ! ISEQUAL         [ shift and go to state 36 ]
  ! NOT             [ shift and go to state 37 ]
  ! LESS            [ shift and go to state 38 ]
  ! GREATER         [ shift and go to state 39 ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]


state 79

    (20) assignment -> IDENTIFIER PLUS EQUALS . expression
    (76) expression -> . BOOLEAN
    (77) expression -> . number
    (78) expression -> . STRING
    (79) expression -> . IDENTIFIER
    (80) expression -> . LETTER
    (81) expression -> . assignment
    (82) expression -> . array_usage
    (83) expression -> . function_call
    (84) expression -> . math_expression
    (85) expression -> . conditional_expression
    (30) number -> . INTEGER
    (31) number -> . FLOATINGPOINT
    (19) assignment -> . IDENTIFIER EQUALS expression
    (20) assignment -> . IDENTIFIER PLUS EQUALS expression
    (21) assignment -> . IDENTIFIER MINUS EQUALS expression
    (32) array_usage -> . IDENTIFIER LBRACKET elements RBRACKET
    (33) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (25) function_call -> . IDENTIFIER LPAREN RPAREN
    (26) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (27) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (91) math_expression -> . expression PLUS expression
    (92) math_expression -> . expression MINUS expression
    (93) math_expression -> . expression TIMES expression
    (94) math_expression -> . expression DIVIDE expression
    (95) math_expression -> . expression MODULUS expression
    (96) math_expression -> . expression PLUS PLUS
    (97) math_expression -> . expression MINUS MINUS
    (67) conditional_expression -> . expression ISEQUAL expression
    (68) conditional_expression -> . expression NOT EQUALS expression
    (69) conditional_expression -> . expression LESS expression
    (70) conditional_expression -> . expression LESS EQUALS expression
    (71) conditional_expression -> . expression GREATER expression
    (72) conditional_expression -> . expression GREATER EQUALS expression
    (73) conditional_expression -> . expression AND expression
    (74) conditional_expression -> . expression OR expression
    (75) conditional_expression -> . NOT expression

    BOOLEAN         shift and go to state 12
    STRING          shift and go to state 14
    IDENTIFIER      shift and go to state 55
    LETTER          shift and go to state 15
    INTEGER         shift and go to state 26
    FLOATINGPOINT   shift and go to state 27
    NOT             shift and go to state 28

    expression                     shift and go to state 99
    number                         shift and go to state 13
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 56
    function_call                  shift and go to state 16
    math_expression                shift and go to state 17
    conditional_expression         shift and go to state 18

state 80

    (21) assignment -> IDENTIFIER MINUS EQUALS . expression
    (76) expression -> . BOOLEAN
    (77) expression -> . number
    (78) expression -> . STRING
    (79) expression -> . IDENTIFIER
    (80) expression -> . LETTER
    (81) expression -> . assignment
    (82) expression -> . array_usage
    (83) expression -> . function_call
    (84) expression -> . math_expression
    (85) expression -> . conditional_expression
    (30) number -> . INTEGER
    (31) number -> . FLOATINGPOINT
    (19) assignment -> . IDENTIFIER EQUALS expression
    (20) assignment -> . IDENTIFIER PLUS EQUALS expression
    (21) assignment -> . IDENTIFIER MINUS EQUALS expression
    (32) array_usage -> . IDENTIFIER LBRACKET elements RBRACKET
    (33) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (25) function_call -> . IDENTIFIER LPAREN RPAREN
    (26) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (27) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (91) math_expression -> . expression PLUS expression
    (92) math_expression -> . expression MINUS expression
    (93) math_expression -> . expression TIMES expression
    (94) math_expression -> . expression DIVIDE expression
    (95) math_expression -> . expression MODULUS expression
    (96) math_expression -> . expression PLUS PLUS
    (97) math_expression -> . expression MINUS MINUS
    (67) conditional_expression -> . expression ISEQUAL expression
    (68) conditional_expression -> . expression NOT EQUALS expression
    (69) conditional_expression -> . expression LESS expression
    (70) conditional_expression -> . expression LESS EQUALS expression
    (71) conditional_expression -> . expression GREATER expression
    (72) conditional_expression -> . expression GREATER EQUALS expression
    (73) conditional_expression -> . expression AND expression
    (74) conditional_expression -> . expression OR expression
    (75) conditional_expression -> . NOT expression

    BOOLEAN         shift and go to state 12
    STRING          shift and go to state 14
    IDENTIFIER      shift and go to state 55
    LETTER          shift and go to state 15
    INTEGER         shift and go to state 26
    FLOATINGPOINT   shift and go to state 27
    NOT             shift and go to state 28

    expression                     shift and go to state 100
    number                         shift and go to state 13
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 56
    function_call                  shift and go to state 16
    math_expression                shift and go to state 17
    conditional_expression         shift and go to state 18

state 81

    (25) function_call -> IDENTIFIER LPAREN RPAREN .

    PLUS            reduce using rule 25 (function_call -> IDENTIFIER LPAREN RPAREN .)
    MINUS           reduce using rule 25 (function_call -> IDENTIFIER LPAREN RPAREN .)
    TIMES           reduce using rule 25 (function_call -> IDENTIFIER LPAREN RPAREN .)
    DIVIDE          reduce using rule 25 (function_call -> IDENTIFIER LPAREN RPAREN .)
    MODULUS         reduce using rule 25 (function_call -> IDENTIFIER LPAREN RPAREN .)
    ISEQUAL         reduce using rule 25 (function_call -> IDENTIFIER LPAREN RPAREN .)
    NOT             reduce using rule 25 (function_call -> IDENTIFIER LPAREN RPAREN .)
    LESS            reduce using rule 25 (function_call -> IDENTIFIER LPAREN RPAREN .)
    GREATER         reduce using rule 25 (function_call -> IDENTIFIER LPAREN RPAREN .)
    AND             reduce using rule 25 (function_call -> IDENTIFIER LPAREN RPAREN .)
    OR              reduce using rule 25 (function_call -> IDENTIFIER LPAREN RPAREN .)
    $end            reduce using rule 25 (function_call -> IDENTIFIER LPAREN RPAREN .)
    RBRACKET        reduce using rule 25 (function_call -> IDENTIFIER LPAREN RPAREN .)
    SEMICOLON       reduce using rule 25 (function_call -> IDENTIFIER LPAREN RPAREN .)
    RPAREN          reduce using rule 25 (function_call -> IDENTIFIER LPAREN RPAREN .)
    COMMA           reduce using rule 25 (function_call -> IDENTIFIER LPAREN RPAREN .)
    BOOLEAN         reduce using rule 25 (function_call -> IDENTIFIER LPAREN RPAREN .)
    STRING          reduce using rule 25 (function_call -> IDENTIFIER LPAREN RPAREN .)
    IDENTIFIER      reduce using rule 25 (function_call -> IDENTIFIER LPAREN RPAREN .)
    LETTER          reduce using rule 25 (function_call -> IDENTIFIER LPAREN RPAREN .)
    BOOL            reduce using rule 25 (function_call -> IDENTIFIER LPAREN RPAREN .)
    INT             reduce using rule 25 (function_call -> IDENTIFIER LPAREN RPAREN .)
    FLOAT           reduce using rule 25 (function_call -> IDENTIFIER LPAREN RPAREN .)
    CHAR            reduce using rule 25 (function_call -> IDENTIFIER LPAREN RPAREN .)
    VOID            reduce using rule 25 (function_call -> IDENTIFIER LPAREN RPAREN .)
    POUND           reduce using rule 25 (function_call -> IDENTIFIER LPAREN RPAREN .)
    USING           reduce using rule 25 (function_call -> IDENTIFIER LPAREN RPAREN .)
    INTEGER         reduce using rule 25 (function_call -> IDENTIFIER LPAREN RPAREN .)
    FLOATINGPOINT   reduce using rule 25 (function_call -> IDENTIFIER LPAREN RPAREN .)


state 82

    (26) function_call -> IDENTIFIER LPAREN expression . RPAREN
    (91) math_expression -> expression . PLUS expression
    (92) math_expression -> expression . MINUS expression
    (93) math_expression -> expression . TIMES expression
    (94) math_expression -> expression . DIVIDE expression
    (95) math_expression -> expression . MODULUS expression
    (96) math_expression -> expression . PLUS PLUS
    (97) math_expression -> expression . MINUS MINUS
    (67) conditional_expression -> expression . ISEQUAL expression
    (68) conditional_expression -> expression . NOT EQUALS expression
    (69) conditional_expression -> expression . LESS expression
    (70) conditional_expression -> expression . LESS EQUALS expression
    (71) conditional_expression -> expression . GREATER expression
    (72) conditional_expression -> expression . GREATER EQUALS expression
    (73) conditional_expression -> expression . AND expression
    (74) conditional_expression -> expression . OR expression

    RPAREN          shift and go to state 101
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    MODULUS         shift and go to state 35
    ISEQUAL         shift and go to state 36
    NOT             shift and go to state 37
    LESS            shift and go to state 38
    GREATER         shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41


state 83

    (27) function_call -> IDENTIFIER LPAREN elements . RPAREN

    RPAREN          shift and go to state 102


state 84

    (98) macro_definition -> POUND DEFINE IDENTIFIER . assignment
    (19) assignment -> . IDENTIFIER EQUALS expression
    (20) assignment -> . IDENTIFIER PLUS EQUALS expression
    (21) assignment -> . IDENTIFIER MINUS EQUALS expression

    IDENTIFIER      shift and go to state 103

    assignment                     shift and go to state 104

state 85

    (99) file_inclusion -> POUND INCLUDE LESS . HEADER GREATER
    (101) file_inclusion -> POUND INCLUDE LESS . IDENTIFIER GREATER

    HEADER          shift and go to state 105
    IDENTIFIER      shift and go to state 106


state 86

    (100) file_inclusion -> POUND INCLUDE QUOTE . HEADER QUOTE
    (102) file_inclusion -> POUND INCLUDE QUOTE . IDENTIFIER QUOTE

    HEADER          shift and go to state 107
    IDENTIFIER      shift and go to state 108


state 87

    (49) namespace_statement -> USING NAMESPACE IDENTIFIER . SEMICOLON

    SEMICOLON       shift and go to state 109


state 88

    (68) conditional_expression -> expression NOT EQUALS expression .
    (91) math_expression -> expression . PLUS expression
    (92) math_expression -> expression . MINUS expression
    (93) math_expression -> expression . TIMES expression
    (94) math_expression -> expression . DIVIDE expression
    (95) math_expression -> expression . MODULUS expression
    (96) math_expression -> expression . PLUS PLUS
    (97) math_expression -> expression . MINUS MINUS
    (67) conditional_expression -> expression . ISEQUAL expression
    (68) conditional_expression -> expression . NOT EQUALS expression
    (69) conditional_expression -> expression . LESS expression
    (70) conditional_expression -> expression . LESS EQUALS expression
    (71) conditional_expression -> expression . GREATER expression
    (72) conditional_expression -> expression . GREATER EQUALS expression
    (73) conditional_expression -> expression . AND expression
    (74) conditional_expression -> expression . OR expression

    MODULUS         reduce using rule 68 (conditional_expression -> expression NOT EQUALS expression .)
    ISEQUAL         reduce using rule 68 (conditional_expression -> expression NOT EQUALS expression .)
    NOT             reduce using rule 68 (conditional_expression -> expression NOT EQUALS expression .)
    LESS            reduce using rule 68 (conditional_expression -> expression NOT EQUALS expression .)
    GREATER         reduce using rule 68 (conditional_expression -> expression NOT EQUALS expression .)
    AND             reduce using rule 68 (conditional_expression -> expression NOT EQUALS expression .)
    OR              reduce using rule 68 (conditional_expression -> expression NOT EQUALS expression .)
    $end            reduce using rule 68 (conditional_expression -> expression NOT EQUALS expression .)
    RBRACKET        reduce using rule 68 (conditional_expression -> expression NOT EQUALS expression .)
    SEMICOLON       reduce using rule 68 (conditional_expression -> expression NOT EQUALS expression .)
    RPAREN          reduce using rule 68 (conditional_expression -> expression NOT EQUALS expression .)
    COMMA           reduce using rule 68 (conditional_expression -> expression NOT EQUALS expression .)
    BOOLEAN         reduce using rule 68 (conditional_expression -> expression NOT EQUALS expression .)
    STRING          reduce using rule 68 (conditional_expression -> expression NOT EQUALS expression .)
    IDENTIFIER      reduce using rule 68 (conditional_expression -> expression NOT EQUALS expression .)
    LETTER          reduce using rule 68 (conditional_expression -> expression NOT EQUALS expression .)
    BOOL            reduce using rule 68 (conditional_expression -> expression NOT EQUALS expression .)
    INT             reduce using rule 68 (conditional_expression -> expression NOT EQUALS expression .)
    FLOAT           reduce using rule 68 (conditional_expression -> expression NOT EQUALS expression .)
    CHAR            reduce using rule 68 (conditional_expression -> expression NOT EQUALS expression .)
    VOID            reduce using rule 68 (conditional_expression -> expression NOT EQUALS expression .)
    POUND           reduce using rule 68 (conditional_expression -> expression NOT EQUALS expression .)
    USING           reduce using rule 68 (conditional_expression -> expression NOT EQUALS expression .)
    INTEGER         reduce using rule 68 (conditional_expression -> expression NOT EQUALS expression .)
    FLOATINGPOINT   reduce using rule 68 (conditional_expression -> expression NOT EQUALS expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34

  ! PLUS            [ reduce using rule 68 (conditional_expression -> expression NOT EQUALS expression .) ]
  ! MINUS           [ reduce using rule 68 (conditional_expression -> expression NOT EQUALS expression .) ]
  ! TIMES           [ reduce using rule 68 (conditional_expression -> expression NOT EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 68 (conditional_expression -> expression NOT EQUALS expression .) ]
  ! MODULUS         [ shift and go to state 35 ]
  ! ISEQUAL         [ shift and go to state 36 ]
  ! NOT             [ shift and go to state 37 ]
  ! LESS            [ shift and go to state 38 ]
  ! GREATER         [ shift and go to state 39 ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]


state 89

    (70) conditional_expression -> expression LESS EQUALS expression .
    (91) math_expression -> expression . PLUS expression
    (92) math_expression -> expression . MINUS expression
    (93) math_expression -> expression . TIMES expression
    (94) math_expression -> expression . DIVIDE expression
    (95) math_expression -> expression . MODULUS expression
    (96) math_expression -> expression . PLUS PLUS
    (97) math_expression -> expression . MINUS MINUS
    (67) conditional_expression -> expression . ISEQUAL expression
    (68) conditional_expression -> expression . NOT EQUALS expression
    (69) conditional_expression -> expression . LESS expression
    (70) conditional_expression -> expression . LESS EQUALS expression
    (71) conditional_expression -> expression . GREATER expression
    (72) conditional_expression -> expression . GREATER EQUALS expression
    (73) conditional_expression -> expression . AND expression
    (74) conditional_expression -> expression . OR expression

    MODULUS         reduce using rule 70 (conditional_expression -> expression LESS EQUALS expression .)
    ISEQUAL         reduce using rule 70 (conditional_expression -> expression LESS EQUALS expression .)
    NOT             reduce using rule 70 (conditional_expression -> expression LESS EQUALS expression .)
    LESS            reduce using rule 70 (conditional_expression -> expression LESS EQUALS expression .)
    GREATER         reduce using rule 70 (conditional_expression -> expression LESS EQUALS expression .)
    AND             reduce using rule 70 (conditional_expression -> expression LESS EQUALS expression .)
    OR              reduce using rule 70 (conditional_expression -> expression LESS EQUALS expression .)
    $end            reduce using rule 70 (conditional_expression -> expression LESS EQUALS expression .)
    RBRACKET        reduce using rule 70 (conditional_expression -> expression LESS EQUALS expression .)
    SEMICOLON       reduce using rule 70 (conditional_expression -> expression LESS EQUALS expression .)
    RPAREN          reduce using rule 70 (conditional_expression -> expression LESS EQUALS expression .)
    COMMA           reduce using rule 70 (conditional_expression -> expression LESS EQUALS expression .)
    BOOLEAN         reduce using rule 70 (conditional_expression -> expression LESS EQUALS expression .)
    STRING          reduce using rule 70 (conditional_expression -> expression LESS EQUALS expression .)
    IDENTIFIER      reduce using rule 70 (conditional_expression -> expression LESS EQUALS expression .)
    LETTER          reduce using rule 70 (conditional_expression -> expression LESS EQUALS expression .)
    BOOL            reduce using rule 70 (conditional_expression -> expression LESS EQUALS expression .)
    INT             reduce using rule 70 (conditional_expression -> expression LESS EQUALS expression .)
    FLOAT           reduce using rule 70 (conditional_expression -> expression LESS EQUALS expression .)
    CHAR            reduce using rule 70 (conditional_expression -> expression LESS EQUALS expression .)
    VOID            reduce using rule 70 (conditional_expression -> expression LESS EQUALS expression .)
    POUND           reduce using rule 70 (conditional_expression -> expression LESS EQUALS expression .)
    USING           reduce using rule 70 (conditional_expression -> expression LESS EQUALS expression .)
    INTEGER         reduce using rule 70 (conditional_expression -> expression LESS EQUALS expression .)
    FLOATINGPOINT   reduce using rule 70 (conditional_expression -> expression LESS EQUALS expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34

  ! PLUS            [ reduce using rule 70 (conditional_expression -> expression LESS EQUALS expression .) ]
  ! MINUS           [ reduce using rule 70 (conditional_expression -> expression LESS EQUALS expression .) ]
  ! TIMES           [ reduce using rule 70 (conditional_expression -> expression LESS EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 70 (conditional_expression -> expression LESS EQUALS expression .) ]
  ! MODULUS         [ shift and go to state 35 ]
  ! ISEQUAL         [ shift and go to state 36 ]
  ! NOT             [ shift and go to state 37 ]
  ! LESS            [ shift and go to state 38 ]
  ! GREATER         [ shift and go to state 39 ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]


state 90

    (72) conditional_expression -> expression GREATER EQUALS expression .
    (91) math_expression -> expression . PLUS expression
    (92) math_expression -> expression . MINUS expression
    (93) math_expression -> expression . TIMES expression
    (94) math_expression -> expression . DIVIDE expression
    (95) math_expression -> expression . MODULUS expression
    (96) math_expression -> expression . PLUS PLUS
    (97) math_expression -> expression . MINUS MINUS
    (67) conditional_expression -> expression . ISEQUAL expression
    (68) conditional_expression -> expression . NOT EQUALS expression
    (69) conditional_expression -> expression . LESS expression
    (70) conditional_expression -> expression . LESS EQUALS expression
    (71) conditional_expression -> expression . GREATER expression
    (72) conditional_expression -> expression . GREATER EQUALS expression
    (73) conditional_expression -> expression . AND expression
    (74) conditional_expression -> expression . OR expression

    MODULUS         reduce using rule 72 (conditional_expression -> expression GREATER EQUALS expression .)
    ISEQUAL         reduce using rule 72 (conditional_expression -> expression GREATER EQUALS expression .)
    NOT             reduce using rule 72 (conditional_expression -> expression GREATER EQUALS expression .)
    LESS            reduce using rule 72 (conditional_expression -> expression GREATER EQUALS expression .)
    GREATER         reduce using rule 72 (conditional_expression -> expression GREATER EQUALS expression .)
    AND             reduce using rule 72 (conditional_expression -> expression GREATER EQUALS expression .)
    OR              reduce using rule 72 (conditional_expression -> expression GREATER EQUALS expression .)
    $end            reduce using rule 72 (conditional_expression -> expression GREATER EQUALS expression .)
    RBRACKET        reduce using rule 72 (conditional_expression -> expression GREATER EQUALS expression .)
    SEMICOLON       reduce using rule 72 (conditional_expression -> expression GREATER EQUALS expression .)
    RPAREN          reduce using rule 72 (conditional_expression -> expression GREATER EQUALS expression .)
    COMMA           reduce using rule 72 (conditional_expression -> expression GREATER EQUALS expression .)
    BOOLEAN         reduce using rule 72 (conditional_expression -> expression GREATER EQUALS expression .)
    STRING          reduce using rule 72 (conditional_expression -> expression GREATER EQUALS expression .)
    IDENTIFIER      reduce using rule 72 (conditional_expression -> expression GREATER EQUALS expression .)
    LETTER          reduce using rule 72 (conditional_expression -> expression GREATER EQUALS expression .)
    BOOL            reduce using rule 72 (conditional_expression -> expression GREATER EQUALS expression .)
    INT             reduce using rule 72 (conditional_expression -> expression GREATER EQUALS expression .)
    FLOAT           reduce using rule 72 (conditional_expression -> expression GREATER EQUALS expression .)
    CHAR            reduce using rule 72 (conditional_expression -> expression GREATER EQUALS expression .)
    VOID            reduce using rule 72 (conditional_expression -> expression GREATER EQUALS expression .)
    POUND           reduce using rule 72 (conditional_expression -> expression GREATER EQUALS expression .)
    USING           reduce using rule 72 (conditional_expression -> expression GREATER EQUALS expression .)
    INTEGER         reduce using rule 72 (conditional_expression -> expression GREATER EQUALS expression .)
    FLOATINGPOINT   reduce using rule 72 (conditional_expression -> expression GREATER EQUALS expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34

  ! PLUS            [ reduce using rule 72 (conditional_expression -> expression GREATER EQUALS expression .) ]
  ! MINUS           [ reduce using rule 72 (conditional_expression -> expression GREATER EQUALS expression .) ]
  ! TIMES           [ reduce using rule 72 (conditional_expression -> expression GREATER EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 72 (conditional_expression -> expression GREATER EQUALS expression .) ]
  ! MODULUS         [ shift and go to state 35 ]
  ! ISEQUAL         [ shift and go to state 36 ]
  ! NOT             [ shift and go to state 37 ]
  ! LESS            [ shift and go to state 38 ]
  ! GREATER         [ shift and go to state 39 ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]


state 91

    (39) argument -> type . IDENTIFIER

    IDENTIFIER      shift and go to state 110


state 92

    (34) function -> type IDENTIFIER LPAREN argument_list_option . RPAREN compound_statement

    RPAREN          shift and go to state 111


state 93

    (35) argument_list_option -> argument_list .
    (37) argument_list -> argument_list . COMMA argument

    RPAREN          reduce using rule 35 (argument_list_option -> argument_list .)
    COMMA           shift and go to state 112


state 94

    (36) argument_list_option -> empty .

    RPAREN          reduce using rule 36 (argument_list_option -> empty .)


state 95

    (38) argument_list -> argument .

    COMMA           reduce using rule 38 (argument_list -> argument .)
    RPAREN          reduce using rule 38 (argument_list -> argument .)


state 96

    (32) array_usage -> IDENTIFIER LBRACKET elements RBRACKET .

    SEMICOLON       reduce using rule 32 (array_usage -> IDENTIFIER LBRACKET elements RBRACKET .)
    PLUS            reduce using rule 32 (array_usage -> IDENTIFIER LBRACKET elements RBRACKET .)
    MINUS           reduce using rule 32 (array_usage -> IDENTIFIER LBRACKET elements RBRACKET .)
    TIMES           reduce using rule 32 (array_usage -> IDENTIFIER LBRACKET elements RBRACKET .)
    DIVIDE          reduce using rule 32 (array_usage -> IDENTIFIER LBRACKET elements RBRACKET .)
    MODULUS         reduce using rule 32 (array_usage -> IDENTIFIER LBRACKET elements RBRACKET .)
    ISEQUAL         reduce using rule 32 (array_usage -> IDENTIFIER LBRACKET elements RBRACKET .)
    NOT             reduce using rule 32 (array_usage -> IDENTIFIER LBRACKET elements RBRACKET .)
    LESS            reduce using rule 32 (array_usage -> IDENTIFIER LBRACKET elements RBRACKET .)
    GREATER         reduce using rule 32 (array_usage -> IDENTIFIER LBRACKET elements RBRACKET .)
    AND             reduce using rule 32 (array_usage -> IDENTIFIER LBRACKET elements RBRACKET .)
    OR              reduce using rule 32 (array_usage -> IDENTIFIER LBRACKET elements RBRACKET .)
    $end            reduce using rule 32 (array_usage -> IDENTIFIER LBRACKET elements RBRACKET .)
    RBRACKET        reduce using rule 32 (array_usage -> IDENTIFIER LBRACKET elements RBRACKET .)
    RPAREN          reduce using rule 32 (array_usage -> IDENTIFIER LBRACKET elements RBRACKET .)
    COMMA           reduce using rule 32 (array_usage -> IDENTIFIER LBRACKET elements RBRACKET .)
    BOOLEAN         reduce using rule 32 (array_usage -> IDENTIFIER LBRACKET elements RBRACKET .)
    STRING          reduce using rule 32 (array_usage -> IDENTIFIER LBRACKET elements RBRACKET .)
    IDENTIFIER      reduce using rule 32 (array_usage -> IDENTIFIER LBRACKET elements RBRACKET .)
    LETTER          reduce using rule 32 (array_usage -> IDENTIFIER LBRACKET elements RBRACKET .)
    BOOL            reduce using rule 32 (array_usage -> IDENTIFIER LBRACKET elements RBRACKET .)
    INT             reduce using rule 32 (array_usage -> IDENTIFIER LBRACKET elements RBRACKET .)
    FLOAT           reduce using rule 32 (array_usage -> IDENTIFIER LBRACKET elements RBRACKET .)
    CHAR            reduce using rule 32 (array_usage -> IDENTIFIER LBRACKET elements RBRACKET .)
    VOID            reduce using rule 32 (array_usage -> IDENTIFIER LBRACKET elements RBRACKET .)
    POUND           reduce using rule 32 (array_usage -> IDENTIFIER LBRACKET elements RBRACKET .)
    USING           reduce using rule 32 (array_usage -> IDENTIFIER LBRACKET elements RBRACKET .)
    INTEGER         reduce using rule 32 (array_usage -> IDENTIFIER LBRACKET elements RBRACKET .)
    FLOATINGPOINT   reduce using rule 32 (array_usage -> IDENTIFIER LBRACKET elements RBRACKET .)


state 97

    (33) array_usage -> IDENTIFIER LBRACKET expression RBRACKET .

    SEMICOLON       reduce using rule 33 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 33 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 33 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 33 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 33 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    MODULUS         reduce using rule 33 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    ISEQUAL         reduce using rule 33 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    NOT             reduce using rule 33 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    LESS            reduce using rule 33 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    GREATER         reduce using rule 33 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    AND             reduce using rule 33 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    OR              reduce using rule 33 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    $end            reduce using rule 33 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 33 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 33 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 33 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    BOOLEAN         reduce using rule 33 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    STRING          reduce using rule 33 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    IDENTIFIER      reduce using rule 33 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    LETTER          reduce using rule 33 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    BOOL            reduce using rule 33 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    INT             reduce using rule 33 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    FLOAT           reduce using rule 33 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    CHAR            reduce using rule 33 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    VOID            reduce using rule 33 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    POUND           reduce using rule 33 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    USING           reduce using rule 33 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    INTEGER         reduce using rule 33 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)
    FLOATINGPOINT   reduce using rule 33 (array_usage -> IDENTIFIER LBRACKET expression RBRACKET .)


state 98

    (28) elements -> COMMA expression .
    (29) elements -> COMMA expression . elements
    (91) math_expression -> expression . PLUS expression
    (92) math_expression -> expression . MINUS expression
    (93) math_expression -> expression . TIMES expression
    (94) math_expression -> expression . DIVIDE expression
    (95) math_expression -> expression . MODULUS expression
    (96) math_expression -> expression . PLUS PLUS
    (97) math_expression -> expression . MINUS MINUS
    (67) conditional_expression -> expression . ISEQUAL expression
    (68) conditional_expression -> expression . NOT EQUALS expression
    (69) conditional_expression -> expression . LESS expression
    (70) conditional_expression -> expression . LESS EQUALS expression
    (71) conditional_expression -> expression . GREATER expression
    (72) conditional_expression -> expression . GREATER EQUALS expression
    (73) conditional_expression -> expression . AND expression
    (74) conditional_expression -> expression . OR expression
    (28) elements -> . COMMA expression
    (29) elements -> . COMMA expression elements

    RBRACKET        reduce using rule 28 (elements -> COMMA expression .)
    RPAREN          reduce using rule 28 (elements -> COMMA expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    MODULUS         shift and go to state 35
    ISEQUAL         shift and go to state 36
    NOT             shift and go to state 37
    LESS            shift and go to state 38
    GREATER         shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41
    COMMA           shift and go to state 77

    elements                       shift and go to state 113

state 99

    (20) assignment -> IDENTIFIER PLUS EQUALS expression .
    (91) math_expression -> expression . PLUS expression
    (92) math_expression -> expression . MINUS expression
    (93) math_expression -> expression . TIMES expression
    (94) math_expression -> expression . DIVIDE expression
    (95) math_expression -> expression . MODULUS expression
    (96) math_expression -> expression . PLUS PLUS
    (97) math_expression -> expression . MINUS MINUS
    (67) conditional_expression -> expression . ISEQUAL expression
    (68) conditional_expression -> expression . NOT EQUALS expression
    (69) conditional_expression -> expression . LESS expression
    (70) conditional_expression -> expression . LESS EQUALS expression
    (71) conditional_expression -> expression . GREATER expression
    (72) conditional_expression -> expression . GREATER EQUALS expression
    (73) conditional_expression -> expression . AND expression
    (74) conditional_expression -> expression . OR expression

    MODULUS         reduce using rule 20 (assignment -> IDENTIFIER PLUS EQUALS expression .)
    ISEQUAL         reduce using rule 20 (assignment -> IDENTIFIER PLUS EQUALS expression .)
    NOT             reduce using rule 20 (assignment -> IDENTIFIER PLUS EQUALS expression .)
    LESS            reduce using rule 20 (assignment -> IDENTIFIER PLUS EQUALS expression .)
    GREATER         reduce using rule 20 (assignment -> IDENTIFIER PLUS EQUALS expression .)
    AND             reduce using rule 20 (assignment -> IDENTIFIER PLUS EQUALS expression .)
    OR              reduce using rule 20 (assignment -> IDENTIFIER PLUS EQUALS expression .)
    $end            reduce using rule 20 (assignment -> IDENTIFIER PLUS EQUALS expression .)
    SEMICOLON       reduce using rule 20 (assignment -> IDENTIFIER PLUS EQUALS expression .)
    RBRACKET        reduce using rule 20 (assignment -> IDENTIFIER PLUS EQUALS expression .)
    RPAREN          reduce using rule 20 (assignment -> IDENTIFIER PLUS EQUALS expression .)
    COMMA           reduce using rule 20 (assignment -> IDENTIFIER PLUS EQUALS expression .)
    BOOLEAN         reduce using rule 20 (assignment -> IDENTIFIER PLUS EQUALS expression .)
    STRING          reduce using rule 20 (assignment -> IDENTIFIER PLUS EQUALS expression .)
    IDENTIFIER      reduce using rule 20 (assignment -> IDENTIFIER PLUS EQUALS expression .)
    LETTER          reduce using rule 20 (assignment -> IDENTIFIER PLUS EQUALS expression .)
    BOOL            reduce using rule 20 (assignment -> IDENTIFIER PLUS EQUALS expression .)
    INT             reduce using rule 20 (assignment -> IDENTIFIER PLUS EQUALS expression .)
    FLOAT           reduce using rule 20 (assignment -> IDENTIFIER PLUS EQUALS expression .)
    CHAR            reduce using rule 20 (assignment -> IDENTIFIER PLUS EQUALS expression .)
    VOID            reduce using rule 20 (assignment -> IDENTIFIER PLUS EQUALS expression .)
    POUND           reduce using rule 20 (assignment -> IDENTIFIER PLUS EQUALS expression .)
    USING           reduce using rule 20 (assignment -> IDENTIFIER PLUS EQUALS expression .)
    INTEGER         reduce using rule 20 (assignment -> IDENTIFIER PLUS EQUALS expression .)
    FLOATINGPOINT   reduce using rule 20 (assignment -> IDENTIFIER PLUS EQUALS expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34

  ! PLUS            [ reduce using rule 20 (assignment -> IDENTIFIER PLUS EQUALS expression .) ]
  ! MINUS           [ reduce using rule 20 (assignment -> IDENTIFIER PLUS EQUALS expression .) ]
  ! TIMES           [ reduce using rule 20 (assignment -> IDENTIFIER PLUS EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 20 (assignment -> IDENTIFIER PLUS EQUALS expression .) ]
  ! MODULUS         [ shift and go to state 35 ]
  ! ISEQUAL         [ shift and go to state 36 ]
  ! NOT             [ shift and go to state 37 ]
  ! LESS            [ shift and go to state 38 ]
  ! GREATER         [ shift and go to state 39 ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]


state 100

    (21) assignment -> IDENTIFIER MINUS EQUALS expression .
    (91) math_expression -> expression . PLUS expression
    (92) math_expression -> expression . MINUS expression
    (93) math_expression -> expression . TIMES expression
    (94) math_expression -> expression . DIVIDE expression
    (95) math_expression -> expression . MODULUS expression
    (96) math_expression -> expression . PLUS PLUS
    (97) math_expression -> expression . MINUS MINUS
    (67) conditional_expression -> expression . ISEQUAL expression
    (68) conditional_expression -> expression . NOT EQUALS expression
    (69) conditional_expression -> expression . LESS expression
    (70) conditional_expression -> expression . LESS EQUALS expression
    (71) conditional_expression -> expression . GREATER expression
    (72) conditional_expression -> expression . GREATER EQUALS expression
    (73) conditional_expression -> expression . AND expression
    (74) conditional_expression -> expression . OR expression

    MODULUS         reduce using rule 21 (assignment -> IDENTIFIER MINUS EQUALS expression .)
    ISEQUAL         reduce using rule 21 (assignment -> IDENTIFIER MINUS EQUALS expression .)
    NOT             reduce using rule 21 (assignment -> IDENTIFIER MINUS EQUALS expression .)
    LESS            reduce using rule 21 (assignment -> IDENTIFIER MINUS EQUALS expression .)
    GREATER         reduce using rule 21 (assignment -> IDENTIFIER MINUS EQUALS expression .)
    AND             reduce using rule 21 (assignment -> IDENTIFIER MINUS EQUALS expression .)
    OR              reduce using rule 21 (assignment -> IDENTIFIER MINUS EQUALS expression .)
    $end            reduce using rule 21 (assignment -> IDENTIFIER MINUS EQUALS expression .)
    SEMICOLON       reduce using rule 21 (assignment -> IDENTIFIER MINUS EQUALS expression .)
    RBRACKET        reduce using rule 21 (assignment -> IDENTIFIER MINUS EQUALS expression .)
    RPAREN          reduce using rule 21 (assignment -> IDENTIFIER MINUS EQUALS expression .)
    COMMA           reduce using rule 21 (assignment -> IDENTIFIER MINUS EQUALS expression .)
    BOOLEAN         reduce using rule 21 (assignment -> IDENTIFIER MINUS EQUALS expression .)
    STRING          reduce using rule 21 (assignment -> IDENTIFIER MINUS EQUALS expression .)
    IDENTIFIER      reduce using rule 21 (assignment -> IDENTIFIER MINUS EQUALS expression .)
    LETTER          reduce using rule 21 (assignment -> IDENTIFIER MINUS EQUALS expression .)
    BOOL            reduce using rule 21 (assignment -> IDENTIFIER MINUS EQUALS expression .)
    INT             reduce using rule 21 (assignment -> IDENTIFIER MINUS EQUALS expression .)
    FLOAT           reduce using rule 21 (assignment -> IDENTIFIER MINUS EQUALS expression .)
    CHAR            reduce using rule 21 (assignment -> IDENTIFIER MINUS EQUALS expression .)
    VOID            reduce using rule 21 (assignment -> IDENTIFIER MINUS EQUALS expression .)
    POUND           reduce using rule 21 (assignment -> IDENTIFIER MINUS EQUALS expression .)
    USING           reduce using rule 21 (assignment -> IDENTIFIER MINUS EQUALS expression .)
    INTEGER         reduce using rule 21 (assignment -> IDENTIFIER MINUS EQUALS expression .)
    FLOATINGPOINT   reduce using rule 21 (assignment -> IDENTIFIER MINUS EQUALS expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34

  ! PLUS            [ reduce using rule 21 (assignment -> IDENTIFIER MINUS EQUALS expression .) ]
  ! MINUS           [ reduce using rule 21 (assignment -> IDENTIFIER MINUS EQUALS expression .) ]
  ! TIMES           [ reduce using rule 21 (assignment -> IDENTIFIER MINUS EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 21 (assignment -> IDENTIFIER MINUS EQUALS expression .) ]
  ! MODULUS         [ shift and go to state 35 ]
  ! ISEQUAL         [ shift and go to state 36 ]
  ! NOT             [ shift and go to state 37 ]
  ! LESS            [ shift and go to state 38 ]
  ! GREATER         [ shift and go to state 39 ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]


state 101

    (26) function_call -> IDENTIFIER LPAREN expression RPAREN .

    PLUS            reduce using rule 26 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    MINUS           reduce using rule 26 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    TIMES           reduce using rule 26 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 26 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    MODULUS         reduce using rule 26 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    ISEQUAL         reduce using rule 26 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    NOT             reduce using rule 26 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    LESS            reduce using rule 26 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    GREATER         reduce using rule 26 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    AND             reduce using rule 26 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    OR              reduce using rule 26 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    $end            reduce using rule 26 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 26 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 26 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    RPAREN          reduce using rule 26 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    COMMA           reduce using rule 26 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    BOOLEAN         reduce using rule 26 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    STRING          reduce using rule 26 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    IDENTIFIER      reduce using rule 26 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    LETTER          reduce using rule 26 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    BOOL            reduce using rule 26 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    INT             reduce using rule 26 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    FLOAT           reduce using rule 26 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    CHAR            reduce using rule 26 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    VOID            reduce using rule 26 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    POUND           reduce using rule 26 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    USING           reduce using rule 26 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    INTEGER         reduce using rule 26 (function_call -> IDENTIFIER LPAREN expression RPAREN .)
    FLOATINGPOINT   reduce using rule 26 (function_call -> IDENTIFIER LPAREN expression RPAREN .)


state 102

    (27) function_call -> IDENTIFIER LPAREN elements RPAREN .

    PLUS            reduce using rule 27 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    MINUS           reduce using rule 27 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    TIMES           reduce using rule 27 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    DIVIDE          reduce using rule 27 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    MODULUS         reduce using rule 27 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    ISEQUAL         reduce using rule 27 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    NOT             reduce using rule 27 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    LESS            reduce using rule 27 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    GREATER         reduce using rule 27 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    AND             reduce using rule 27 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    OR              reduce using rule 27 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    $end            reduce using rule 27 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    RBRACKET        reduce using rule 27 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    SEMICOLON       reduce using rule 27 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    RPAREN          reduce using rule 27 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    COMMA           reduce using rule 27 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    BOOLEAN         reduce using rule 27 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    STRING          reduce using rule 27 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    IDENTIFIER      reduce using rule 27 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    LETTER          reduce using rule 27 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    BOOL            reduce using rule 27 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    INT             reduce using rule 27 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    FLOAT           reduce using rule 27 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    CHAR            reduce using rule 27 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    VOID            reduce using rule 27 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    POUND           reduce using rule 27 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    USING           reduce using rule 27 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    INTEGER         reduce using rule 27 (function_call -> IDENTIFIER LPAREN elements RPAREN .)
    FLOATINGPOINT   reduce using rule 27 (function_call -> IDENTIFIER LPAREN elements RPAREN .)


state 103

    (19) assignment -> IDENTIFIER . EQUALS expression
    (20) assignment -> IDENTIFIER . PLUS EQUALS expression
    (21) assignment -> IDENTIFIER . MINUS EQUALS expression

    EQUALS          shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48


state 104

    (98) macro_definition -> POUND DEFINE IDENTIFIER assignment .

    BOOLEAN         reduce using rule 98 (macro_definition -> POUND DEFINE IDENTIFIER assignment .)
    STRING          reduce using rule 98 (macro_definition -> POUND DEFINE IDENTIFIER assignment .)
    IDENTIFIER      reduce using rule 98 (macro_definition -> POUND DEFINE IDENTIFIER assignment .)
    LETTER          reduce using rule 98 (macro_definition -> POUND DEFINE IDENTIFIER assignment .)
    BOOL            reduce using rule 98 (macro_definition -> POUND DEFINE IDENTIFIER assignment .)
    INT             reduce using rule 98 (macro_definition -> POUND DEFINE IDENTIFIER assignment .)
    FLOAT           reduce using rule 98 (macro_definition -> POUND DEFINE IDENTIFIER assignment .)
    CHAR            reduce using rule 98 (macro_definition -> POUND DEFINE IDENTIFIER assignment .)
    VOID            reduce using rule 98 (macro_definition -> POUND DEFINE IDENTIFIER assignment .)
    POUND           reduce using rule 98 (macro_definition -> POUND DEFINE IDENTIFIER assignment .)
    USING           reduce using rule 98 (macro_definition -> POUND DEFINE IDENTIFIER assignment .)
    INTEGER         reduce using rule 98 (macro_definition -> POUND DEFINE IDENTIFIER assignment .)
    FLOATINGPOINT   reduce using rule 98 (macro_definition -> POUND DEFINE IDENTIFIER assignment .)
    NOT             reduce using rule 98 (macro_definition -> POUND DEFINE IDENTIFIER assignment .)
    $end            reduce using rule 98 (macro_definition -> POUND DEFINE IDENTIFIER assignment .)


state 105

    (99) file_inclusion -> POUND INCLUDE LESS HEADER . GREATER

    GREATER         shift and go to state 114


state 106

    (101) file_inclusion -> POUND INCLUDE LESS IDENTIFIER . GREATER

    GREATER         shift and go to state 115


state 107

    (100) file_inclusion -> POUND INCLUDE QUOTE HEADER . QUOTE

    QUOTE           shift and go to state 116


state 108

    (102) file_inclusion -> POUND INCLUDE QUOTE IDENTIFIER . QUOTE

    QUOTE           shift and go to state 117


state 109

    (49) namespace_statement -> USING NAMESPACE IDENTIFIER SEMICOLON .

    BOOLEAN         reduce using rule 49 (namespace_statement -> USING NAMESPACE IDENTIFIER SEMICOLON .)
    STRING          reduce using rule 49 (namespace_statement -> USING NAMESPACE IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 49 (namespace_statement -> USING NAMESPACE IDENTIFIER SEMICOLON .)
    LETTER          reduce using rule 49 (namespace_statement -> USING NAMESPACE IDENTIFIER SEMICOLON .)
    BOOL            reduce using rule 49 (namespace_statement -> USING NAMESPACE IDENTIFIER SEMICOLON .)
    INT             reduce using rule 49 (namespace_statement -> USING NAMESPACE IDENTIFIER SEMICOLON .)
    FLOAT           reduce using rule 49 (namespace_statement -> USING NAMESPACE IDENTIFIER SEMICOLON .)
    CHAR            reduce using rule 49 (namespace_statement -> USING NAMESPACE IDENTIFIER SEMICOLON .)
    VOID            reduce using rule 49 (namespace_statement -> USING NAMESPACE IDENTIFIER SEMICOLON .)
    POUND           reduce using rule 49 (namespace_statement -> USING NAMESPACE IDENTIFIER SEMICOLON .)
    USING           reduce using rule 49 (namespace_statement -> USING NAMESPACE IDENTIFIER SEMICOLON .)
    INTEGER         reduce using rule 49 (namespace_statement -> USING NAMESPACE IDENTIFIER SEMICOLON .)
    FLOATINGPOINT   reduce using rule 49 (namespace_statement -> USING NAMESPACE IDENTIFIER SEMICOLON .)
    NOT             reduce using rule 49 (namespace_statement -> USING NAMESPACE IDENTIFIER SEMICOLON .)
    $end            reduce using rule 49 (namespace_statement -> USING NAMESPACE IDENTIFIER SEMICOLON .)


state 110

    (39) argument -> type IDENTIFIER .

    COMMA           reduce using rule 39 (argument -> type IDENTIFIER .)
    RPAREN          reduce using rule 39 (argument -> type IDENTIFIER .)


state 111

    (34) function -> type IDENTIFIER LPAREN argument_list_option RPAREN . compound_statement
    (40) compound_statement -> . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 119

    compound_statement             shift and go to state 118

state 112

    (37) argument_list -> argument_list COMMA . argument
    (39) argument -> . type IDENTIFIER
    (86) type -> . BOOL
    (87) type -> . INT
    (88) type -> . FLOAT
    (89) type -> . CHAR
    (90) type -> . VOID

    BOOL            shift and go to state 19
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22
    VOID            shift and go to state 23

    argument                       shift and go to state 120
    type                           shift and go to state 91

state 113

    (29) elements -> COMMA expression elements .

    RBRACKET        reduce using rule 29 (elements -> COMMA expression elements .)
    RPAREN          reduce using rule 29 (elements -> COMMA expression elements .)


state 114

    (99) file_inclusion -> POUND INCLUDE LESS HEADER GREATER .

    BOOLEAN         reduce using rule 99 (file_inclusion -> POUND INCLUDE LESS HEADER GREATER .)
    STRING          reduce using rule 99 (file_inclusion -> POUND INCLUDE LESS HEADER GREATER .)
    IDENTIFIER      reduce using rule 99 (file_inclusion -> POUND INCLUDE LESS HEADER GREATER .)
    LETTER          reduce using rule 99 (file_inclusion -> POUND INCLUDE LESS HEADER GREATER .)
    BOOL            reduce using rule 99 (file_inclusion -> POUND INCLUDE LESS HEADER GREATER .)
    INT             reduce using rule 99 (file_inclusion -> POUND INCLUDE LESS HEADER GREATER .)
    FLOAT           reduce using rule 99 (file_inclusion -> POUND INCLUDE LESS HEADER GREATER .)
    CHAR            reduce using rule 99 (file_inclusion -> POUND INCLUDE LESS HEADER GREATER .)
    VOID            reduce using rule 99 (file_inclusion -> POUND INCLUDE LESS HEADER GREATER .)
    POUND           reduce using rule 99 (file_inclusion -> POUND INCLUDE LESS HEADER GREATER .)
    USING           reduce using rule 99 (file_inclusion -> POUND INCLUDE LESS HEADER GREATER .)
    INTEGER         reduce using rule 99 (file_inclusion -> POUND INCLUDE LESS HEADER GREATER .)
    FLOATINGPOINT   reduce using rule 99 (file_inclusion -> POUND INCLUDE LESS HEADER GREATER .)
    NOT             reduce using rule 99 (file_inclusion -> POUND INCLUDE LESS HEADER GREATER .)
    $end            reduce using rule 99 (file_inclusion -> POUND INCLUDE LESS HEADER GREATER .)


state 115

    (101) file_inclusion -> POUND INCLUDE LESS IDENTIFIER GREATER .

    BOOLEAN         reduce using rule 101 (file_inclusion -> POUND INCLUDE LESS IDENTIFIER GREATER .)
    STRING          reduce using rule 101 (file_inclusion -> POUND INCLUDE LESS IDENTIFIER GREATER .)
    IDENTIFIER      reduce using rule 101 (file_inclusion -> POUND INCLUDE LESS IDENTIFIER GREATER .)
    LETTER          reduce using rule 101 (file_inclusion -> POUND INCLUDE LESS IDENTIFIER GREATER .)
    BOOL            reduce using rule 101 (file_inclusion -> POUND INCLUDE LESS IDENTIFIER GREATER .)
    INT             reduce using rule 101 (file_inclusion -> POUND INCLUDE LESS IDENTIFIER GREATER .)
    FLOAT           reduce using rule 101 (file_inclusion -> POUND INCLUDE LESS IDENTIFIER GREATER .)
    CHAR            reduce using rule 101 (file_inclusion -> POUND INCLUDE LESS IDENTIFIER GREATER .)
    VOID            reduce using rule 101 (file_inclusion -> POUND INCLUDE LESS IDENTIFIER GREATER .)
    POUND           reduce using rule 101 (file_inclusion -> POUND INCLUDE LESS IDENTIFIER GREATER .)
    USING           reduce using rule 101 (file_inclusion -> POUND INCLUDE LESS IDENTIFIER GREATER .)
    INTEGER         reduce using rule 101 (file_inclusion -> POUND INCLUDE LESS IDENTIFIER GREATER .)
    FLOATINGPOINT   reduce using rule 101 (file_inclusion -> POUND INCLUDE LESS IDENTIFIER GREATER .)
    NOT             reduce using rule 101 (file_inclusion -> POUND INCLUDE LESS IDENTIFIER GREATER .)
    $end            reduce using rule 101 (file_inclusion -> POUND INCLUDE LESS IDENTIFIER GREATER .)


state 116

    (100) file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE .

    BOOLEAN         reduce using rule 100 (file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE .)
    STRING          reduce using rule 100 (file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE .)
    IDENTIFIER      reduce using rule 100 (file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE .)
    LETTER          reduce using rule 100 (file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE .)
    BOOL            reduce using rule 100 (file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE .)
    INT             reduce using rule 100 (file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE .)
    FLOAT           reduce using rule 100 (file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE .)
    CHAR            reduce using rule 100 (file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE .)
    VOID            reduce using rule 100 (file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE .)
    POUND           reduce using rule 100 (file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE .)
    USING           reduce using rule 100 (file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE .)
    INTEGER         reduce using rule 100 (file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE .)
    FLOATINGPOINT   reduce using rule 100 (file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE .)
    NOT             reduce using rule 100 (file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE .)
    $end            reduce using rule 100 (file_inclusion -> POUND INCLUDE QUOTE HEADER QUOTE .)


state 117

    (102) file_inclusion -> POUND INCLUDE QUOTE IDENTIFIER QUOTE .

    BOOLEAN         reduce using rule 102 (file_inclusion -> POUND INCLUDE QUOTE IDENTIFIER QUOTE .)
    STRING          reduce using rule 102 (file_inclusion -> POUND INCLUDE QUOTE IDENTIFIER QUOTE .)
    IDENTIFIER      reduce using rule 102 (file_inclusion -> POUND INCLUDE QUOTE IDENTIFIER QUOTE .)
    LETTER          reduce using rule 102 (file_inclusion -> POUND INCLUDE QUOTE IDENTIFIER QUOTE .)
    BOOL            reduce using rule 102 (file_inclusion -> POUND INCLUDE QUOTE IDENTIFIER QUOTE .)
    INT             reduce using rule 102 (file_inclusion -> POUND INCLUDE QUOTE IDENTIFIER QUOTE .)
    FLOAT           reduce using rule 102 (file_inclusion -> POUND INCLUDE QUOTE IDENTIFIER QUOTE .)
    CHAR            reduce using rule 102 (file_inclusion -> POUND INCLUDE QUOTE IDENTIFIER QUOTE .)
    VOID            reduce using rule 102 (file_inclusion -> POUND INCLUDE QUOTE IDENTIFIER QUOTE .)
    POUND           reduce using rule 102 (file_inclusion -> POUND INCLUDE QUOTE IDENTIFIER QUOTE .)
    USING           reduce using rule 102 (file_inclusion -> POUND INCLUDE QUOTE IDENTIFIER QUOTE .)
    INTEGER         reduce using rule 102 (file_inclusion -> POUND INCLUDE QUOTE IDENTIFIER QUOTE .)
    FLOATINGPOINT   reduce using rule 102 (file_inclusion -> POUND INCLUDE QUOTE IDENTIFIER QUOTE .)
    NOT             reduce using rule 102 (file_inclusion -> POUND INCLUDE QUOTE IDENTIFIER QUOTE .)
    $end            reduce using rule 102 (file_inclusion -> POUND INCLUDE QUOTE IDENTIFIER QUOTE .)


state 118

    (34) function -> type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement .

    BOOLEAN         reduce using rule 34 (function -> type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement .)
    STRING          reduce using rule 34 (function -> type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement .)
    IDENTIFIER      reduce using rule 34 (function -> type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement .)
    LETTER          reduce using rule 34 (function -> type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement .)
    BOOL            reduce using rule 34 (function -> type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement .)
    INT             reduce using rule 34 (function -> type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement .)
    FLOAT           reduce using rule 34 (function -> type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement .)
    CHAR            reduce using rule 34 (function -> type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement .)
    VOID            reduce using rule 34 (function -> type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement .)
    POUND           reduce using rule 34 (function -> type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement .)
    USING           reduce using rule 34 (function -> type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement .)
    INTEGER         reduce using rule 34 (function -> type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement .)
    FLOATINGPOINT   reduce using rule 34 (function -> type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement .)
    NOT             reduce using rule 34 (function -> type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement .)
    $end            reduce using rule 34 (function -> type IDENTIFIER LPAREN argument_list_option RPAREN compound_statement .)


state 119

    (40) compound_statement -> LBRACE . statement_list RBRACE
    (41) statement_list -> . statement_list statement
    (42) statement_list -> . empty
    (103) empty -> .

    RBRACE          reduce using rule 103 (empty -> .)
    WHILE           reduce using rule 103 (empty -> .)
    DO              reduce using rule 103 (empty -> .)
    FOR             reduce using rule 103 (empty -> .)
    IF              reduce using rule 103 (empty -> .)
    RETURN          reduce using rule 103 (empty -> .)
    COUT            reduce using rule 103 (empty -> .)
    CIN             reduce using rule 103 (empty -> .)
    BOOL            reduce using rule 103 (empty -> .)
    INT             reduce using rule 103 (empty -> .)
    FLOAT           reduce using rule 103 (empty -> .)
    CHAR            reduce using rule 103 (empty -> .)
    VOID            reduce using rule 103 (empty -> .)
    IDENTIFIER      reduce using rule 103 (empty -> .)

    statement_list                 shift and go to state 121
    empty                          shift and go to state 122

state 120

    (37) argument_list -> argument_list COMMA argument .

    COMMA           reduce using rule 37 (argument_list -> argument_list COMMA argument .)
    RPAREN          reduce using rule 37 (argument_list -> argument_list COMMA argument .)


state 121

    (40) compound_statement -> LBRACE statement_list . RBRACE
    (41) statement_list -> statement_list . statement
    (43) statement -> . iteration_statement
    (44) statement -> . declaration
    (45) statement -> . selection_statement
    (46) statement -> . return_statement
    (47) statement -> . cout_statement
    (48) statement -> . cin_statement
    (53) iteration_statement -> . WHILE LPAREN expression RPAREN compound_statement
    (54) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (55) iteration_statement -> . DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON
    (56) iteration_statement -> . DO statement WHILE LPAREN expression RPAREN SEMICOLON
    (57) iteration_statement -> . FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN compound_statement
    (58) iteration_statement -> . FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN statement
    (12) declaration -> . type IDENTIFIER SEMICOLON
    (13) declaration -> . type IDENTIFIER identifiers SEMICOLON
    (14) declaration -> . type assignment SEMICOLON
    (15) declaration -> . assignment SEMICOLON
    (16) declaration -> . function_call SEMICOLON
    (17) declaration -> . array_usage SEMICOLON
    (18) declaration -> . type array_usage SEMICOLON
    (59) selection_statement -> . IF LPAREN expression RPAREN compound_statement
    (60) selection_statement -> . IF LPAREN expression RPAREN statement
    (61) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE compound_statement
    (62) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE statement
    (63) selection_statement -> . IF LPAREN expression RPAREN statement ELSE compound_statement
    (64) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (65) return_statement -> . RETURN SEMICOLON
    (66) return_statement -> . RETURN expression SEMICOLON
    (51) cout_statement -> . COUT LESS LESS expression SEMICOLON
    (52) cout_statement -> . COUT LESS LESS expression LESS LESS expression SEMICOLON
    (50) cin_statement -> . CIN GREATER GREATER IDENTIFIER SEMICOLON
    (86) type -> . BOOL
    (87) type -> . INT
    (88) type -> . FLOAT
    (89) type -> . CHAR
    (90) type -> . VOID
    (19) assignment -> . IDENTIFIER EQUALS expression
    (20) assignment -> . IDENTIFIER PLUS EQUALS expression
    (21) assignment -> . IDENTIFIER MINUS EQUALS expression
    (25) function_call -> . IDENTIFIER LPAREN RPAREN
    (26) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (27) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (32) array_usage -> . IDENTIFIER LBRACKET elements RBRACKET
    (33) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET

    RBRACE          shift and go to state 123
    WHILE           shift and go to state 131
    DO              shift and go to state 132
    FOR             shift and go to state 133
    IF              shift and go to state 139
    RETURN          shift and go to state 140
    COUT            shift and go to state 141
    CIN             shift and go to state 142
    BOOL            shift and go to state 19
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22
    VOID            shift and go to state 23
    IDENTIFIER      shift and go to state 135

    statement                      shift and go to state 124
    iteration_statement            shift and go to state 125
    declaration                    shift and go to state 126
    selection_statement            shift and go to state 127
    return_statement               shift and go to state 128
    cout_statement                 shift and go to state 129
    cin_statement                  shift and go to state 130
    type                           shift and go to state 134
    assignment                     shift and go to state 136
    function_call                  shift and go to state 137
    array_usage                    shift and go to state 138

state 122

    (42) statement_list -> empty .

    RBRACE          reduce using rule 42 (statement_list -> empty .)
    WHILE           reduce using rule 42 (statement_list -> empty .)
    DO              reduce using rule 42 (statement_list -> empty .)
    FOR             reduce using rule 42 (statement_list -> empty .)
    IF              reduce using rule 42 (statement_list -> empty .)
    RETURN          reduce using rule 42 (statement_list -> empty .)
    COUT            reduce using rule 42 (statement_list -> empty .)
    CIN             reduce using rule 42 (statement_list -> empty .)
    BOOL            reduce using rule 42 (statement_list -> empty .)
    INT             reduce using rule 42 (statement_list -> empty .)
    FLOAT           reduce using rule 42 (statement_list -> empty .)
    CHAR            reduce using rule 42 (statement_list -> empty .)
    VOID            reduce using rule 42 (statement_list -> empty .)
    IDENTIFIER      reduce using rule 42 (statement_list -> empty .)


state 123

    (40) compound_statement -> LBRACE statement_list RBRACE .

    BOOLEAN         reduce using rule 40 (compound_statement -> LBRACE statement_list RBRACE .)
    STRING          reduce using rule 40 (compound_statement -> LBRACE statement_list RBRACE .)
    IDENTIFIER      reduce using rule 40 (compound_statement -> LBRACE statement_list RBRACE .)
    LETTER          reduce using rule 40 (compound_statement -> LBRACE statement_list RBRACE .)
    BOOL            reduce using rule 40 (compound_statement -> LBRACE statement_list RBRACE .)
    INT             reduce using rule 40 (compound_statement -> LBRACE statement_list RBRACE .)
    FLOAT           reduce using rule 40 (compound_statement -> LBRACE statement_list RBRACE .)
    CHAR            reduce using rule 40 (compound_statement -> LBRACE statement_list RBRACE .)
    VOID            reduce using rule 40 (compound_statement -> LBRACE statement_list RBRACE .)
    POUND           reduce using rule 40 (compound_statement -> LBRACE statement_list RBRACE .)
    USING           reduce using rule 40 (compound_statement -> LBRACE statement_list RBRACE .)
    INTEGER         reduce using rule 40 (compound_statement -> LBRACE statement_list RBRACE .)
    FLOATINGPOINT   reduce using rule 40 (compound_statement -> LBRACE statement_list RBRACE .)
    NOT             reduce using rule 40 (compound_statement -> LBRACE statement_list RBRACE .)
    $end            reduce using rule 40 (compound_statement -> LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 40 (compound_statement -> LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 40 (compound_statement -> LBRACE statement_list RBRACE .)
    DO              reduce using rule 40 (compound_statement -> LBRACE statement_list RBRACE .)
    FOR             reduce using rule 40 (compound_statement -> LBRACE statement_list RBRACE .)
    IF              reduce using rule 40 (compound_statement -> LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 40 (compound_statement -> LBRACE statement_list RBRACE .)
    COUT            reduce using rule 40 (compound_statement -> LBRACE statement_list RBRACE .)
    CIN             reduce using rule 40 (compound_statement -> LBRACE statement_list RBRACE .)
    ELSE            reduce using rule 40 (compound_statement -> LBRACE statement_list RBRACE .)


state 124

    (41) statement_list -> statement_list statement .

    RBRACE          reduce using rule 41 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 41 (statement_list -> statement_list statement .)
    DO              reduce using rule 41 (statement_list -> statement_list statement .)
    FOR             reduce using rule 41 (statement_list -> statement_list statement .)
    IF              reduce using rule 41 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 41 (statement_list -> statement_list statement .)
    COUT            reduce using rule 41 (statement_list -> statement_list statement .)
    CIN             reduce using rule 41 (statement_list -> statement_list statement .)
    BOOL            reduce using rule 41 (statement_list -> statement_list statement .)
    INT             reduce using rule 41 (statement_list -> statement_list statement .)
    FLOAT           reduce using rule 41 (statement_list -> statement_list statement .)
    CHAR            reduce using rule 41 (statement_list -> statement_list statement .)
    VOID            reduce using rule 41 (statement_list -> statement_list statement .)
    IDENTIFIER      reduce using rule 41 (statement_list -> statement_list statement .)


state 125

    (43) statement -> iteration_statement .

    RBRACE          reduce using rule 43 (statement -> iteration_statement .)
    WHILE           reduce using rule 43 (statement -> iteration_statement .)
    DO              reduce using rule 43 (statement -> iteration_statement .)
    FOR             reduce using rule 43 (statement -> iteration_statement .)
    IF              reduce using rule 43 (statement -> iteration_statement .)
    RETURN          reduce using rule 43 (statement -> iteration_statement .)
    COUT            reduce using rule 43 (statement -> iteration_statement .)
    CIN             reduce using rule 43 (statement -> iteration_statement .)
    BOOL            reduce using rule 43 (statement -> iteration_statement .)
    INT             reduce using rule 43 (statement -> iteration_statement .)
    FLOAT           reduce using rule 43 (statement -> iteration_statement .)
    CHAR            reduce using rule 43 (statement -> iteration_statement .)
    VOID            reduce using rule 43 (statement -> iteration_statement .)
    IDENTIFIER      reduce using rule 43 (statement -> iteration_statement .)
    ELSE            reduce using rule 43 (statement -> iteration_statement .)


state 126

    (44) statement -> declaration .

    RBRACE          reduce using rule 44 (statement -> declaration .)
    WHILE           reduce using rule 44 (statement -> declaration .)
    DO              reduce using rule 44 (statement -> declaration .)
    FOR             reduce using rule 44 (statement -> declaration .)
    IF              reduce using rule 44 (statement -> declaration .)
    RETURN          reduce using rule 44 (statement -> declaration .)
    COUT            reduce using rule 44 (statement -> declaration .)
    CIN             reduce using rule 44 (statement -> declaration .)
    BOOL            reduce using rule 44 (statement -> declaration .)
    INT             reduce using rule 44 (statement -> declaration .)
    FLOAT           reduce using rule 44 (statement -> declaration .)
    CHAR            reduce using rule 44 (statement -> declaration .)
    VOID            reduce using rule 44 (statement -> declaration .)
    IDENTIFIER      reduce using rule 44 (statement -> declaration .)
    ELSE            reduce using rule 44 (statement -> declaration .)


state 127

    (45) statement -> selection_statement .

    RBRACE          reduce using rule 45 (statement -> selection_statement .)
    WHILE           reduce using rule 45 (statement -> selection_statement .)
    DO              reduce using rule 45 (statement -> selection_statement .)
    FOR             reduce using rule 45 (statement -> selection_statement .)
    IF              reduce using rule 45 (statement -> selection_statement .)
    RETURN          reduce using rule 45 (statement -> selection_statement .)
    COUT            reduce using rule 45 (statement -> selection_statement .)
    CIN             reduce using rule 45 (statement -> selection_statement .)
    BOOL            reduce using rule 45 (statement -> selection_statement .)
    INT             reduce using rule 45 (statement -> selection_statement .)
    FLOAT           reduce using rule 45 (statement -> selection_statement .)
    CHAR            reduce using rule 45 (statement -> selection_statement .)
    VOID            reduce using rule 45 (statement -> selection_statement .)
    IDENTIFIER      reduce using rule 45 (statement -> selection_statement .)
    ELSE            reduce using rule 45 (statement -> selection_statement .)


state 128

    (46) statement -> return_statement .

    RBRACE          reduce using rule 46 (statement -> return_statement .)
    WHILE           reduce using rule 46 (statement -> return_statement .)
    DO              reduce using rule 46 (statement -> return_statement .)
    FOR             reduce using rule 46 (statement -> return_statement .)
    IF              reduce using rule 46 (statement -> return_statement .)
    RETURN          reduce using rule 46 (statement -> return_statement .)
    COUT            reduce using rule 46 (statement -> return_statement .)
    CIN             reduce using rule 46 (statement -> return_statement .)
    BOOL            reduce using rule 46 (statement -> return_statement .)
    INT             reduce using rule 46 (statement -> return_statement .)
    FLOAT           reduce using rule 46 (statement -> return_statement .)
    CHAR            reduce using rule 46 (statement -> return_statement .)
    VOID            reduce using rule 46 (statement -> return_statement .)
    IDENTIFIER      reduce using rule 46 (statement -> return_statement .)
    ELSE            reduce using rule 46 (statement -> return_statement .)


state 129

    (47) statement -> cout_statement .

    RBRACE          reduce using rule 47 (statement -> cout_statement .)
    WHILE           reduce using rule 47 (statement -> cout_statement .)
    DO              reduce using rule 47 (statement -> cout_statement .)
    FOR             reduce using rule 47 (statement -> cout_statement .)
    IF              reduce using rule 47 (statement -> cout_statement .)
    RETURN          reduce using rule 47 (statement -> cout_statement .)
    COUT            reduce using rule 47 (statement -> cout_statement .)
    CIN             reduce using rule 47 (statement -> cout_statement .)
    BOOL            reduce using rule 47 (statement -> cout_statement .)
    INT             reduce using rule 47 (statement -> cout_statement .)
    FLOAT           reduce using rule 47 (statement -> cout_statement .)
    CHAR            reduce using rule 47 (statement -> cout_statement .)
    VOID            reduce using rule 47 (statement -> cout_statement .)
    IDENTIFIER      reduce using rule 47 (statement -> cout_statement .)
    ELSE            reduce using rule 47 (statement -> cout_statement .)


state 130

    (48) statement -> cin_statement .

    RBRACE          reduce using rule 48 (statement -> cin_statement .)
    WHILE           reduce using rule 48 (statement -> cin_statement .)
    DO              reduce using rule 48 (statement -> cin_statement .)
    FOR             reduce using rule 48 (statement -> cin_statement .)
    IF              reduce using rule 48 (statement -> cin_statement .)
    RETURN          reduce using rule 48 (statement -> cin_statement .)
    COUT            reduce using rule 48 (statement -> cin_statement .)
    CIN             reduce using rule 48 (statement -> cin_statement .)
    BOOL            reduce using rule 48 (statement -> cin_statement .)
    INT             reduce using rule 48 (statement -> cin_statement .)
    FLOAT           reduce using rule 48 (statement -> cin_statement .)
    CHAR            reduce using rule 48 (statement -> cin_statement .)
    VOID            reduce using rule 48 (statement -> cin_statement .)
    IDENTIFIER      reduce using rule 48 (statement -> cin_statement .)
    ELSE            reduce using rule 48 (statement -> cin_statement .)


state 131

    (53) iteration_statement -> WHILE . LPAREN expression RPAREN compound_statement
    (54) iteration_statement -> WHILE . LPAREN expression RPAREN statement

    LPAREN          shift and go to state 143


state 132

    (55) iteration_statement -> DO . compound_statement WHILE LPAREN expression RPAREN SEMICOLON
    (56) iteration_statement -> DO . statement WHILE LPAREN expression RPAREN SEMICOLON
    (40) compound_statement -> . LBRACE statement_list RBRACE
    (43) statement -> . iteration_statement
    (44) statement -> . declaration
    (45) statement -> . selection_statement
    (46) statement -> . return_statement
    (47) statement -> . cout_statement
    (48) statement -> . cin_statement
    (53) iteration_statement -> . WHILE LPAREN expression RPAREN compound_statement
    (54) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (55) iteration_statement -> . DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON
    (56) iteration_statement -> . DO statement WHILE LPAREN expression RPAREN SEMICOLON
    (57) iteration_statement -> . FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN compound_statement
    (58) iteration_statement -> . FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN statement
    (12) declaration -> . type IDENTIFIER SEMICOLON
    (13) declaration -> . type IDENTIFIER identifiers SEMICOLON
    (14) declaration -> . type assignment SEMICOLON
    (15) declaration -> . assignment SEMICOLON
    (16) declaration -> . function_call SEMICOLON
    (17) declaration -> . array_usage SEMICOLON
    (18) declaration -> . type array_usage SEMICOLON
    (59) selection_statement -> . IF LPAREN expression RPAREN compound_statement
    (60) selection_statement -> . IF LPAREN expression RPAREN statement
    (61) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE compound_statement
    (62) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE statement
    (63) selection_statement -> . IF LPAREN expression RPAREN statement ELSE compound_statement
    (64) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (65) return_statement -> . RETURN SEMICOLON
    (66) return_statement -> . RETURN expression SEMICOLON
    (51) cout_statement -> . COUT LESS LESS expression SEMICOLON
    (52) cout_statement -> . COUT LESS LESS expression LESS LESS expression SEMICOLON
    (50) cin_statement -> . CIN GREATER GREATER IDENTIFIER SEMICOLON
    (86) type -> . BOOL
    (87) type -> . INT
    (88) type -> . FLOAT
    (89) type -> . CHAR
    (90) type -> . VOID
    (19) assignment -> . IDENTIFIER EQUALS expression
    (20) assignment -> . IDENTIFIER PLUS EQUALS expression
    (21) assignment -> . IDENTIFIER MINUS EQUALS expression
    (25) function_call -> . IDENTIFIER LPAREN RPAREN
    (26) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (27) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (32) array_usage -> . IDENTIFIER LBRACKET elements RBRACKET
    (33) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET

    LBRACE          shift and go to state 119
    WHILE           shift and go to state 131
    DO              shift and go to state 132
    FOR             shift and go to state 133
    IF              shift and go to state 139
    RETURN          shift and go to state 140
    COUT            shift and go to state 141
    CIN             shift and go to state 142
    BOOL            shift and go to state 19
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22
    VOID            shift and go to state 23
    IDENTIFIER      shift and go to state 135

    compound_statement             shift and go to state 144
    statement                      shift and go to state 145
    iteration_statement            shift and go to state 125
    declaration                    shift and go to state 126
    selection_statement            shift and go to state 127
    return_statement               shift and go to state 128
    cout_statement                 shift and go to state 129
    cin_statement                  shift and go to state 130
    type                           shift and go to state 134
    assignment                     shift and go to state 136
    function_call                  shift and go to state 137
    array_usage                    shift and go to state 138

state 133

    (57) iteration_statement -> FOR . LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN compound_statement
    (58) iteration_statement -> FOR . LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN statement

    LPAREN          shift and go to state 146


state 134

    (12) declaration -> type . IDENTIFIER SEMICOLON
    (13) declaration -> type . IDENTIFIER identifiers SEMICOLON
    (14) declaration -> type . assignment SEMICOLON
    (18) declaration -> type . array_usage SEMICOLON
    (19) assignment -> . IDENTIFIER EQUALS expression
    (20) assignment -> . IDENTIFIER PLUS EQUALS expression
    (21) assignment -> . IDENTIFIER MINUS EQUALS expression
    (32) array_usage -> . IDENTIFIER LBRACKET elements RBRACKET
    (33) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET

    IDENTIFIER      shift and go to state 147

    assignment                     shift and go to state 148
    array_usage                    shift and go to state 149

state 135

    (19) assignment -> IDENTIFIER . EQUALS expression
    (20) assignment -> IDENTIFIER . PLUS EQUALS expression
    (21) assignment -> IDENTIFIER . MINUS EQUALS expression
    (25) function_call -> IDENTIFIER . LPAREN RPAREN
    (26) function_call -> IDENTIFIER . LPAREN expression RPAREN
    (27) function_call -> IDENTIFIER . LPAREN elements RPAREN
    (32) array_usage -> IDENTIFIER . LBRACKET elements RBRACKET
    (33) array_usage -> IDENTIFIER . LBRACKET expression RBRACKET

    EQUALS          shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    LPAREN          shift and go to state 49
    LBRACKET        shift and go to state 45


state 136

    (15) declaration -> assignment . SEMICOLON

    SEMICOLON       shift and go to state 150


state 137

    (16) declaration -> function_call . SEMICOLON

    SEMICOLON       shift and go to state 151


state 138

    (17) declaration -> array_usage . SEMICOLON

    SEMICOLON       shift and go to state 152


state 139

    (59) selection_statement -> IF . LPAREN expression RPAREN compound_statement
    (60) selection_statement -> IF . LPAREN expression RPAREN statement
    (61) selection_statement -> IF . LPAREN expression RPAREN compound_statement ELSE compound_statement
    (62) selection_statement -> IF . LPAREN expression RPAREN compound_statement ELSE statement
    (63) selection_statement -> IF . LPAREN expression RPAREN statement ELSE compound_statement
    (64) selection_statement -> IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN          shift and go to state 153


state 140

    (65) return_statement -> RETURN . SEMICOLON
    (66) return_statement -> RETURN . expression SEMICOLON
    (76) expression -> . BOOLEAN
    (77) expression -> . number
    (78) expression -> . STRING
    (79) expression -> . IDENTIFIER
    (80) expression -> . LETTER
    (81) expression -> . assignment
    (82) expression -> . array_usage
    (83) expression -> . function_call
    (84) expression -> . math_expression
    (85) expression -> . conditional_expression
    (30) number -> . INTEGER
    (31) number -> . FLOATINGPOINT
    (19) assignment -> . IDENTIFIER EQUALS expression
    (20) assignment -> . IDENTIFIER PLUS EQUALS expression
    (21) assignment -> . IDENTIFIER MINUS EQUALS expression
    (32) array_usage -> . IDENTIFIER LBRACKET elements RBRACKET
    (33) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (25) function_call -> . IDENTIFIER LPAREN RPAREN
    (26) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (27) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (91) math_expression -> . expression PLUS expression
    (92) math_expression -> . expression MINUS expression
    (93) math_expression -> . expression TIMES expression
    (94) math_expression -> . expression DIVIDE expression
    (95) math_expression -> . expression MODULUS expression
    (96) math_expression -> . expression PLUS PLUS
    (97) math_expression -> . expression MINUS MINUS
    (67) conditional_expression -> . expression ISEQUAL expression
    (68) conditional_expression -> . expression NOT EQUALS expression
    (69) conditional_expression -> . expression LESS expression
    (70) conditional_expression -> . expression LESS EQUALS expression
    (71) conditional_expression -> . expression GREATER expression
    (72) conditional_expression -> . expression GREATER EQUALS expression
    (73) conditional_expression -> . expression AND expression
    (74) conditional_expression -> . expression OR expression
    (75) conditional_expression -> . NOT expression

    SEMICOLON       shift and go to state 154
    BOOLEAN         shift and go to state 12
    STRING          shift and go to state 14
    IDENTIFIER      shift and go to state 55
    LETTER          shift and go to state 15
    INTEGER         shift and go to state 26
    FLOATINGPOINT   shift and go to state 27
    NOT             shift and go to state 28

    expression                     shift and go to state 155
    number                         shift and go to state 13
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 56
    function_call                  shift and go to state 16
    math_expression                shift and go to state 17
    conditional_expression         shift and go to state 18

state 141

    (51) cout_statement -> COUT . LESS LESS expression SEMICOLON
    (52) cout_statement -> COUT . LESS LESS expression LESS LESS expression SEMICOLON

    LESS            shift and go to state 156


state 142

    (50) cin_statement -> CIN . GREATER GREATER IDENTIFIER SEMICOLON

    GREATER         shift and go to state 157


state 143

    (53) iteration_statement -> WHILE LPAREN . expression RPAREN compound_statement
    (54) iteration_statement -> WHILE LPAREN . expression RPAREN statement
    (76) expression -> . BOOLEAN
    (77) expression -> . number
    (78) expression -> . STRING
    (79) expression -> . IDENTIFIER
    (80) expression -> . LETTER
    (81) expression -> . assignment
    (82) expression -> . array_usage
    (83) expression -> . function_call
    (84) expression -> . math_expression
    (85) expression -> . conditional_expression
    (30) number -> . INTEGER
    (31) number -> . FLOATINGPOINT
    (19) assignment -> . IDENTIFIER EQUALS expression
    (20) assignment -> . IDENTIFIER PLUS EQUALS expression
    (21) assignment -> . IDENTIFIER MINUS EQUALS expression
    (32) array_usage -> . IDENTIFIER LBRACKET elements RBRACKET
    (33) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (25) function_call -> . IDENTIFIER LPAREN RPAREN
    (26) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (27) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (91) math_expression -> . expression PLUS expression
    (92) math_expression -> . expression MINUS expression
    (93) math_expression -> . expression TIMES expression
    (94) math_expression -> . expression DIVIDE expression
    (95) math_expression -> . expression MODULUS expression
    (96) math_expression -> . expression PLUS PLUS
    (97) math_expression -> . expression MINUS MINUS
    (67) conditional_expression -> . expression ISEQUAL expression
    (68) conditional_expression -> . expression NOT EQUALS expression
    (69) conditional_expression -> . expression LESS expression
    (70) conditional_expression -> . expression LESS EQUALS expression
    (71) conditional_expression -> . expression GREATER expression
    (72) conditional_expression -> . expression GREATER EQUALS expression
    (73) conditional_expression -> . expression AND expression
    (74) conditional_expression -> . expression OR expression
    (75) conditional_expression -> . NOT expression

    BOOLEAN         shift and go to state 12
    STRING          shift and go to state 14
    IDENTIFIER      shift and go to state 55
    LETTER          shift and go to state 15
    INTEGER         shift and go to state 26
    FLOATINGPOINT   shift and go to state 27
    NOT             shift and go to state 28

    expression                     shift and go to state 158
    number                         shift and go to state 13
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 56
    function_call                  shift and go to state 16
    math_expression                shift and go to state 17
    conditional_expression         shift and go to state 18

state 144

    (55) iteration_statement -> DO compound_statement . WHILE LPAREN expression RPAREN SEMICOLON

    WHILE           shift and go to state 159


state 145

    (56) iteration_statement -> DO statement . WHILE LPAREN expression RPAREN SEMICOLON

    WHILE           shift and go to state 160


state 146

    (57) iteration_statement -> FOR LPAREN . type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN compound_statement
    (58) iteration_statement -> FOR LPAREN . type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN statement
    (86) type -> . BOOL
    (87) type -> . INT
    (88) type -> . FLOAT
    (89) type -> . CHAR
    (90) type -> . VOID

    BOOL            shift and go to state 19
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22
    VOID            shift and go to state 23

    type                           shift and go to state 161

state 147

    (12) declaration -> type IDENTIFIER . SEMICOLON
    (13) declaration -> type IDENTIFIER . identifiers SEMICOLON
    (19) assignment -> IDENTIFIER . EQUALS expression
    (20) assignment -> IDENTIFIER . PLUS EQUALS expression
    (21) assignment -> IDENTIFIER . MINUS EQUALS expression
    (32) array_usage -> IDENTIFIER . LBRACKET elements RBRACKET
    (33) array_usage -> IDENTIFIER . LBRACKET expression RBRACKET
    (22) identifiers -> . COMMA IDENTIFIER
    (23) identifiers -> . COMMA assignment
    (24) identifiers -> . COMMA IDENTIFIER identifiers

    SEMICOLON       shift and go to state 162
    EQUALS          shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    LBRACKET        shift and go to state 45
    COMMA           shift and go to state 164

    identifiers                    shift and go to state 163

state 148

    (14) declaration -> type assignment . SEMICOLON

    SEMICOLON       shift and go to state 165


state 149

    (18) declaration -> type array_usage . SEMICOLON

    SEMICOLON       shift and go to state 166


state 150

    (15) declaration -> assignment SEMICOLON .

    RBRACE          reduce using rule 15 (declaration -> assignment SEMICOLON .)
    WHILE           reduce using rule 15 (declaration -> assignment SEMICOLON .)
    DO              reduce using rule 15 (declaration -> assignment SEMICOLON .)
    FOR             reduce using rule 15 (declaration -> assignment SEMICOLON .)
    IF              reduce using rule 15 (declaration -> assignment SEMICOLON .)
    RETURN          reduce using rule 15 (declaration -> assignment SEMICOLON .)
    COUT            reduce using rule 15 (declaration -> assignment SEMICOLON .)
    CIN             reduce using rule 15 (declaration -> assignment SEMICOLON .)
    BOOL            reduce using rule 15 (declaration -> assignment SEMICOLON .)
    INT             reduce using rule 15 (declaration -> assignment SEMICOLON .)
    FLOAT           reduce using rule 15 (declaration -> assignment SEMICOLON .)
    CHAR            reduce using rule 15 (declaration -> assignment SEMICOLON .)
    VOID            reduce using rule 15 (declaration -> assignment SEMICOLON .)
    IDENTIFIER      reduce using rule 15 (declaration -> assignment SEMICOLON .)
    ELSE            reduce using rule 15 (declaration -> assignment SEMICOLON .)


state 151

    (16) declaration -> function_call SEMICOLON .

    RBRACE          reduce using rule 16 (declaration -> function_call SEMICOLON .)
    WHILE           reduce using rule 16 (declaration -> function_call SEMICOLON .)
    DO              reduce using rule 16 (declaration -> function_call SEMICOLON .)
    FOR             reduce using rule 16 (declaration -> function_call SEMICOLON .)
    IF              reduce using rule 16 (declaration -> function_call SEMICOLON .)
    RETURN          reduce using rule 16 (declaration -> function_call SEMICOLON .)
    COUT            reduce using rule 16 (declaration -> function_call SEMICOLON .)
    CIN             reduce using rule 16 (declaration -> function_call SEMICOLON .)
    BOOL            reduce using rule 16 (declaration -> function_call SEMICOLON .)
    INT             reduce using rule 16 (declaration -> function_call SEMICOLON .)
    FLOAT           reduce using rule 16 (declaration -> function_call SEMICOLON .)
    CHAR            reduce using rule 16 (declaration -> function_call SEMICOLON .)
    VOID            reduce using rule 16 (declaration -> function_call SEMICOLON .)
    IDENTIFIER      reduce using rule 16 (declaration -> function_call SEMICOLON .)
    ELSE            reduce using rule 16 (declaration -> function_call SEMICOLON .)


state 152

    (17) declaration -> array_usage SEMICOLON .

    RBRACE          reduce using rule 17 (declaration -> array_usage SEMICOLON .)
    WHILE           reduce using rule 17 (declaration -> array_usage SEMICOLON .)
    DO              reduce using rule 17 (declaration -> array_usage SEMICOLON .)
    FOR             reduce using rule 17 (declaration -> array_usage SEMICOLON .)
    IF              reduce using rule 17 (declaration -> array_usage SEMICOLON .)
    RETURN          reduce using rule 17 (declaration -> array_usage SEMICOLON .)
    COUT            reduce using rule 17 (declaration -> array_usage SEMICOLON .)
    CIN             reduce using rule 17 (declaration -> array_usage SEMICOLON .)
    BOOL            reduce using rule 17 (declaration -> array_usage SEMICOLON .)
    INT             reduce using rule 17 (declaration -> array_usage SEMICOLON .)
    FLOAT           reduce using rule 17 (declaration -> array_usage SEMICOLON .)
    CHAR            reduce using rule 17 (declaration -> array_usage SEMICOLON .)
    VOID            reduce using rule 17 (declaration -> array_usage SEMICOLON .)
    IDENTIFIER      reduce using rule 17 (declaration -> array_usage SEMICOLON .)
    ELSE            reduce using rule 17 (declaration -> array_usage SEMICOLON .)


state 153

    (59) selection_statement -> IF LPAREN . expression RPAREN compound_statement
    (60) selection_statement -> IF LPAREN . expression RPAREN statement
    (61) selection_statement -> IF LPAREN . expression RPAREN compound_statement ELSE compound_statement
    (62) selection_statement -> IF LPAREN . expression RPAREN compound_statement ELSE statement
    (63) selection_statement -> IF LPAREN . expression RPAREN statement ELSE compound_statement
    (64) selection_statement -> IF LPAREN . expression RPAREN statement ELSE statement
    (76) expression -> . BOOLEAN
    (77) expression -> . number
    (78) expression -> . STRING
    (79) expression -> . IDENTIFIER
    (80) expression -> . LETTER
    (81) expression -> . assignment
    (82) expression -> . array_usage
    (83) expression -> . function_call
    (84) expression -> . math_expression
    (85) expression -> . conditional_expression
    (30) number -> . INTEGER
    (31) number -> . FLOATINGPOINT
    (19) assignment -> . IDENTIFIER EQUALS expression
    (20) assignment -> . IDENTIFIER PLUS EQUALS expression
    (21) assignment -> . IDENTIFIER MINUS EQUALS expression
    (32) array_usage -> . IDENTIFIER LBRACKET elements RBRACKET
    (33) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (25) function_call -> . IDENTIFIER LPAREN RPAREN
    (26) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (27) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (91) math_expression -> . expression PLUS expression
    (92) math_expression -> . expression MINUS expression
    (93) math_expression -> . expression TIMES expression
    (94) math_expression -> . expression DIVIDE expression
    (95) math_expression -> . expression MODULUS expression
    (96) math_expression -> . expression PLUS PLUS
    (97) math_expression -> . expression MINUS MINUS
    (67) conditional_expression -> . expression ISEQUAL expression
    (68) conditional_expression -> . expression NOT EQUALS expression
    (69) conditional_expression -> . expression LESS expression
    (70) conditional_expression -> . expression LESS EQUALS expression
    (71) conditional_expression -> . expression GREATER expression
    (72) conditional_expression -> . expression GREATER EQUALS expression
    (73) conditional_expression -> . expression AND expression
    (74) conditional_expression -> . expression OR expression
    (75) conditional_expression -> . NOT expression

    BOOLEAN         shift and go to state 12
    STRING          shift and go to state 14
    IDENTIFIER      shift and go to state 55
    LETTER          shift and go to state 15
    INTEGER         shift and go to state 26
    FLOATINGPOINT   shift and go to state 27
    NOT             shift and go to state 28

    expression                     shift and go to state 167
    number                         shift and go to state 13
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 56
    function_call                  shift and go to state 16
    math_expression                shift and go to state 17
    conditional_expression         shift and go to state 18

state 154

    (65) return_statement -> RETURN SEMICOLON .

    RBRACE          reduce using rule 65 (return_statement -> RETURN SEMICOLON .)
    WHILE           reduce using rule 65 (return_statement -> RETURN SEMICOLON .)
    DO              reduce using rule 65 (return_statement -> RETURN SEMICOLON .)
    FOR             reduce using rule 65 (return_statement -> RETURN SEMICOLON .)
    IF              reduce using rule 65 (return_statement -> RETURN SEMICOLON .)
    RETURN          reduce using rule 65 (return_statement -> RETURN SEMICOLON .)
    COUT            reduce using rule 65 (return_statement -> RETURN SEMICOLON .)
    CIN             reduce using rule 65 (return_statement -> RETURN SEMICOLON .)
    BOOL            reduce using rule 65 (return_statement -> RETURN SEMICOLON .)
    INT             reduce using rule 65 (return_statement -> RETURN SEMICOLON .)
    FLOAT           reduce using rule 65 (return_statement -> RETURN SEMICOLON .)
    CHAR            reduce using rule 65 (return_statement -> RETURN SEMICOLON .)
    VOID            reduce using rule 65 (return_statement -> RETURN SEMICOLON .)
    IDENTIFIER      reduce using rule 65 (return_statement -> RETURN SEMICOLON .)
    ELSE            reduce using rule 65 (return_statement -> RETURN SEMICOLON .)


state 155

    (66) return_statement -> RETURN expression . SEMICOLON
    (91) math_expression -> expression . PLUS expression
    (92) math_expression -> expression . MINUS expression
    (93) math_expression -> expression . TIMES expression
    (94) math_expression -> expression . DIVIDE expression
    (95) math_expression -> expression . MODULUS expression
    (96) math_expression -> expression . PLUS PLUS
    (97) math_expression -> expression . MINUS MINUS
    (67) conditional_expression -> expression . ISEQUAL expression
    (68) conditional_expression -> expression . NOT EQUALS expression
    (69) conditional_expression -> expression . LESS expression
    (70) conditional_expression -> expression . LESS EQUALS expression
    (71) conditional_expression -> expression . GREATER expression
    (72) conditional_expression -> expression . GREATER EQUALS expression
    (73) conditional_expression -> expression . AND expression
    (74) conditional_expression -> expression . OR expression

    SEMICOLON       shift and go to state 168
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    MODULUS         shift and go to state 35
    ISEQUAL         shift and go to state 36
    NOT             shift and go to state 37
    LESS            shift and go to state 38
    GREATER         shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41


state 156

    (51) cout_statement -> COUT LESS . LESS expression SEMICOLON
    (52) cout_statement -> COUT LESS . LESS expression LESS LESS expression SEMICOLON

    LESS            shift and go to state 169


state 157

    (50) cin_statement -> CIN GREATER . GREATER IDENTIFIER SEMICOLON

    GREATER         shift and go to state 170


state 158

    (53) iteration_statement -> WHILE LPAREN expression . RPAREN compound_statement
    (54) iteration_statement -> WHILE LPAREN expression . RPAREN statement
    (91) math_expression -> expression . PLUS expression
    (92) math_expression -> expression . MINUS expression
    (93) math_expression -> expression . TIMES expression
    (94) math_expression -> expression . DIVIDE expression
    (95) math_expression -> expression . MODULUS expression
    (96) math_expression -> expression . PLUS PLUS
    (97) math_expression -> expression . MINUS MINUS
    (67) conditional_expression -> expression . ISEQUAL expression
    (68) conditional_expression -> expression . NOT EQUALS expression
    (69) conditional_expression -> expression . LESS expression
    (70) conditional_expression -> expression . LESS EQUALS expression
    (71) conditional_expression -> expression . GREATER expression
    (72) conditional_expression -> expression . GREATER EQUALS expression
    (73) conditional_expression -> expression . AND expression
    (74) conditional_expression -> expression . OR expression

    RPAREN          shift and go to state 171
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    MODULUS         shift and go to state 35
    ISEQUAL         shift and go to state 36
    NOT             shift and go to state 37
    LESS            shift and go to state 38
    GREATER         shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41


state 159

    (55) iteration_statement -> DO compound_statement WHILE . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 172


state 160

    (56) iteration_statement -> DO statement WHILE . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 173


state 161

    (57) iteration_statement -> FOR LPAREN type . IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN compound_statement
    (58) iteration_statement -> FOR LPAREN type . IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN statement

    IDENTIFIER      shift and go to state 174


state 162

    (12) declaration -> type IDENTIFIER SEMICOLON .

    RBRACE          reduce using rule 12 (declaration -> type IDENTIFIER SEMICOLON .)
    WHILE           reduce using rule 12 (declaration -> type IDENTIFIER SEMICOLON .)
    DO              reduce using rule 12 (declaration -> type IDENTIFIER SEMICOLON .)
    FOR             reduce using rule 12 (declaration -> type IDENTIFIER SEMICOLON .)
    IF              reduce using rule 12 (declaration -> type IDENTIFIER SEMICOLON .)
    RETURN          reduce using rule 12 (declaration -> type IDENTIFIER SEMICOLON .)
    COUT            reduce using rule 12 (declaration -> type IDENTIFIER SEMICOLON .)
    CIN             reduce using rule 12 (declaration -> type IDENTIFIER SEMICOLON .)
    BOOL            reduce using rule 12 (declaration -> type IDENTIFIER SEMICOLON .)
    INT             reduce using rule 12 (declaration -> type IDENTIFIER SEMICOLON .)
    FLOAT           reduce using rule 12 (declaration -> type IDENTIFIER SEMICOLON .)
    CHAR            reduce using rule 12 (declaration -> type IDENTIFIER SEMICOLON .)
    VOID            reduce using rule 12 (declaration -> type IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 12 (declaration -> type IDENTIFIER SEMICOLON .)
    ELSE            reduce using rule 12 (declaration -> type IDENTIFIER SEMICOLON .)


state 163

    (13) declaration -> type IDENTIFIER identifiers . SEMICOLON

    SEMICOLON       shift and go to state 175


state 164

    (22) identifiers -> COMMA . IDENTIFIER
    (23) identifiers -> COMMA . assignment
    (24) identifiers -> COMMA . IDENTIFIER identifiers
    (19) assignment -> . IDENTIFIER EQUALS expression
    (20) assignment -> . IDENTIFIER PLUS EQUALS expression
    (21) assignment -> . IDENTIFIER MINUS EQUALS expression

    IDENTIFIER      shift and go to state 176

    assignment                     shift and go to state 177

state 165

    (14) declaration -> type assignment SEMICOLON .

    RBRACE          reduce using rule 14 (declaration -> type assignment SEMICOLON .)
    WHILE           reduce using rule 14 (declaration -> type assignment SEMICOLON .)
    DO              reduce using rule 14 (declaration -> type assignment SEMICOLON .)
    FOR             reduce using rule 14 (declaration -> type assignment SEMICOLON .)
    IF              reduce using rule 14 (declaration -> type assignment SEMICOLON .)
    RETURN          reduce using rule 14 (declaration -> type assignment SEMICOLON .)
    COUT            reduce using rule 14 (declaration -> type assignment SEMICOLON .)
    CIN             reduce using rule 14 (declaration -> type assignment SEMICOLON .)
    BOOL            reduce using rule 14 (declaration -> type assignment SEMICOLON .)
    INT             reduce using rule 14 (declaration -> type assignment SEMICOLON .)
    FLOAT           reduce using rule 14 (declaration -> type assignment SEMICOLON .)
    CHAR            reduce using rule 14 (declaration -> type assignment SEMICOLON .)
    VOID            reduce using rule 14 (declaration -> type assignment SEMICOLON .)
    IDENTIFIER      reduce using rule 14 (declaration -> type assignment SEMICOLON .)
    ELSE            reduce using rule 14 (declaration -> type assignment SEMICOLON .)


state 166

    (18) declaration -> type array_usage SEMICOLON .

    RBRACE          reduce using rule 18 (declaration -> type array_usage SEMICOLON .)
    WHILE           reduce using rule 18 (declaration -> type array_usage SEMICOLON .)
    DO              reduce using rule 18 (declaration -> type array_usage SEMICOLON .)
    FOR             reduce using rule 18 (declaration -> type array_usage SEMICOLON .)
    IF              reduce using rule 18 (declaration -> type array_usage SEMICOLON .)
    RETURN          reduce using rule 18 (declaration -> type array_usage SEMICOLON .)
    COUT            reduce using rule 18 (declaration -> type array_usage SEMICOLON .)
    CIN             reduce using rule 18 (declaration -> type array_usage SEMICOLON .)
    BOOL            reduce using rule 18 (declaration -> type array_usage SEMICOLON .)
    INT             reduce using rule 18 (declaration -> type array_usage SEMICOLON .)
    FLOAT           reduce using rule 18 (declaration -> type array_usage SEMICOLON .)
    CHAR            reduce using rule 18 (declaration -> type array_usage SEMICOLON .)
    VOID            reduce using rule 18 (declaration -> type array_usage SEMICOLON .)
    IDENTIFIER      reduce using rule 18 (declaration -> type array_usage SEMICOLON .)
    ELSE            reduce using rule 18 (declaration -> type array_usage SEMICOLON .)


state 167

    (59) selection_statement -> IF LPAREN expression . RPAREN compound_statement
    (60) selection_statement -> IF LPAREN expression . RPAREN statement
    (61) selection_statement -> IF LPAREN expression . RPAREN compound_statement ELSE compound_statement
    (62) selection_statement -> IF LPAREN expression . RPAREN compound_statement ELSE statement
    (63) selection_statement -> IF LPAREN expression . RPAREN statement ELSE compound_statement
    (64) selection_statement -> IF LPAREN expression . RPAREN statement ELSE statement
    (91) math_expression -> expression . PLUS expression
    (92) math_expression -> expression . MINUS expression
    (93) math_expression -> expression . TIMES expression
    (94) math_expression -> expression . DIVIDE expression
    (95) math_expression -> expression . MODULUS expression
    (96) math_expression -> expression . PLUS PLUS
    (97) math_expression -> expression . MINUS MINUS
    (67) conditional_expression -> expression . ISEQUAL expression
    (68) conditional_expression -> expression . NOT EQUALS expression
    (69) conditional_expression -> expression . LESS expression
    (70) conditional_expression -> expression . LESS EQUALS expression
    (71) conditional_expression -> expression . GREATER expression
    (72) conditional_expression -> expression . GREATER EQUALS expression
    (73) conditional_expression -> expression . AND expression
    (74) conditional_expression -> expression . OR expression

    RPAREN          shift and go to state 178
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    MODULUS         shift and go to state 35
    ISEQUAL         shift and go to state 36
    NOT             shift and go to state 37
    LESS            shift and go to state 38
    GREATER         shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41


state 168

    (66) return_statement -> RETURN expression SEMICOLON .

    RBRACE          reduce using rule 66 (return_statement -> RETURN expression SEMICOLON .)
    WHILE           reduce using rule 66 (return_statement -> RETURN expression SEMICOLON .)
    DO              reduce using rule 66 (return_statement -> RETURN expression SEMICOLON .)
    FOR             reduce using rule 66 (return_statement -> RETURN expression SEMICOLON .)
    IF              reduce using rule 66 (return_statement -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 66 (return_statement -> RETURN expression SEMICOLON .)
    COUT            reduce using rule 66 (return_statement -> RETURN expression SEMICOLON .)
    CIN             reduce using rule 66 (return_statement -> RETURN expression SEMICOLON .)
    BOOL            reduce using rule 66 (return_statement -> RETURN expression SEMICOLON .)
    INT             reduce using rule 66 (return_statement -> RETURN expression SEMICOLON .)
    FLOAT           reduce using rule 66 (return_statement -> RETURN expression SEMICOLON .)
    CHAR            reduce using rule 66 (return_statement -> RETURN expression SEMICOLON .)
    VOID            reduce using rule 66 (return_statement -> RETURN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 66 (return_statement -> RETURN expression SEMICOLON .)
    ELSE            reduce using rule 66 (return_statement -> RETURN expression SEMICOLON .)


state 169

    (51) cout_statement -> COUT LESS LESS . expression SEMICOLON
    (52) cout_statement -> COUT LESS LESS . expression LESS LESS expression SEMICOLON
    (76) expression -> . BOOLEAN
    (77) expression -> . number
    (78) expression -> . STRING
    (79) expression -> . IDENTIFIER
    (80) expression -> . LETTER
    (81) expression -> . assignment
    (82) expression -> . array_usage
    (83) expression -> . function_call
    (84) expression -> . math_expression
    (85) expression -> . conditional_expression
    (30) number -> . INTEGER
    (31) number -> . FLOATINGPOINT
    (19) assignment -> . IDENTIFIER EQUALS expression
    (20) assignment -> . IDENTIFIER PLUS EQUALS expression
    (21) assignment -> . IDENTIFIER MINUS EQUALS expression
    (32) array_usage -> . IDENTIFIER LBRACKET elements RBRACKET
    (33) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (25) function_call -> . IDENTIFIER LPAREN RPAREN
    (26) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (27) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (91) math_expression -> . expression PLUS expression
    (92) math_expression -> . expression MINUS expression
    (93) math_expression -> . expression TIMES expression
    (94) math_expression -> . expression DIVIDE expression
    (95) math_expression -> . expression MODULUS expression
    (96) math_expression -> . expression PLUS PLUS
    (97) math_expression -> . expression MINUS MINUS
    (67) conditional_expression -> . expression ISEQUAL expression
    (68) conditional_expression -> . expression NOT EQUALS expression
    (69) conditional_expression -> . expression LESS expression
    (70) conditional_expression -> . expression LESS EQUALS expression
    (71) conditional_expression -> . expression GREATER expression
    (72) conditional_expression -> . expression GREATER EQUALS expression
    (73) conditional_expression -> . expression AND expression
    (74) conditional_expression -> . expression OR expression
    (75) conditional_expression -> . NOT expression

    BOOLEAN         shift and go to state 12
    STRING          shift and go to state 14
    IDENTIFIER      shift and go to state 55
    LETTER          shift and go to state 15
    INTEGER         shift and go to state 26
    FLOATINGPOINT   shift and go to state 27
    NOT             shift and go to state 28

    expression                     shift and go to state 179
    number                         shift and go to state 13
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 56
    function_call                  shift and go to state 16
    math_expression                shift and go to state 17
    conditional_expression         shift and go to state 18

state 170

    (50) cin_statement -> CIN GREATER GREATER . IDENTIFIER SEMICOLON

    IDENTIFIER      shift and go to state 180


state 171

    (53) iteration_statement -> WHILE LPAREN expression RPAREN . compound_statement
    (54) iteration_statement -> WHILE LPAREN expression RPAREN . statement
    (40) compound_statement -> . LBRACE statement_list RBRACE
    (43) statement -> . iteration_statement
    (44) statement -> . declaration
    (45) statement -> . selection_statement
    (46) statement -> . return_statement
    (47) statement -> . cout_statement
    (48) statement -> . cin_statement
    (53) iteration_statement -> . WHILE LPAREN expression RPAREN compound_statement
    (54) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (55) iteration_statement -> . DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON
    (56) iteration_statement -> . DO statement WHILE LPAREN expression RPAREN SEMICOLON
    (57) iteration_statement -> . FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN compound_statement
    (58) iteration_statement -> . FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN statement
    (12) declaration -> . type IDENTIFIER SEMICOLON
    (13) declaration -> . type IDENTIFIER identifiers SEMICOLON
    (14) declaration -> . type assignment SEMICOLON
    (15) declaration -> . assignment SEMICOLON
    (16) declaration -> . function_call SEMICOLON
    (17) declaration -> . array_usage SEMICOLON
    (18) declaration -> . type array_usage SEMICOLON
    (59) selection_statement -> . IF LPAREN expression RPAREN compound_statement
    (60) selection_statement -> . IF LPAREN expression RPAREN statement
    (61) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE compound_statement
    (62) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE statement
    (63) selection_statement -> . IF LPAREN expression RPAREN statement ELSE compound_statement
    (64) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (65) return_statement -> . RETURN SEMICOLON
    (66) return_statement -> . RETURN expression SEMICOLON
    (51) cout_statement -> . COUT LESS LESS expression SEMICOLON
    (52) cout_statement -> . COUT LESS LESS expression LESS LESS expression SEMICOLON
    (50) cin_statement -> . CIN GREATER GREATER IDENTIFIER SEMICOLON
    (86) type -> . BOOL
    (87) type -> . INT
    (88) type -> . FLOAT
    (89) type -> . CHAR
    (90) type -> . VOID
    (19) assignment -> . IDENTIFIER EQUALS expression
    (20) assignment -> . IDENTIFIER PLUS EQUALS expression
    (21) assignment -> . IDENTIFIER MINUS EQUALS expression
    (25) function_call -> . IDENTIFIER LPAREN RPAREN
    (26) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (27) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (32) array_usage -> . IDENTIFIER LBRACKET elements RBRACKET
    (33) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET

    LBRACE          shift and go to state 119
    WHILE           shift and go to state 131
    DO              shift and go to state 132
    FOR             shift and go to state 133
    IF              shift and go to state 139
    RETURN          shift and go to state 140
    COUT            shift and go to state 141
    CIN             shift and go to state 142
    BOOL            shift and go to state 19
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22
    VOID            shift and go to state 23
    IDENTIFIER      shift and go to state 135

    compound_statement             shift and go to state 181
    statement                      shift and go to state 182
    iteration_statement            shift and go to state 125
    declaration                    shift and go to state 126
    selection_statement            shift and go to state 127
    return_statement               shift and go to state 128
    cout_statement                 shift and go to state 129
    cin_statement                  shift and go to state 130
    type                           shift and go to state 134
    assignment                     shift and go to state 136
    function_call                  shift and go to state 137
    array_usage                    shift and go to state 138

state 172

    (55) iteration_statement -> DO compound_statement WHILE LPAREN . expression RPAREN SEMICOLON
    (76) expression -> . BOOLEAN
    (77) expression -> . number
    (78) expression -> . STRING
    (79) expression -> . IDENTIFIER
    (80) expression -> . LETTER
    (81) expression -> . assignment
    (82) expression -> . array_usage
    (83) expression -> . function_call
    (84) expression -> . math_expression
    (85) expression -> . conditional_expression
    (30) number -> . INTEGER
    (31) number -> . FLOATINGPOINT
    (19) assignment -> . IDENTIFIER EQUALS expression
    (20) assignment -> . IDENTIFIER PLUS EQUALS expression
    (21) assignment -> . IDENTIFIER MINUS EQUALS expression
    (32) array_usage -> . IDENTIFIER LBRACKET elements RBRACKET
    (33) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (25) function_call -> . IDENTIFIER LPAREN RPAREN
    (26) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (27) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (91) math_expression -> . expression PLUS expression
    (92) math_expression -> . expression MINUS expression
    (93) math_expression -> . expression TIMES expression
    (94) math_expression -> . expression DIVIDE expression
    (95) math_expression -> . expression MODULUS expression
    (96) math_expression -> . expression PLUS PLUS
    (97) math_expression -> . expression MINUS MINUS
    (67) conditional_expression -> . expression ISEQUAL expression
    (68) conditional_expression -> . expression NOT EQUALS expression
    (69) conditional_expression -> . expression LESS expression
    (70) conditional_expression -> . expression LESS EQUALS expression
    (71) conditional_expression -> . expression GREATER expression
    (72) conditional_expression -> . expression GREATER EQUALS expression
    (73) conditional_expression -> . expression AND expression
    (74) conditional_expression -> . expression OR expression
    (75) conditional_expression -> . NOT expression

    BOOLEAN         shift and go to state 12
    STRING          shift and go to state 14
    IDENTIFIER      shift and go to state 55
    LETTER          shift and go to state 15
    INTEGER         shift and go to state 26
    FLOATINGPOINT   shift and go to state 27
    NOT             shift and go to state 28

    expression                     shift and go to state 183
    number                         shift and go to state 13
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 56
    function_call                  shift and go to state 16
    math_expression                shift and go to state 17
    conditional_expression         shift and go to state 18

state 173

    (56) iteration_statement -> DO statement WHILE LPAREN . expression RPAREN SEMICOLON
    (76) expression -> . BOOLEAN
    (77) expression -> . number
    (78) expression -> . STRING
    (79) expression -> . IDENTIFIER
    (80) expression -> . LETTER
    (81) expression -> . assignment
    (82) expression -> . array_usage
    (83) expression -> . function_call
    (84) expression -> . math_expression
    (85) expression -> . conditional_expression
    (30) number -> . INTEGER
    (31) number -> . FLOATINGPOINT
    (19) assignment -> . IDENTIFIER EQUALS expression
    (20) assignment -> . IDENTIFIER PLUS EQUALS expression
    (21) assignment -> . IDENTIFIER MINUS EQUALS expression
    (32) array_usage -> . IDENTIFIER LBRACKET elements RBRACKET
    (33) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (25) function_call -> . IDENTIFIER LPAREN RPAREN
    (26) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (27) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (91) math_expression -> . expression PLUS expression
    (92) math_expression -> . expression MINUS expression
    (93) math_expression -> . expression TIMES expression
    (94) math_expression -> . expression DIVIDE expression
    (95) math_expression -> . expression MODULUS expression
    (96) math_expression -> . expression PLUS PLUS
    (97) math_expression -> . expression MINUS MINUS
    (67) conditional_expression -> . expression ISEQUAL expression
    (68) conditional_expression -> . expression NOT EQUALS expression
    (69) conditional_expression -> . expression LESS expression
    (70) conditional_expression -> . expression LESS EQUALS expression
    (71) conditional_expression -> . expression GREATER expression
    (72) conditional_expression -> . expression GREATER EQUALS expression
    (73) conditional_expression -> . expression AND expression
    (74) conditional_expression -> . expression OR expression
    (75) conditional_expression -> . NOT expression

    BOOLEAN         shift and go to state 12
    STRING          shift and go to state 14
    IDENTIFIER      shift and go to state 55
    LETTER          shift and go to state 15
    INTEGER         shift and go to state 26
    FLOATINGPOINT   shift and go to state 27
    NOT             shift and go to state 28

    expression                     shift and go to state 184
    number                         shift and go to state 13
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 56
    function_call                  shift and go to state 16
    math_expression                shift and go to state 17
    conditional_expression         shift and go to state 18

state 174

    (57) iteration_statement -> FOR LPAREN type IDENTIFIER . EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN compound_statement
    (58) iteration_statement -> FOR LPAREN type IDENTIFIER . EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN statement

    EQUALS          shift and go to state 185


state 175

    (13) declaration -> type IDENTIFIER identifiers SEMICOLON .

    RBRACE          reduce using rule 13 (declaration -> type IDENTIFIER identifiers SEMICOLON .)
    WHILE           reduce using rule 13 (declaration -> type IDENTIFIER identifiers SEMICOLON .)
    DO              reduce using rule 13 (declaration -> type IDENTIFIER identifiers SEMICOLON .)
    FOR             reduce using rule 13 (declaration -> type IDENTIFIER identifiers SEMICOLON .)
    IF              reduce using rule 13 (declaration -> type IDENTIFIER identifiers SEMICOLON .)
    RETURN          reduce using rule 13 (declaration -> type IDENTIFIER identifiers SEMICOLON .)
    COUT            reduce using rule 13 (declaration -> type IDENTIFIER identifiers SEMICOLON .)
    CIN             reduce using rule 13 (declaration -> type IDENTIFIER identifiers SEMICOLON .)
    BOOL            reduce using rule 13 (declaration -> type IDENTIFIER identifiers SEMICOLON .)
    INT             reduce using rule 13 (declaration -> type IDENTIFIER identifiers SEMICOLON .)
    FLOAT           reduce using rule 13 (declaration -> type IDENTIFIER identifiers SEMICOLON .)
    CHAR            reduce using rule 13 (declaration -> type IDENTIFIER identifiers SEMICOLON .)
    VOID            reduce using rule 13 (declaration -> type IDENTIFIER identifiers SEMICOLON .)
    IDENTIFIER      reduce using rule 13 (declaration -> type IDENTIFIER identifiers SEMICOLON .)
    ELSE            reduce using rule 13 (declaration -> type IDENTIFIER identifiers SEMICOLON .)


state 176

    (22) identifiers -> COMMA IDENTIFIER .
    (24) identifiers -> COMMA IDENTIFIER . identifiers
    (19) assignment -> IDENTIFIER . EQUALS expression
    (20) assignment -> IDENTIFIER . PLUS EQUALS expression
    (21) assignment -> IDENTIFIER . MINUS EQUALS expression
    (22) identifiers -> . COMMA IDENTIFIER
    (23) identifiers -> . COMMA assignment
    (24) identifiers -> . COMMA IDENTIFIER identifiers

    SEMICOLON       reduce using rule 22 (identifiers -> COMMA IDENTIFIER .)
    EQUALS          shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    COMMA           shift and go to state 164

    identifiers                    shift and go to state 186

state 177

    (23) identifiers -> COMMA assignment .

    SEMICOLON       reduce using rule 23 (identifiers -> COMMA assignment .)


state 178

    (59) selection_statement -> IF LPAREN expression RPAREN . compound_statement
    (60) selection_statement -> IF LPAREN expression RPAREN . statement
    (61) selection_statement -> IF LPAREN expression RPAREN . compound_statement ELSE compound_statement
    (62) selection_statement -> IF LPAREN expression RPAREN . compound_statement ELSE statement
    (63) selection_statement -> IF LPAREN expression RPAREN . statement ELSE compound_statement
    (64) selection_statement -> IF LPAREN expression RPAREN . statement ELSE statement
    (40) compound_statement -> . LBRACE statement_list RBRACE
    (43) statement -> . iteration_statement
    (44) statement -> . declaration
    (45) statement -> . selection_statement
    (46) statement -> . return_statement
    (47) statement -> . cout_statement
    (48) statement -> . cin_statement
    (53) iteration_statement -> . WHILE LPAREN expression RPAREN compound_statement
    (54) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (55) iteration_statement -> . DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON
    (56) iteration_statement -> . DO statement WHILE LPAREN expression RPAREN SEMICOLON
    (57) iteration_statement -> . FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN compound_statement
    (58) iteration_statement -> . FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN statement
    (12) declaration -> . type IDENTIFIER SEMICOLON
    (13) declaration -> . type IDENTIFIER identifiers SEMICOLON
    (14) declaration -> . type assignment SEMICOLON
    (15) declaration -> . assignment SEMICOLON
    (16) declaration -> . function_call SEMICOLON
    (17) declaration -> . array_usage SEMICOLON
    (18) declaration -> . type array_usage SEMICOLON
    (59) selection_statement -> . IF LPAREN expression RPAREN compound_statement
    (60) selection_statement -> . IF LPAREN expression RPAREN statement
    (61) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE compound_statement
    (62) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE statement
    (63) selection_statement -> . IF LPAREN expression RPAREN statement ELSE compound_statement
    (64) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (65) return_statement -> . RETURN SEMICOLON
    (66) return_statement -> . RETURN expression SEMICOLON
    (51) cout_statement -> . COUT LESS LESS expression SEMICOLON
    (52) cout_statement -> . COUT LESS LESS expression LESS LESS expression SEMICOLON
    (50) cin_statement -> . CIN GREATER GREATER IDENTIFIER SEMICOLON
    (86) type -> . BOOL
    (87) type -> . INT
    (88) type -> . FLOAT
    (89) type -> . CHAR
    (90) type -> . VOID
    (19) assignment -> . IDENTIFIER EQUALS expression
    (20) assignment -> . IDENTIFIER PLUS EQUALS expression
    (21) assignment -> . IDENTIFIER MINUS EQUALS expression
    (25) function_call -> . IDENTIFIER LPAREN RPAREN
    (26) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (27) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (32) array_usage -> . IDENTIFIER LBRACKET elements RBRACKET
    (33) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET

    LBRACE          shift and go to state 119
    WHILE           shift and go to state 131
    DO              shift and go to state 132
    FOR             shift and go to state 133
    IF              shift and go to state 139
    RETURN          shift and go to state 140
    COUT            shift and go to state 141
    CIN             shift and go to state 142
    BOOL            shift and go to state 19
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22
    VOID            shift and go to state 23
    IDENTIFIER      shift and go to state 135

    compound_statement             shift and go to state 187
    statement                      shift and go to state 188
    iteration_statement            shift and go to state 125
    declaration                    shift and go to state 126
    selection_statement            shift and go to state 127
    return_statement               shift and go to state 128
    cout_statement                 shift and go to state 129
    cin_statement                  shift and go to state 130
    type                           shift and go to state 134
    assignment                     shift and go to state 136
    function_call                  shift and go to state 137
    array_usage                    shift and go to state 138

state 179

    (51) cout_statement -> COUT LESS LESS expression . SEMICOLON
    (52) cout_statement -> COUT LESS LESS expression . LESS LESS expression SEMICOLON
    (91) math_expression -> expression . PLUS expression
    (92) math_expression -> expression . MINUS expression
    (93) math_expression -> expression . TIMES expression
    (94) math_expression -> expression . DIVIDE expression
    (95) math_expression -> expression . MODULUS expression
    (96) math_expression -> expression . PLUS PLUS
    (97) math_expression -> expression . MINUS MINUS
    (67) conditional_expression -> expression . ISEQUAL expression
    (68) conditional_expression -> expression . NOT EQUALS expression
    (69) conditional_expression -> expression . LESS expression
    (70) conditional_expression -> expression . LESS EQUALS expression
    (71) conditional_expression -> expression . GREATER expression
    (72) conditional_expression -> expression . GREATER EQUALS expression
    (73) conditional_expression -> expression . AND expression
    (74) conditional_expression -> expression . OR expression

    SEMICOLON       shift and go to state 190
    LESS            shift and go to state 189
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    MODULUS         shift and go to state 35
    ISEQUAL         shift and go to state 36
    NOT             shift and go to state 37
    GREATER         shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41


state 180

    (50) cin_statement -> CIN GREATER GREATER IDENTIFIER . SEMICOLON

    SEMICOLON       shift and go to state 191


state 181

    (53) iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .

    RBRACE          reduce using rule 53 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    WHILE           reduce using rule 53 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    DO              reduce using rule 53 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    FOR             reduce using rule 53 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    IF              reduce using rule 53 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    RETURN          reduce using rule 53 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    COUT            reduce using rule 53 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    CIN             reduce using rule 53 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    BOOL            reduce using rule 53 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    INT             reduce using rule 53 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    FLOAT           reduce using rule 53 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    CHAR            reduce using rule 53 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    VOID            reduce using rule 53 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    IDENTIFIER      reduce using rule 53 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)
    ELSE            reduce using rule 53 (iteration_statement -> WHILE LPAREN expression RPAREN compound_statement .)


state 182

    (54) iteration_statement -> WHILE LPAREN expression RPAREN statement .

    RBRACE          reduce using rule 54 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 54 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    DO              reduce using rule 54 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    FOR             reduce using rule 54 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    IF              reduce using rule 54 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 54 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    COUT            reduce using rule 54 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    CIN             reduce using rule 54 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    BOOL            reduce using rule 54 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    INT             reduce using rule 54 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    FLOAT           reduce using rule 54 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    CHAR            reduce using rule 54 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    VOID            reduce using rule 54 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    IDENTIFIER      reduce using rule 54 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    ELSE            reduce using rule 54 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)


state 183

    (55) iteration_statement -> DO compound_statement WHILE LPAREN expression . RPAREN SEMICOLON
    (91) math_expression -> expression . PLUS expression
    (92) math_expression -> expression . MINUS expression
    (93) math_expression -> expression . TIMES expression
    (94) math_expression -> expression . DIVIDE expression
    (95) math_expression -> expression . MODULUS expression
    (96) math_expression -> expression . PLUS PLUS
    (97) math_expression -> expression . MINUS MINUS
    (67) conditional_expression -> expression . ISEQUAL expression
    (68) conditional_expression -> expression . NOT EQUALS expression
    (69) conditional_expression -> expression . LESS expression
    (70) conditional_expression -> expression . LESS EQUALS expression
    (71) conditional_expression -> expression . GREATER expression
    (72) conditional_expression -> expression . GREATER EQUALS expression
    (73) conditional_expression -> expression . AND expression
    (74) conditional_expression -> expression . OR expression

    RPAREN          shift and go to state 192
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    MODULUS         shift and go to state 35
    ISEQUAL         shift and go to state 36
    NOT             shift and go to state 37
    LESS            shift and go to state 38
    GREATER         shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41


state 184

    (56) iteration_statement -> DO statement WHILE LPAREN expression . RPAREN SEMICOLON
    (91) math_expression -> expression . PLUS expression
    (92) math_expression -> expression . MINUS expression
    (93) math_expression -> expression . TIMES expression
    (94) math_expression -> expression . DIVIDE expression
    (95) math_expression -> expression . MODULUS expression
    (96) math_expression -> expression . PLUS PLUS
    (97) math_expression -> expression . MINUS MINUS
    (67) conditional_expression -> expression . ISEQUAL expression
    (68) conditional_expression -> expression . NOT EQUALS expression
    (69) conditional_expression -> expression . LESS expression
    (70) conditional_expression -> expression . LESS EQUALS expression
    (71) conditional_expression -> expression . GREATER expression
    (72) conditional_expression -> expression . GREATER EQUALS expression
    (73) conditional_expression -> expression . AND expression
    (74) conditional_expression -> expression . OR expression

    RPAREN          shift and go to state 193
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    MODULUS         shift and go to state 35
    ISEQUAL         shift and go to state 36
    NOT             shift and go to state 37
    LESS            shift and go to state 38
    GREATER         shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41


state 185

    (57) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS . number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN compound_statement
    (58) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS . number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN statement
    (30) number -> . INTEGER
    (31) number -> . FLOATINGPOINT

    INTEGER         shift and go to state 26
    FLOATINGPOINT   shift and go to state 27

    number                         shift and go to state 194

state 186

    (24) identifiers -> COMMA IDENTIFIER identifiers .

    SEMICOLON       reduce using rule 24 (identifiers -> COMMA IDENTIFIER identifiers .)


state 187

    (59) selection_statement -> IF LPAREN expression RPAREN compound_statement .
    (61) selection_statement -> IF LPAREN expression RPAREN compound_statement . ELSE compound_statement
    (62) selection_statement -> IF LPAREN expression RPAREN compound_statement . ELSE statement

  ! shift/reduce conflict for ELSE resolved as shift
    RBRACE          reduce using rule 59 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    WHILE           reduce using rule 59 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    DO              reduce using rule 59 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    FOR             reduce using rule 59 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    IF              reduce using rule 59 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    RETURN          reduce using rule 59 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    COUT            reduce using rule 59 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    CIN             reduce using rule 59 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    BOOL            reduce using rule 59 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    INT             reduce using rule 59 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    FLOAT           reduce using rule 59 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    CHAR            reduce using rule 59 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    VOID            reduce using rule 59 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    IDENTIFIER      reduce using rule 59 (selection_statement -> IF LPAREN expression RPAREN compound_statement .)
    ELSE            shift and go to state 195

  ! ELSE            [ reduce using rule 59 (selection_statement -> IF LPAREN expression RPAREN compound_statement .) ]


state 188

    (60) selection_statement -> IF LPAREN expression RPAREN statement .
    (63) selection_statement -> IF LPAREN expression RPAREN statement . ELSE compound_statement
    (64) selection_statement -> IF LPAREN expression RPAREN statement . ELSE statement

  ! shift/reduce conflict for ELSE resolved as shift
    RBRACE          reduce using rule 60 (selection_statement -> IF LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 60 (selection_statement -> IF LPAREN expression RPAREN statement .)
    DO              reduce using rule 60 (selection_statement -> IF LPAREN expression RPAREN statement .)
    FOR             reduce using rule 60 (selection_statement -> IF LPAREN expression RPAREN statement .)
    IF              reduce using rule 60 (selection_statement -> IF LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 60 (selection_statement -> IF LPAREN expression RPAREN statement .)
    COUT            reduce using rule 60 (selection_statement -> IF LPAREN expression RPAREN statement .)
    CIN             reduce using rule 60 (selection_statement -> IF LPAREN expression RPAREN statement .)
    BOOL            reduce using rule 60 (selection_statement -> IF LPAREN expression RPAREN statement .)
    INT             reduce using rule 60 (selection_statement -> IF LPAREN expression RPAREN statement .)
    FLOAT           reduce using rule 60 (selection_statement -> IF LPAREN expression RPAREN statement .)
    CHAR            reduce using rule 60 (selection_statement -> IF LPAREN expression RPAREN statement .)
    VOID            reduce using rule 60 (selection_statement -> IF LPAREN expression RPAREN statement .)
    IDENTIFIER      reduce using rule 60 (selection_statement -> IF LPAREN expression RPAREN statement .)
    ELSE            shift and go to state 196

  ! ELSE            [ reduce using rule 60 (selection_statement -> IF LPAREN expression RPAREN statement .) ]


state 189

    (52) cout_statement -> COUT LESS LESS expression LESS . LESS expression SEMICOLON
    (69) conditional_expression -> expression LESS . expression
    (70) conditional_expression -> expression LESS . EQUALS expression
    (76) expression -> . BOOLEAN
    (77) expression -> . number
    (78) expression -> . STRING
    (79) expression -> . IDENTIFIER
    (80) expression -> . LETTER
    (81) expression -> . assignment
    (82) expression -> . array_usage
    (83) expression -> . function_call
    (84) expression -> . math_expression
    (85) expression -> . conditional_expression
    (30) number -> . INTEGER
    (31) number -> . FLOATINGPOINT
    (19) assignment -> . IDENTIFIER EQUALS expression
    (20) assignment -> . IDENTIFIER PLUS EQUALS expression
    (21) assignment -> . IDENTIFIER MINUS EQUALS expression
    (32) array_usage -> . IDENTIFIER LBRACKET elements RBRACKET
    (33) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (25) function_call -> . IDENTIFIER LPAREN RPAREN
    (26) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (27) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (91) math_expression -> . expression PLUS expression
    (92) math_expression -> . expression MINUS expression
    (93) math_expression -> . expression TIMES expression
    (94) math_expression -> . expression DIVIDE expression
    (95) math_expression -> . expression MODULUS expression
    (96) math_expression -> . expression PLUS PLUS
    (97) math_expression -> . expression MINUS MINUS
    (67) conditional_expression -> . expression ISEQUAL expression
    (68) conditional_expression -> . expression NOT EQUALS expression
    (69) conditional_expression -> . expression LESS expression
    (70) conditional_expression -> . expression LESS EQUALS expression
    (71) conditional_expression -> . expression GREATER expression
    (72) conditional_expression -> . expression GREATER EQUALS expression
    (73) conditional_expression -> . expression AND expression
    (74) conditional_expression -> . expression OR expression
    (75) conditional_expression -> . NOT expression

    LESS            shift and go to state 197
    EQUALS          shift and go to state 67
    BOOLEAN         shift and go to state 12
    STRING          shift and go to state 14
    IDENTIFIER      shift and go to state 55
    LETTER          shift and go to state 15
    INTEGER         shift and go to state 26
    FLOATINGPOINT   shift and go to state 27
    NOT             shift and go to state 28

    expression                     shift and go to state 66
    number                         shift and go to state 13
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 56
    function_call                  shift and go to state 16
    math_expression                shift and go to state 17
    conditional_expression         shift and go to state 18

state 190

    (51) cout_statement -> COUT LESS LESS expression SEMICOLON .

    RBRACE          reduce using rule 51 (cout_statement -> COUT LESS LESS expression SEMICOLON .)
    WHILE           reduce using rule 51 (cout_statement -> COUT LESS LESS expression SEMICOLON .)
    DO              reduce using rule 51 (cout_statement -> COUT LESS LESS expression SEMICOLON .)
    FOR             reduce using rule 51 (cout_statement -> COUT LESS LESS expression SEMICOLON .)
    IF              reduce using rule 51 (cout_statement -> COUT LESS LESS expression SEMICOLON .)
    RETURN          reduce using rule 51 (cout_statement -> COUT LESS LESS expression SEMICOLON .)
    COUT            reduce using rule 51 (cout_statement -> COUT LESS LESS expression SEMICOLON .)
    CIN             reduce using rule 51 (cout_statement -> COUT LESS LESS expression SEMICOLON .)
    BOOL            reduce using rule 51 (cout_statement -> COUT LESS LESS expression SEMICOLON .)
    INT             reduce using rule 51 (cout_statement -> COUT LESS LESS expression SEMICOLON .)
    FLOAT           reduce using rule 51 (cout_statement -> COUT LESS LESS expression SEMICOLON .)
    CHAR            reduce using rule 51 (cout_statement -> COUT LESS LESS expression SEMICOLON .)
    VOID            reduce using rule 51 (cout_statement -> COUT LESS LESS expression SEMICOLON .)
    IDENTIFIER      reduce using rule 51 (cout_statement -> COUT LESS LESS expression SEMICOLON .)
    ELSE            reduce using rule 51 (cout_statement -> COUT LESS LESS expression SEMICOLON .)


state 191

    (50) cin_statement -> CIN GREATER GREATER IDENTIFIER SEMICOLON .

    RBRACE          reduce using rule 50 (cin_statement -> CIN GREATER GREATER IDENTIFIER SEMICOLON .)
    WHILE           reduce using rule 50 (cin_statement -> CIN GREATER GREATER IDENTIFIER SEMICOLON .)
    DO              reduce using rule 50 (cin_statement -> CIN GREATER GREATER IDENTIFIER SEMICOLON .)
    FOR             reduce using rule 50 (cin_statement -> CIN GREATER GREATER IDENTIFIER SEMICOLON .)
    IF              reduce using rule 50 (cin_statement -> CIN GREATER GREATER IDENTIFIER SEMICOLON .)
    RETURN          reduce using rule 50 (cin_statement -> CIN GREATER GREATER IDENTIFIER SEMICOLON .)
    COUT            reduce using rule 50 (cin_statement -> CIN GREATER GREATER IDENTIFIER SEMICOLON .)
    CIN             reduce using rule 50 (cin_statement -> CIN GREATER GREATER IDENTIFIER SEMICOLON .)
    BOOL            reduce using rule 50 (cin_statement -> CIN GREATER GREATER IDENTIFIER SEMICOLON .)
    INT             reduce using rule 50 (cin_statement -> CIN GREATER GREATER IDENTIFIER SEMICOLON .)
    FLOAT           reduce using rule 50 (cin_statement -> CIN GREATER GREATER IDENTIFIER SEMICOLON .)
    CHAR            reduce using rule 50 (cin_statement -> CIN GREATER GREATER IDENTIFIER SEMICOLON .)
    VOID            reduce using rule 50 (cin_statement -> CIN GREATER GREATER IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 50 (cin_statement -> CIN GREATER GREATER IDENTIFIER SEMICOLON .)
    ELSE            reduce using rule 50 (cin_statement -> CIN GREATER GREATER IDENTIFIER SEMICOLON .)


state 192

    (55) iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 198


state 193

    (56) iteration_statement -> DO statement WHILE LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 199


state 194

    (57) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number . SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN compound_statement
    (58) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number . SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN statement

    SEMICOLON       shift and go to state 200


state 195

    (61) selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE . compound_statement
    (62) selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE . statement
    (40) compound_statement -> . LBRACE statement_list RBRACE
    (43) statement -> . iteration_statement
    (44) statement -> . declaration
    (45) statement -> . selection_statement
    (46) statement -> . return_statement
    (47) statement -> . cout_statement
    (48) statement -> . cin_statement
    (53) iteration_statement -> . WHILE LPAREN expression RPAREN compound_statement
    (54) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (55) iteration_statement -> . DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON
    (56) iteration_statement -> . DO statement WHILE LPAREN expression RPAREN SEMICOLON
    (57) iteration_statement -> . FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN compound_statement
    (58) iteration_statement -> . FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN statement
    (12) declaration -> . type IDENTIFIER SEMICOLON
    (13) declaration -> . type IDENTIFIER identifiers SEMICOLON
    (14) declaration -> . type assignment SEMICOLON
    (15) declaration -> . assignment SEMICOLON
    (16) declaration -> . function_call SEMICOLON
    (17) declaration -> . array_usage SEMICOLON
    (18) declaration -> . type array_usage SEMICOLON
    (59) selection_statement -> . IF LPAREN expression RPAREN compound_statement
    (60) selection_statement -> . IF LPAREN expression RPAREN statement
    (61) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE compound_statement
    (62) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE statement
    (63) selection_statement -> . IF LPAREN expression RPAREN statement ELSE compound_statement
    (64) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (65) return_statement -> . RETURN SEMICOLON
    (66) return_statement -> . RETURN expression SEMICOLON
    (51) cout_statement -> . COUT LESS LESS expression SEMICOLON
    (52) cout_statement -> . COUT LESS LESS expression LESS LESS expression SEMICOLON
    (50) cin_statement -> . CIN GREATER GREATER IDENTIFIER SEMICOLON
    (86) type -> . BOOL
    (87) type -> . INT
    (88) type -> . FLOAT
    (89) type -> . CHAR
    (90) type -> . VOID
    (19) assignment -> . IDENTIFIER EQUALS expression
    (20) assignment -> . IDENTIFIER PLUS EQUALS expression
    (21) assignment -> . IDENTIFIER MINUS EQUALS expression
    (25) function_call -> . IDENTIFIER LPAREN RPAREN
    (26) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (27) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (32) array_usage -> . IDENTIFIER LBRACKET elements RBRACKET
    (33) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET

    LBRACE          shift and go to state 119
    WHILE           shift and go to state 131
    DO              shift and go to state 132
    FOR             shift and go to state 133
    IF              shift and go to state 139
    RETURN          shift and go to state 140
    COUT            shift and go to state 141
    CIN             shift and go to state 142
    BOOL            shift and go to state 19
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22
    VOID            shift and go to state 23
    IDENTIFIER      shift and go to state 135

    compound_statement             shift and go to state 201
    statement                      shift and go to state 202
    iteration_statement            shift and go to state 125
    declaration                    shift and go to state 126
    selection_statement            shift and go to state 127
    return_statement               shift and go to state 128
    cout_statement                 shift and go to state 129
    cin_statement                  shift and go to state 130
    type                           shift and go to state 134
    assignment                     shift and go to state 136
    function_call                  shift and go to state 137
    array_usage                    shift and go to state 138

state 196

    (63) selection_statement -> IF LPAREN expression RPAREN statement ELSE . compound_statement
    (64) selection_statement -> IF LPAREN expression RPAREN statement ELSE . statement
    (40) compound_statement -> . LBRACE statement_list RBRACE
    (43) statement -> . iteration_statement
    (44) statement -> . declaration
    (45) statement -> . selection_statement
    (46) statement -> . return_statement
    (47) statement -> . cout_statement
    (48) statement -> . cin_statement
    (53) iteration_statement -> . WHILE LPAREN expression RPAREN compound_statement
    (54) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (55) iteration_statement -> . DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON
    (56) iteration_statement -> . DO statement WHILE LPAREN expression RPAREN SEMICOLON
    (57) iteration_statement -> . FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN compound_statement
    (58) iteration_statement -> . FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN statement
    (12) declaration -> . type IDENTIFIER SEMICOLON
    (13) declaration -> . type IDENTIFIER identifiers SEMICOLON
    (14) declaration -> . type assignment SEMICOLON
    (15) declaration -> . assignment SEMICOLON
    (16) declaration -> . function_call SEMICOLON
    (17) declaration -> . array_usage SEMICOLON
    (18) declaration -> . type array_usage SEMICOLON
    (59) selection_statement -> . IF LPAREN expression RPAREN compound_statement
    (60) selection_statement -> . IF LPAREN expression RPAREN statement
    (61) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE compound_statement
    (62) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE statement
    (63) selection_statement -> . IF LPAREN expression RPAREN statement ELSE compound_statement
    (64) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (65) return_statement -> . RETURN SEMICOLON
    (66) return_statement -> . RETURN expression SEMICOLON
    (51) cout_statement -> . COUT LESS LESS expression SEMICOLON
    (52) cout_statement -> . COUT LESS LESS expression LESS LESS expression SEMICOLON
    (50) cin_statement -> . CIN GREATER GREATER IDENTIFIER SEMICOLON
    (86) type -> . BOOL
    (87) type -> . INT
    (88) type -> . FLOAT
    (89) type -> . CHAR
    (90) type -> . VOID
    (19) assignment -> . IDENTIFIER EQUALS expression
    (20) assignment -> . IDENTIFIER PLUS EQUALS expression
    (21) assignment -> . IDENTIFIER MINUS EQUALS expression
    (25) function_call -> . IDENTIFIER LPAREN RPAREN
    (26) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (27) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (32) array_usage -> . IDENTIFIER LBRACKET elements RBRACKET
    (33) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET

    LBRACE          shift and go to state 119
    WHILE           shift and go to state 131
    DO              shift and go to state 132
    FOR             shift and go to state 133
    IF              shift and go to state 139
    RETURN          shift and go to state 140
    COUT            shift and go to state 141
    CIN             shift and go to state 142
    BOOL            shift and go to state 19
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22
    VOID            shift and go to state 23
    IDENTIFIER      shift and go to state 135

    statement                      shift and go to state 203
    compound_statement             shift and go to state 204
    iteration_statement            shift and go to state 125
    declaration                    shift and go to state 126
    selection_statement            shift and go to state 127
    return_statement               shift and go to state 128
    cout_statement                 shift and go to state 129
    cin_statement                  shift and go to state 130
    type                           shift and go to state 134
    assignment                     shift and go to state 136
    function_call                  shift and go to state 137
    array_usage                    shift and go to state 138

state 197

    (52) cout_statement -> COUT LESS LESS expression LESS LESS . expression SEMICOLON
    (76) expression -> . BOOLEAN
    (77) expression -> . number
    (78) expression -> . STRING
    (79) expression -> . IDENTIFIER
    (80) expression -> . LETTER
    (81) expression -> . assignment
    (82) expression -> . array_usage
    (83) expression -> . function_call
    (84) expression -> . math_expression
    (85) expression -> . conditional_expression
    (30) number -> . INTEGER
    (31) number -> . FLOATINGPOINT
    (19) assignment -> . IDENTIFIER EQUALS expression
    (20) assignment -> . IDENTIFIER PLUS EQUALS expression
    (21) assignment -> . IDENTIFIER MINUS EQUALS expression
    (32) array_usage -> . IDENTIFIER LBRACKET elements RBRACKET
    (33) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (25) function_call -> . IDENTIFIER LPAREN RPAREN
    (26) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (27) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (91) math_expression -> . expression PLUS expression
    (92) math_expression -> . expression MINUS expression
    (93) math_expression -> . expression TIMES expression
    (94) math_expression -> . expression DIVIDE expression
    (95) math_expression -> . expression MODULUS expression
    (96) math_expression -> . expression PLUS PLUS
    (97) math_expression -> . expression MINUS MINUS
    (67) conditional_expression -> . expression ISEQUAL expression
    (68) conditional_expression -> . expression NOT EQUALS expression
    (69) conditional_expression -> . expression LESS expression
    (70) conditional_expression -> . expression LESS EQUALS expression
    (71) conditional_expression -> . expression GREATER expression
    (72) conditional_expression -> . expression GREATER EQUALS expression
    (73) conditional_expression -> . expression AND expression
    (74) conditional_expression -> . expression OR expression
    (75) conditional_expression -> . NOT expression

    BOOLEAN         shift and go to state 12
    STRING          shift and go to state 14
    IDENTIFIER      shift and go to state 55
    LETTER          shift and go to state 15
    INTEGER         shift and go to state 26
    FLOATINGPOINT   shift and go to state 27
    NOT             shift and go to state 28

    expression                     shift and go to state 205
    number                         shift and go to state 13
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 56
    function_call                  shift and go to state 16
    math_expression                shift and go to state 17
    conditional_expression         shift and go to state 18

state 198

    (55) iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .

    RBRACE          reduce using rule 55 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 55 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    DO              reduce using rule 55 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    FOR             reduce using rule 55 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 55 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 55 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    COUT            reduce using rule 55 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    CIN             reduce using rule 55 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    BOOL            reduce using rule 55 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    INT             reduce using rule 55 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    FLOAT           reduce using rule 55 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    CHAR            reduce using rule 55 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    VOID            reduce using rule 55 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 55 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)
    ELSE            reduce using rule 55 (iteration_statement -> DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON .)


state 199

    (56) iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .

    RBRACE          reduce using rule 56 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 56 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    DO              reduce using rule 56 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    FOR             reduce using rule 56 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 56 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 56 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    COUT            reduce using rule 56 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    CIN             reduce using rule 56 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    BOOL            reduce using rule 56 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    INT             reduce using rule 56 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    FLOAT           reduce using rule 56 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    CHAR            reduce using rule 56 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    VOID            reduce using rule 56 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 56 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)
    ELSE            reduce using rule 56 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMICOLON .)


state 200

    (57) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON . IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN compound_statement
    (58) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON . IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN statement

    IDENTIFIER      shift and go to state 206


state 201

    (61) selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .

    RBRACE          reduce using rule 61 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    WHILE           reduce using rule 61 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    DO              reduce using rule 61 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    FOR             reduce using rule 61 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    IF              reduce using rule 61 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    RETURN          reduce using rule 61 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    COUT            reduce using rule 61 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    CIN             reduce using rule 61 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    BOOL            reduce using rule 61 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    INT             reduce using rule 61 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    FLOAT           reduce using rule 61 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    CHAR            reduce using rule 61 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    VOID            reduce using rule 61 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    IDENTIFIER      reduce using rule 61 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    ELSE            reduce using rule 61 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)


state 202

    (62) selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .

    RBRACE          reduce using rule 62 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    WHILE           reduce using rule 62 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    DO              reduce using rule 62 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    FOR             reduce using rule 62 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    IF              reduce using rule 62 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    RETURN          reduce using rule 62 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    COUT            reduce using rule 62 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    CIN             reduce using rule 62 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    BOOL            reduce using rule 62 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    INT             reduce using rule 62 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    FLOAT           reduce using rule 62 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    CHAR            reduce using rule 62 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    VOID            reduce using rule 62 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    IDENTIFIER      reduce using rule 62 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)
    ELSE            reduce using rule 62 (selection_statement -> IF LPAREN expression RPAREN compound_statement ELSE statement .)


state 203

    (64) selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .

    RBRACE          reduce using rule 64 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    WHILE           reduce using rule 64 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    DO              reduce using rule 64 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    FOR             reduce using rule 64 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    IF              reduce using rule 64 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    RETURN          reduce using rule 64 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    COUT            reduce using rule 64 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    CIN             reduce using rule 64 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    BOOL            reduce using rule 64 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    INT             reduce using rule 64 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    FLOAT           reduce using rule 64 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    CHAR            reduce using rule 64 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    VOID            reduce using rule 64 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    IDENTIFIER      reduce using rule 64 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    ELSE            reduce using rule 64 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)


state 204

    (63) selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .

    RBRACE          reduce using rule 63 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    WHILE           reduce using rule 63 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    DO              reduce using rule 63 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    FOR             reduce using rule 63 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    IF              reduce using rule 63 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    RETURN          reduce using rule 63 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    COUT            reduce using rule 63 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    CIN             reduce using rule 63 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    BOOL            reduce using rule 63 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    INT             reduce using rule 63 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    FLOAT           reduce using rule 63 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    CHAR            reduce using rule 63 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    VOID            reduce using rule 63 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    IDENTIFIER      reduce using rule 63 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)
    ELSE            reduce using rule 63 (selection_statement -> IF LPAREN expression RPAREN statement ELSE compound_statement .)


state 205

    (52) cout_statement -> COUT LESS LESS expression LESS LESS expression . SEMICOLON
    (91) math_expression -> expression . PLUS expression
    (92) math_expression -> expression . MINUS expression
    (93) math_expression -> expression . TIMES expression
    (94) math_expression -> expression . DIVIDE expression
    (95) math_expression -> expression . MODULUS expression
    (96) math_expression -> expression . PLUS PLUS
    (97) math_expression -> expression . MINUS MINUS
    (67) conditional_expression -> expression . ISEQUAL expression
    (68) conditional_expression -> expression . NOT EQUALS expression
    (69) conditional_expression -> expression . LESS expression
    (70) conditional_expression -> expression . LESS EQUALS expression
    (71) conditional_expression -> expression . GREATER expression
    (72) conditional_expression -> expression . GREATER EQUALS expression
    (73) conditional_expression -> expression . AND expression
    (74) conditional_expression -> expression . OR expression

    SEMICOLON       shift and go to state 207
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    MODULUS         shift and go to state 35
    ISEQUAL         shift and go to state 36
    NOT             shift and go to state 37
    LESS            shift and go to state 38
    GREATER         shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41


state 206

    (57) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER . LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN compound_statement
    (58) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER . LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN statement

    LESS            shift and go to state 208


state 207

    (52) cout_statement -> COUT LESS LESS expression LESS LESS expression SEMICOLON .

    RBRACE          reduce using rule 52 (cout_statement -> COUT LESS LESS expression LESS LESS expression SEMICOLON .)
    WHILE           reduce using rule 52 (cout_statement -> COUT LESS LESS expression LESS LESS expression SEMICOLON .)
    DO              reduce using rule 52 (cout_statement -> COUT LESS LESS expression LESS LESS expression SEMICOLON .)
    FOR             reduce using rule 52 (cout_statement -> COUT LESS LESS expression LESS LESS expression SEMICOLON .)
    IF              reduce using rule 52 (cout_statement -> COUT LESS LESS expression LESS LESS expression SEMICOLON .)
    RETURN          reduce using rule 52 (cout_statement -> COUT LESS LESS expression LESS LESS expression SEMICOLON .)
    COUT            reduce using rule 52 (cout_statement -> COUT LESS LESS expression LESS LESS expression SEMICOLON .)
    CIN             reduce using rule 52 (cout_statement -> COUT LESS LESS expression LESS LESS expression SEMICOLON .)
    BOOL            reduce using rule 52 (cout_statement -> COUT LESS LESS expression LESS LESS expression SEMICOLON .)
    INT             reduce using rule 52 (cout_statement -> COUT LESS LESS expression LESS LESS expression SEMICOLON .)
    FLOAT           reduce using rule 52 (cout_statement -> COUT LESS LESS expression LESS LESS expression SEMICOLON .)
    CHAR            reduce using rule 52 (cout_statement -> COUT LESS LESS expression LESS LESS expression SEMICOLON .)
    VOID            reduce using rule 52 (cout_statement -> COUT LESS LESS expression LESS LESS expression SEMICOLON .)
    IDENTIFIER      reduce using rule 52 (cout_statement -> COUT LESS LESS expression LESS LESS expression SEMICOLON .)
    ELSE            reduce using rule 52 (cout_statement -> COUT LESS LESS expression LESS LESS expression SEMICOLON .)


state 208

    (57) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS . EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN compound_statement
    (58) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS . EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN statement

    EQUALS          shift and go to state 209


state 209

    (57) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS . expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN compound_statement
    (58) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS . expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN statement
    (76) expression -> . BOOLEAN
    (77) expression -> . number
    (78) expression -> . STRING
    (79) expression -> . IDENTIFIER
    (80) expression -> . LETTER
    (81) expression -> . assignment
    (82) expression -> . array_usage
    (83) expression -> . function_call
    (84) expression -> . math_expression
    (85) expression -> . conditional_expression
    (30) number -> . INTEGER
    (31) number -> . FLOATINGPOINT
    (19) assignment -> . IDENTIFIER EQUALS expression
    (20) assignment -> . IDENTIFIER PLUS EQUALS expression
    (21) assignment -> . IDENTIFIER MINUS EQUALS expression
    (32) array_usage -> . IDENTIFIER LBRACKET elements RBRACKET
    (33) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET
    (25) function_call -> . IDENTIFIER LPAREN RPAREN
    (26) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (27) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (91) math_expression -> . expression PLUS expression
    (92) math_expression -> . expression MINUS expression
    (93) math_expression -> . expression TIMES expression
    (94) math_expression -> . expression DIVIDE expression
    (95) math_expression -> . expression MODULUS expression
    (96) math_expression -> . expression PLUS PLUS
    (97) math_expression -> . expression MINUS MINUS
    (67) conditional_expression -> . expression ISEQUAL expression
    (68) conditional_expression -> . expression NOT EQUALS expression
    (69) conditional_expression -> . expression LESS expression
    (70) conditional_expression -> . expression LESS EQUALS expression
    (71) conditional_expression -> . expression GREATER expression
    (72) conditional_expression -> . expression GREATER EQUALS expression
    (73) conditional_expression -> . expression AND expression
    (74) conditional_expression -> . expression OR expression
    (75) conditional_expression -> . NOT expression

    BOOLEAN         shift and go to state 12
    STRING          shift and go to state 14
    IDENTIFIER      shift and go to state 55
    LETTER          shift and go to state 15
    INTEGER         shift and go to state 26
    FLOATINGPOINT   shift and go to state 27
    NOT             shift and go to state 28

    number                         shift and go to state 13
    expression                     shift and go to state 210
    assignment                     shift and go to state 7
    array_usage                    shift and go to state 56
    function_call                  shift and go to state 16
    math_expression                shift and go to state 17
    conditional_expression         shift and go to state 18

state 210

    (57) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression . SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN compound_statement
    (58) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression . SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN statement
    (91) math_expression -> expression . PLUS expression
    (92) math_expression -> expression . MINUS expression
    (93) math_expression -> expression . TIMES expression
    (94) math_expression -> expression . DIVIDE expression
    (95) math_expression -> expression . MODULUS expression
    (96) math_expression -> expression . PLUS PLUS
    (97) math_expression -> expression . MINUS MINUS
    (67) conditional_expression -> expression . ISEQUAL expression
    (68) conditional_expression -> expression . NOT EQUALS expression
    (69) conditional_expression -> expression . LESS expression
    (70) conditional_expression -> expression . LESS EQUALS expression
    (71) conditional_expression -> expression . GREATER expression
    (72) conditional_expression -> expression . GREATER EQUALS expression
    (73) conditional_expression -> expression . AND expression
    (74) conditional_expression -> expression . OR expression

    SEMICOLON       shift and go to state 211
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    MODULUS         shift and go to state 35
    ISEQUAL         shift and go to state 36
    NOT             shift and go to state 37
    LESS            shift and go to state 38
    GREATER         shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41


state 211

    (57) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON . IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN compound_statement
    (58) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON . IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN statement

    IDENTIFIER      shift and go to state 212


state 212

    (57) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER . EQUALS IDENTIFIER PLUS INTEGER LPAREN compound_statement
    (58) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER . EQUALS IDENTIFIER PLUS INTEGER LPAREN statement

    EQUALS          shift and go to state 213


state 213

    (57) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS . IDENTIFIER PLUS INTEGER LPAREN compound_statement
    (58) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS . IDENTIFIER PLUS INTEGER LPAREN statement

    IDENTIFIER      shift and go to state 214


state 214

    (57) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER . PLUS INTEGER LPAREN compound_statement
    (58) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER . PLUS INTEGER LPAREN statement

    PLUS            shift and go to state 215


state 215

    (57) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS . INTEGER LPAREN compound_statement
    (58) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS . INTEGER LPAREN statement

    INTEGER         shift and go to state 216


state 216

    (57) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER . LPAREN compound_statement
    (58) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER . LPAREN statement

    LPAREN          shift and go to state 217


state 217

    (57) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN . compound_statement
    (58) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN . statement
    (40) compound_statement -> . LBRACE statement_list RBRACE
    (43) statement -> . iteration_statement
    (44) statement -> . declaration
    (45) statement -> . selection_statement
    (46) statement -> . return_statement
    (47) statement -> . cout_statement
    (48) statement -> . cin_statement
    (53) iteration_statement -> . WHILE LPAREN expression RPAREN compound_statement
    (54) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (55) iteration_statement -> . DO compound_statement WHILE LPAREN expression RPAREN SEMICOLON
    (56) iteration_statement -> . DO statement WHILE LPAREN expression RPAREN SEMICOLON
    (57) iteration_statement -> . FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN compound_statement
    (58) iteration_statement -> . FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN statement
    (12) declaration -> . type IDENTIFIER SEMICOLON
    (13) declaration -> . type IDENTIFIER identifiers SEMICOLON
    (14) declaration -> . type assignment SEMICOLON
    (15) declaration -> . assignment SEMICOLON
    (16) declaration -> . function_call SEMICOLON
    (17) declaration -> . array_usage SEMICOLON
    (18) declaration -> . type array_usage SEMICOLON
    (59) selection_statement -> . IF LPAREN expression RPAREN compound_statement
    (60) selection_statement -> . IF LPAREN expression RPAREN statement
    (61) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE compound_statement
    (62) selection_statement -> . IF LPAREN expression RPAREN compound_statement ELSE statement
    (63) selection_statement -> . IF LPAREN expression RPAREN statement ELSE compound_statement
    (64) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (65) return_statement -> . RETURN SEMICOLON
    (66) return_statement -> . RETURN expression SEMICOLON
    (51) cout_statement -> . COUT LESS LESS expression SEMICOLON
    (52) cout_statement -> . COUT LESS LESS expression LESS LESS expression SEMICOLON
    (50) cin_statement -> . CIN GREATER GREATER IDENTIFIER SEMICOLON
    (86) type -> . BOOL
    (87) type -> . INT
    (88) type -> . FLOAT
    (89) type -> . CHAR
    (90) type -> . VOID
    (19) assignment -> . IDENTIFIER EQUALS expression
    (20) assignment -> . IDENTIFIER PLUS EQUALS expression
    (21) assignment -> . IDENTIFIER MINUS EQUALS expression
    (25) function_call -> . IDENTIFIER LPAREN RPAREN
    (26) function_call -> . IDENTIFIER LPAREN expression RPAREN
    (27) function_call -> . IDENTIFIER LPAREN elements RPAREN
    (32) array_usage -> . IDENTIFIER LBRACKET elements RBRACKET
    (33) array_usage -> . IDENTIFIER LBRACKET expression RBRACKET

    LBRACE          shift and go to state 119
    WHILE           shift and go to state 131
    DO              shift and go to state 132
    FOR             shift and go to state 133
    IF              shift and go to state 139
    RETURN          shift and go to state 140
    COUT            shift and go to state 141
    CIN             shift and go to state 142
    BOOL            shift and go to state 19
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22
    VOID            shift and go to state 23
    IDENTIFIER      shift and go to state 135

    type                           shift and go to state 134
    compound_statement             shift and go to state 218
    statement                      shift and go to state 219
    iteration_statement            shift and go to state 125
    declaration                    shift and go to state 126
    selection_statement            shift and go to state 127
    return_statement               shift and go to state 128
    cout_statement                 shift and go to state 129
    cin_statement                  shift and go to state 130
    assignment                     shift and go to state 136
    function_call                  shift and go to state 137
    array_usage                    shift and go to state 138

state 218

    (57) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN compound_statement .

    RBRACE          reduce using rule 57 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN compound_statement .)
    WHILE           reduce using rule 57 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN compound_statement .)
    DO              reduce using rule 57 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN compound_statement .)
    FOR             reduce using rule 57 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN compound_statement .)
    IF              reduce using rule 57 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN compound_statement .)
    RETURN          reduce using rule 57 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN compound_statement .)
    COUT            reduce using rule 57 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN compound_statement .)
    CIN             reduce using rule 57 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN compound_statement .)
    BOOL            reduce using rule 57 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN compound_statement .)
    INT             reduce using rule 57 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN compound_statement .)
    FLOAT           reduce using rule 57 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN compound_statement .)
    CHAR            reduce using rule 57 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN compound_statement .)
    VOID            reduce using rule 57 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN compound_statement .)
    IDENTIFIER      reduce using rule 57 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN compound_statement .)
    ELSE            reduce using rule 57 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN compound_statement .)


state 219

    (58) iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN statement .

    RBRACE          reduce using rule 58 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN statement .)
    WHILE           reduce using rule 58 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN statement .)
    DO              reduce using rule 58 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN statement .)
    FOR             reduce using rule 58 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN statement .)
    IF              reduce using rule 58 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN statement .)
    RETURN          reduce using rule 58 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN statement .)
    COUT            reduce using rule 58 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN statement .)
    CIN             reduce using rule 58 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN statement .)
    BOOL            reduce using rule 58 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN statement .)
    INT             reduce using rule 58 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN statement .)
    FLOAT           reduce using rule 58 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN statement .)
    CHAR            reduce using rule 58 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN statement .)
    VOID            reduce using rule 58 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN statement .)
    IDENTIFIER      reduce using rule 58 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN statement .)
    ELSE            reduce using rule 58 (iteration_statement -> FOR LPAREN type IDENTIFIER EQUALS number SEMICOLON IDENTIFIER LESS EQUALS expression SEMICOLON IDENTIFIER EQUALS IDENTIFIER PLUS INTEGER LPAREN statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 6 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 6 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 54 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 54 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 54 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 54 resolved as shift
WARNING: shift/reduce conflict for MODULUS in state 54 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 54 resolved as shift
WARNING: shift/reduce conflict for NOT in state 54 resolved as shift
WARNING: shift/reduce conflict for LESS in state 54 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 54 resolved as shift
WARNING: shift/reduce conflict for AND in state 54 resolved as shift
WARNING: shift/reduce conflict for OR in state 54 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 55 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 55 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 63 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 63 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 63 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 63 resolved as shift
WARNING: shift/reduce conflict for MODULUS in state 63 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 63 resolved as shift
WARNING: shift/reduce conflict for NOT in state 63 resolved as shift
WARNING: shift/reduce conflict for LESS in state 63 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 63 resolved as shift
WARNING: shift/reduce conflict for AND in state 63 resolved as shift
WARNING: shift/reduce conflict for OR in state 63 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 187 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 188 resolved as shift
